{"version":3,"file":"billing-page-routes-59c9f5f3.mjs","sources":["../../../common/resources/client/auth/guards/subscribed-route.tsx","../../../common/resources/client/billing/billing-page/billing-page-layout.tsx","../../../common/resources/client/billing/billing-page/change-payment-method/change-payment-method-layout.tsx","../../../common/resources/client/billing/billing-page/change-payment-method/change-payment-method-page.tsx","../../../common/resources/client/billing/billing-page/use-billing-user.ts","../../../common/resources/client/billing/billing-page/change-payment-method/change-payment-method-done.tsx","../../../common/resources/client/billing/billing-page/billing-plan-panel.tsx","../../../common/resources/client/billing/billing-page/change-plan-page.tsx","../../../common/resources/client/billing/billing-page/requests/use-change-subscription-plan.ts","../../../common/resources/client/billing/billing-page/confirm-plan-change-page.tsx","../../../common/resources/client/billing/billing-page/confirm-plan-cancellation-page.tsx","../../../common/resources/client/billing/billing-page/confirm-plan-renewal-page.tsx","../../../common/resources/client/billing/billing-page/panels/cancelled-plan-panel.tsx","../../../common/resources/client/billing/billing-page/panels/active-plan-panel.tsx","../../../common/resources/client/billing/billing-page/panels/paypal.svg","../../../common/resources/client/billing/billing-page/panels/payment-method-panel.tsx","../../../common/resources/client/billing/billing-page/requests/use-invoices.ts","../../../common/resources/client/billing/billing-page/panels/invoice-history-panel.tsx","../../../common/resources/client/billing/billing-page/billing-page.tsx","../../../common/resources/client/billing/billing-page/billing-page-routes.tsx"],"sourcesContent":["import {useAuth} from '../use-auth';\nimport {ReactElement} from 'react';\nimport {Navigate, Outlet} from 'react-router-dom';\n\ninterface GuestRouteProps {\n  children: ReactElement;\n}\nexport function SubscribedRoute({children}: GuestRouteProps) {\n  const {isSubscribed} = useAuth();\n\n  if (!isSubscribed) {\n    return <Navigate to=\"/pricing\" replace />;\n  }\n\n  return children || <Outlet />;\n}\n","import {useUser} from '../../auth/ui/use-user';\nimport {Navbar} from '../../ui/navigation/navbar/navbar';\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\nimport {useAuth} from '../../auth/use-auth';\nimport {Outlet} from 'react-router-dom';\nimport {Footer} from '../../ui/footer/footer';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {Trans} from '../../i18n/trans';\nimport {Fragment} from 'react';\n\nexport function BillingPageLayout() {\n  const {user} = useAuth();\n  const query = useUser(user!.id, {\n    with: ['subscriptions.product', 'subscriptions.price'],\n  });\n\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Billing\" />\n      </StaticPageTitle>\n      <Navbar menuPosition=\"billing-page\" />\n      <div className=\"flex flex-col\">\n        <div className=\"container mx-auto my-24 px-24 flex-auto\">\n          {query.isLoading ? (\n            <ProgressCircle\n              className=\"my-80\"\n              aria-label=\"Loading user..\"\n              isIndeterminate\n            />\n          ) : (\n            <Outlet />\n          )}\n        </div>\n        <Footer className=\"container mx-auto px-24\" />\n      </div>\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\nimport {Breadcrumb} from '../../../ui/breadcrumbs/breadcrumb';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\nimport {BreadcrumbItem} from '../../../ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '../../../i18n/trans';\nimport {Outlet} from 'react-router-dom';\n\nconst previousUrl = '/billing';\n\nexport function ChangePaymentMethodLayout() {\n  const navigate = useNavigate();\n\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem isLink onSelected={() => navigate(previousUrl)}>\n          <Trans message=\"Billing\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans message=\"Payment method\" />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <h1 className=\"text-3xl font-bold my-32 md:my-64\">\n        <Trans message=\"Change payment method\" />\n      </h1>\n      <Outlet />\n    </Fragment>\n  );\n}\n","import {Trans} from '../../../i18n/trans';\nimport {Button} from '../../../ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {StripeElementsForm} from '../../checkout/stripe/stripe-elements-form';\nimport {useSettings} from '../../../core/settings/use-settings';\n\nconst previousUrl = '/billing';\n\nexport function ChangePaymentMethodPage() {\n  const {base_url} = useSettings();\n\n  return (\n    <div className=\"max-w-[464px]\">\n      <StripeElementsForm\n        type=\"setupIntent\"\n        submitLabel={<Trans message=\"Change\" />}\n        returnUrl={`${base_url}/billing/change-payment-method/done`}\n      />\n      <Button\n        variant=\"outline\"\n        className=\"w-full mt-16\"\n        size=\"md\"\n        to={previousUrl}\n        elementType={Link}\n        type=\"button\"\n      >\n        <Trans message=\"Go back\" />\n      </Button>\n    </div>\n  );\n}\n","import {useUser} from '../../auth/ui/use-user';\nimport {queryClient} from '@common/http/query-client';\n\nexport function useBillingUser() {\n  const query = useUser('me', {\n    with: ['subscriptions.product', 'subscriptions.price'],\n  });\n\n  const subscription = query.data?.user.subscriptions?.[0];\n\n  return {subscription, isLoading: query.isLoading, user: query.data?.user};\n}\n\nexport function invalidateBillingUserQuery() {\n  queryClient.invalidateQueries({queryKey: ['users']});\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport {loadStripe, SetupIntent} from '@stripe/stripe-js';\nimport {message} from '../../../i18n/message';\nimport {apiClient} from '../../../http/query-client';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\nimport {\n  BillingRedirectMessage,\n  BillingRedirectMessageConfig,\n} from '../../billing-redirect-message';\nimport {invalidateBillingUserQuery} from '../use-billing-user';\nimport {useSettings} from '../../../core/settings/use-settings';\n\nconst previousUrl = '/billing';\n\nexport function ChangePaymentMethodDone() {\n  const {\n    billing: {stripe_public_key},\n  } = useSettings();\n  const navigate = useNavigate();\n\n  const [params] = useSearchParams();\n  const clientSecret = params.get('setup_intent_client_secret');\n\n  const [messageConfig, setMessageConfig] =\n    useState<BillingRedirectMessageConfig>();\n\n  const stripeInitiated = useRef<boolean>();\n\n  useEffect(() => {\n    if (stripeInitiated.current || !clientSecret) return;\n    loadStripe(stripe_public_key!).then(stripe => {\n      if (!stripe) {\n        setMessageConfig(getRedirectMessageConfig());\n        return;\n      }\n      stripe.retrieveSetupIntent(clientSecret).then(({setupIntent}) => {\n        if (setupIntent?.status === 'succeeded') {\n          changeDefaultPaymentMethod(setupIntent.payment_method as string).then(\n            () => {\n              invalidateBillingUserQuery();\n            }\n          );\n        }\n        setMessageConfig(getRedirectMessageConfig(setupIntent?.status));\n      });\n    });\n    stripeInitiated.current = true;\n  }, [stripe_public_key, clientSecret]);\n\n  if (!clientSecret) {\n    navigate(previousUrl);\n    return null;\n  }\n\n  return <BillingRedirectMessage config={messageConfig} />;\n}\n\nfunction getRedirectMessageConfig(\n  status?: SetupIntent.Status\n): BillingRedirectMessageConfig {\n  switch (status) {\n    case 'succeeded':\n      return {\n        ...redirectMessageDefaults,\n        message: message('Payment method changed successfully!'),\n        status: 'success',\n      };\n    case 'processing':\n      return {\n        ...redirectMessageDefaults,\n        message: message(\n          \"Your request is processing. We'll update you when your payment method is confirmed.\"\n        ),\n        status: 'success',\n      };\n    case 'requires_payment_method':\n      return {\n        ...redirectMessageDefaults,\n        message: message(\n          'Payment method confirmation failed. Please try another payment method.'\n        ),\n        status: 'error',\n      };\n    default:\n      return {\n        ...redirectMessageDefaults,\n        message: message('Something went wrong'),\n        status: 'error',\n      };\n  }\n}\n\nconst redirectMessageDefaults: Omit<\n  BillingRedirectMessageConfig,\n  'message' | 'status'\n> = {\n  link: previousUrl,\n  buttonLabel: message('Go back'),\n};\n\nfunction changeDefaultPaymentMethod(paymentMethodId: string) {\n  return apiClient.post('billing/stripe/change-default-payment-method', {\n    payment_method_id: paymentMethodId,\n  });\n}\n","import {ReactNode} from 'react';\n\ninterface BillingPlanPanelProps {\n  title: ReactNode;\n  children: ReactNode;\n}\nexport function BillingPlanPanel({title, children}: BillingPlanPanelProps) {\n  return (\n    <div className=\"mb-64\">\n      <div className=\"text-sm font-medium uppercase pb-16 mb-16 border-b\">\n        {title}\n      </div>\n      {children}\n    </div>\n  );\n}\n","import {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '../../i18n/trans';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\nimport {BillingPlanPanel} from './billing-plan-panel';\nimport {Product} from '../product';\nimport {\n  findBestPrice,\n  UpsellBillingCycle,\n} from '../pricing-table/find-best-price';\nimport {Fragment, useState} from 'react';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {Button} from '../../ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {useProducts} from '../pricing-table/use-products';\nimport {Price} from '../price';\nimport {useBillingUser} from './use-billing-user';\nimport {CheckIcon} from '../../icons/material/Check';\nimport {Skeleton} from '../../ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {BillingCycleRadio} from '../pricing-table/billing-cycle-radio';\nimport {opacityAnimation} from '../../ui/animation/opacity-animation';\n\nexport function ChangePlanPage() {\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem isLink onSelected={() => navigate('/billing')}>\n          <Trans message=\"Billing\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans message=\"Plans\" />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <h1 className=\"my-32 text-3xl font-bold md:my-64\">\n        <Trans message=\"Change your plan\" />\n      </h1>\n      <BillingPlanPanel title={<Trans message=\"Available plans\" />}>\n        <AnimatePresence initial={false} mode=\"wait\">\n          <PlanList />\n        </AnimatePresence>\n      </BillingPlanPanel>\n    </Fragment>\n  );\n}\n\nfunction PlanList() {\n  const query = useProducts();\n  const [selectedCycle, setSelectedCycle] =\n    useState<UpsellBillingCycle>('monthly');\n\n  if (query.isLoading) {\n    return <PlanSkeleton key=\"plan-skeleton\" />;\n  }\n\n  return (\n    <Fragment key=\"plan-list\">\n      <BillingCycleRadio\n        products={query.data?.products}\n        selectedCycle={selectedCycle}\n        onChange={setSelectedCycle}\n        className=\"mb-20\"\n        size=\"md\"\n      />\n      {query.data?.products.map(plan => {\n        const price = findBestPrice(selectedCycle, plan.prices);\n        if (!price || plan.hidden) return null;\n        return (\n          <m.div\n            {...opacityAnimation}\n            key={plan.id}\n            className=\"justify-between gap-40 border-b py-32 md:flex\"\n          >\n            <div className=\"mb-40 md:mb-0\">\n              <div className=\"text-xl font-bold\">{plan.name}</div>\n              <FormattedPrice price={price} className=\"text-lg\" />\n              <div className=\"mt-12 text-base\">{plan.description}</div>\n              <FeatureList plan={plan} />\n            </div>\n            <ContinueButton product={plan} price={price} />\n          </m.div>\n        );\n      })}\n    </Fragment>\n  );\n}\n\ninterface FeatureListProps {\n  plan: Product;\n}\nfunction FeatureList({plan}: FeatureListProps) {\n  if (!plan.feature_list.length) return null;\n  return (\n    <div className=\"mt-32\">\n      <div className=\"mb-10 text-sm font-semibold\">\n        <Trans message=\"What's included\" />\n      </div>\n      {plan.feature_list.map(feature => (\n        <div key={feature} className=\"flex items-center gap-10 text-sm\">\n          <CheckIcon className=\"text-positive\" size=\"sm\" />\n          <Trans message={feature} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface ContinueButtonProps {\n  product: Product;\n  price: Price;\n}\nfunction ContinueButton({product, price}: ContinueButtonProps) {\n  const {subscription} = useBillingUser();\n  if (!subscription?.price || !subscription?.product) return null;\n\n  if (\n    subscription.product_id === product.id &&\n    subscription.price_id === price.id\n  ) {\n    return (\n      <div className=\"flex w-[168px] items-center justify-center gap-10 text-muted\">\n        <CheckIcon size=\"md\" />\n        <Trans message=\"Current plan\" />\n      </div>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      className=\"w-[168px]\"\n      size=\"md\"\n      elementType={Link}\n      to={`/billing/change-plan/${product.id}/${price.id}/confirm`}\n    >\n      <Trans message=\"Continue\" />\n    </Button>\n  );\n}\n\nfunction PlanSkeleton() {\n  return (\n    <m.div\n      key=\"plan-skeleton\"\n      {...opacityAnimation}\n      className=\"border-b py-32 text-2xl\"\n    >\n      <Skeleton className=\"mb-8\" />\n      <Skeleton className=\"mb-14\" />\n      <Skeleton className=\"mb-24\" />\n      <Skeleton className=\"mb-12\" />\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {User} from '../../../auth/user';\nimport {invalidateBillingUserQuery} from '../use-billing-user';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  subscriptionId: number;\n  newProductId: number;\n  newPriceId: number;\n}\n\nexport function useChangeSubscriptionPlan() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (props: Payload) => changePlan(props),\n    onSuccess: () => {\n      toast(trans(message('Plan changed.')));\n      invalidateBillingUserQuery();\n      navigate('/billing');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction changePlan({subscriptionId, ...other}: Payload): Promise<Response> {\n  return apiClient\n    .post(`billing/subscriptions/${subscriptionId}/change-plan`, other)\n    .then(r => r.data);\n}\n","import {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '../../i18n/trans';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\nimport {BillingPlanPanel} from './billing-plan-panel';\nimport {Fragment} from 'react';\nimport {useProducts} from '../pricing-table/use-products';\nimport {Link, Navigate, useParams} from 'react-router-dom';\nimport {Button} from '../../ui/buttons/button';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {useBillingUser} from './use-billing-user';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {useChangeSubscriptionPlan} from './requests/use-change-subscription-plan';\n\nconst previousUrl = '/billing/change-plan';\n\nexport function ConfirmPlanChangePage() {\n  const {productId, priceId} = useParams();\n  const navigate = useNavigate();\n  const query = useProducts();\n  const {subscription} = useBillingUser();\n  const changePlan = useChangeSubscriptionPlan();\n\n  if (!query.data || subscription?.price_id == priceId) {\n    return <Navigate to=\"/billing/change-plan\" replace />;\n  }\n\n  const newProduct = query.data.products.find(p => `${p.id}` === productId);\n  const newPrice = newProduct?.prices.find(p => `${p.id}` === priceId);\n\n  if (!newProduct || !newPrice || !subscription) {\n    navigate(previousUrl);\n    return null;\n  }\n\n  const newDate = (\n    <span className=\"whitespace-nowrap\">\n      <FormattedDate date={subscription.renews_at} preset=\"long\" />;\n    </span>\n  );\n\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem isLink onSelected={() => navigate('/billing')}>\n          <Trans message=\"Billing\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem onSelected={() => navigate(previousUrl)}>\n          <Trans message=\"Plans\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans message=\"Confirm\" />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <h1 className=\"text-3xl font-bold my-32 md:my-64\">\n        <Trans message=\"Confirm your new plan\" />\n      </h1>\n      <BillingPlanPanel title={<Trans message=\"Changing to\" />}>\n        <div className=\"max-w-[464px]\">\n          <div className=\"text-xl font-bold\">{newProduct.name}</div>\n          <FormattedPrice price={newPrice} className=\"text-lg\" />\n          <div className=\"text-base mt-12 border-b pb-24 mb-48\">\n            <Trans\n              message=\"You will be charged the new price starting :date\"\n              values={{date: newDate}}\n            />\n          </div>\n          <div>\n            <div>\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                size=\"md\"\n                className=\"w-full mb-16\"\n                onClick={() => {\n                  changePlan.mutate({\n                    subscriptionId: subscription.id,\n                    newProductId: newProduct.id,\n                    newPriceId: newPrice.id,\n                  });\n                }}\n                disabled={changePlan.isPending}\n              >\n                <Trans message=\"Confirm\" />\n              </Button>\n            </div>\n            <div>\n              <Button\n                variant=\"outline\"\n                className=\"w-full\"\n                to={previousUrl}\n                elementType={Link}\n              >\n                <Trans message=\"Go back\" />\n              </Button>\n            </div>\n            <div className=\"text-xs text-muted mt-12\">\n              <Trans message=\"By confirming your new plan, you agree to our terms of Service and privacy policy.\" />\n            </div>\n          </div>\n        </div>\n      </BillingPlanPanel>\n    </Fragment>\n  );\n}\n","import {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '../../i18n/trans';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\nimport {BillingPlanPanel} from './billing-plan-panel';\nimport {Fragment} from 'react';\nimport {useProducts} from '../pricing-table/use-products';\nimport {Link} from 'react-router-dom';\nimport {Button} from '../../ui/buttons/button';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {invalidateBillingUserQuery, useBillingUser} from './use-billing-user';\nimport {useCancelSubscription} from './requests/use-cancel-subscription';\nimport {FormattedDate} from '../../i18n/formatted-date';\n\nconst previousUrl = '/billing';\n\nexport function ConfirmPlanCancellationPage() {\n  const navigate = useNavigate();\n  const query = useProducts();\n  const {subscription} = useBillingUser();\n  const cancelSubscription = useCancelSubscription();\n\n  const product = subscription?.product;\n  const price = subscription?.price;\n\n  if (!query.data) {\n    return null;\n  }\n\n  if (!subscription || !product || !price) {\n    navigate(previousUrl);\n    return null;\n  }\n\n  const renewDate = (\n    <span className=\"whitespace-nowrap\">\n      <FormattedDate date={subscription.renews_at} preset=\"long\" />\n    </span>\n  );\n\n  const handleSubscriptionCancel = () => {\n    cancelSubscription.mutate(\n      {\n        subscriptionId: subscription.id,\n      },\n      {\n        onSuccess: () => {\n          invalidateBillingUserQuery();\n          navigate('/billing');\n        },\n      },\n    );\n  };\n\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem isLink onSelected={() => navigate(previousUrl)}>\n          <Trans message=\"Billing\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans message=\"Cancel\" />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <h1 className=\"text-3xl font-bold my-32 md:my-64\">\n        <Trans message=\"Cancel your plan\" />\n      </h1>\n      <BillingPlanPanel title={<Trans message=\"Current plan\" />}>\n        <div className=\"max-w-[464px]\">\n          <div className=\"text-xl font-bold\">{product.name}</div>\n          <FormattedPrice price={price} className=\"text-lg\" />\n          <div className=\"text-base mt-12 border-b pb-24 mb-48\">\n            <Trans\n              message=\"Your plan will be canceled, but is still available until the end of your billing period on :date\"\n              values={{date: renewDate}}\n            />\n            <div className=\"mt-20\">\n              <Trans message=\"If you change your mind, you can renew your subscription.\" />\n            </div>\n          </div>\n          <div>\n            <div>\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                size=\"md\"\n                className=\"w-full mb-16\"\n                onClick={handleSubscriptionCancel}\n                disabled={cancelSubscription.isPending}\n              >\n                <Trans message=\"Cancel plan\" />\n              </Button>\n            </div>\n            <div>\n              <Button\n                variant=\"outline\"\n                className=\"w-full\"\n                to={previousUrl}\n                elementType={Link}\n              >\n                <Trans message=\"Go back\" />\n              </Button>\n            </div>\n            <div className=\"text-xs text-muted mt-12\">\n              <Trans message=\"By cancelling your plan, you agree to our terms of service and privacy policy.\" />\n            </div>\n          </div>\n        </div>\n      </BillingPlanPanel>\n    </Fragment>\n  );\n}\n","import {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '../../i18n/trans';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\nimport {BillingPlanPanel} from './billing-plan-panel';\nimport {Fragment} from 'react';\nimport {useProducts} from '../pricing-table/use-products';\nimport {Link} from 'react-router-dom';\nimport {Button} from '../../ui/buttons/button';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {invalidateBillingUserQuery, useBillingUser} from './use-billing-user';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {useResumeSubscription} from './requests/use-resume-subscription';\n\nconst previousUrl = '/billing';\n\nexport function ConfirmPlanRenewalPage() {\n  const navigate = useNavigate();\n  const query = useProducts();\n  const {subscription} = useBillingUser();\n  const resumeSubscription = useResumeSubscription();\n\n  const product = subscription?.product;\n  const price = subscription?.price;\n\n  if (!query.data) {\n    return null;\n  }\n\n  if (!subscription || !product || !price) {\n    navigate(previousUrl);\n    return null;\n  }\n\n  const endDate = (\n    <span className=\"whitespace-nowrap\">\n      <FormattedDate date={subscription.ends_at} preset=\"long\" />;\n    </span>\n  );\n\n  const handleResumeSubscription = () => {\n    resumeSubscription.mutate(\n      {\n        subscriptionId: subscription.id,\n      },\n      {\n        onSuccess: () => {\n          invalidateBillingUserQuery();\n          navigate('/billing');\n        },\n      },\n    );\n  };\n\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem isLink onSelected={() => navigate(previousUrl)}>\n          <Trans message=\"Billing\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans message=\"Renew\" />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <h1 className=\"text-3xl font-bold my-32 md:my-64\">\n        <Trans message=\"Renew your plan\" />\n      </h1>\n      <BillingPlanPanel title={<Trans message=\"Current plan\" />}>\n        <div className=\"max-w-[464px]\">\n          <div className=\"text-xl font-bold\">{product.name}</div>\n          <FormattedPrice price={price} className=\"text-lg\" />\n          <div className=\"text-base mt-12 border-b pb-24 mb-48\">\n            <Trans\n              message=\"This plan will no longer be canceled. It will renew on :date\"\n              values={{date: endDate}}\n            />\n          </div>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"md\"\n            className=\"w-full mb-16\"\n            onClick={handleResumeSubscription}\n            disabled={resumeSubscription.isPending}\n          >\n            <Trans message=\"Renew plan\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"w-full\"\n            to={previousUrl}\n            elementType={Link}\n          >\n            <Trans message=\"Go back\" />\n          </Button>\n          <div className=\"text-xs text-muted mt-12\">\n            <Trans message=\"By renewing your plan, you agree to our terms of service and privacy policy.\" />\n          </div>\n        </div>\n      </BillingPlanPanel>\n    </Fragment>\n  );\n}\n","import {useBillingUser} from '../use-billing-user';\nimport {FormattedDate} from '../../../i18n/formatted-date';\nimport {BillingPlanPanel} from '../billing-plan-panel';\nimport {Trans} from '../../../i18n/trans';\nimport {Chip} from '../../../ui/forms/input-field/chip-field/chip';\nimport {FormattedPrice} from '../../../i18n/formatted-price';\nimport {CalendarTodayIcon} from '../../../icons/material/CalendarToday';\nimport {Button} from '../../../ui/buttons/button';\nimport {Link} from 'react-router-dom';\n\nexport function CancelledPlanPanel() {\n  const {subscription} = useBillingUser();\n  if (!subscription?.price || !subscription?.product) return null;\n\n  const endingDate = (\n    <span className=\"whitespace-nowrap\">\n      <FormattedDate preset=\"long\" date={subscription.ends_at} />\n    </span>\n  );\n\n  return (\n    <BillingPlanPanel title={<Trans message=\"Current plan\" />}>\n      <div className=\"mt-24 flex flex-col justify-between gap-20\">\n        <div>\n          <Chip\n            className=\"mb-10 w-min\"\n            size=\"xs\"\n            radius=\"rounded\"\n            color=\"danger\"\n          >\n            <Trans message=\"Canceled\" />\n          </Chip>\n          <div className=\"mb-2 text-xl font-bold\">\n            {subscription.product.name}\n          </div>\n          <FormattedPrice className=\"mb-8 text-xl\" price={subscription.price} />\n          <div className=\"flex items-center gap-8 text-base\">\n            <CalendarTodayIcon size=\"sm\" className=\"text-muted\" />\n            <div className=\"flex-auto\">\n              <Trans\n                message=\"Your plan will be canceled on :date\"\n                values={{date: endingDate}}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"w-[233px]\">\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"md\"\n            className=\"mb-12 w-full\"\n            elementType={Link}\n            to=\"/billing/renew\"\n          >\n            <Trans message=\"Renew plan\" />\n          </Button>\n        </div>\n      </div>\n    </BillingPlanPanel>\n  );\n}\n","import {useBillingUser} from '../use-billing-user';\nimport {FormattedDate} from '../../../i18n/formatted-date';\nimport {BillingPlanPanel} from '../billing-plan-panel';\nimport {Trans} from '../../../i18n/trans';\nimport {FormattedPrice} from '../../../i18n/formatted-price';\nimport {Button} from '../../../ui/buttons/button';\nimport {Link} from 'react-router-dom';\n\nexport function ActivePlanPanel() {\n  const {subscription} = useBillingUser();\n  if (!subscription?.price || !subscription?.product) return null;\n\n  const renewDate = (\n    <FormattedDate preset=\"long\" date={subscription.renews_at} />\n  );\n\n  return (\n    <BillingPlanPanel title={<Trans message=\"Current plan\" />}>\n      <div className=\"mt-24 flex justify-between gap-20\">\n        <div>\n          <div className=\"mb-2 text-xl font-bold\">\n            {subscription.product.name}\n          </div>\n          <FormattedPrice className=\"mb-2 text-xl\" price={subscription.price} />\n          <div className=\"text-base\">\n            <Trans\n              message=\"Your plan renews on :date\"\n              values={{date: renewDate}}\n            />\n          </div>\n        </div>\n        <div className=\"w-[233px]\">\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"md\"\n            className=\"mb-12 w-full\"\n            elementType={Link}\n            to=\"/billing/change-plan\"\n            disabled={subscription.gateway_name === 'none'}\n          >\n            <Trans message=\"Change plan\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            color=\"danger\"\n            size=\"md\"\n            className=\"w-full\"\n            elementType={Link}\n            to=\"/billing/cancel\"\n          >\n            <Trans message=\"Cancel plan\" />\n          </Button>\n        </div>\n      </div>\n    </BillingPlanPanel>\n  );\n}\n","export default \"__VITE_ASSET__955f072d__\"","import {useBillingUser} from '../use-billing-user';\nimport {BillingPlanPanel} from '../billing-plan-panel';\nimport {Trans} from '../../../i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {EditIcon} from '../../../icons/material/Edit';\nimport {Fragment} from 'react';\nimport paypalSvg from './paypal.svg';\nimport {SvgImage} from '../../../ui/images/svg-image/svg-image';\n\nexport function PaymentMethodPanel() {\n  const {user, subscription} = useBillingUser();\n  if (!user || !subscription) return null;\n\n  const isPaypal = subscription.gateway_name === 'paypal';\n  const PaymentMethod = isPaypal ? PaypalPaymentMethod : CardPaymentMethod;\n\n  return (\n    <BillingPlanPanel title={<Trans message=\"Payment method\" />}>\n      <PaymentMethod\n        methodClassName=\"whitespace-nowrap text-base max-w-[464px] flex items-center gap-10\"\n        linkClassName=\"flex items-center gap-4 text-muted mt-18 block hover:underline\"\n      />\n    </BillingPlanPanel>\n  );\n}\n\ninterface PaymentMethodProps {\n  methodClassName: string;\n  linkClassName: string;\n}\nfunction CardPaymentMethod({\n  methodClassName,\n  linkClassName,\n}: PaymentMethodProps) {\n  const {user} = useBillingUser();\n  if (!user) return null;\n  return (\n    <Fragment>\n      <div className={methodClassName}>\n        <span className=\"capitalize\">{user.card_brand}</span> ••••\n        {user.card_last_four}\n        {user.card_expires && (\n          <div className=\"ml-auto\">\n            <Trans message=\"Expires :date\" values={{date: user.card_expires}} />\n          </div>\n        )}\n      </div>\n      <Link className={linkClassName} to=\"/billing/change-payment-method\">\n        <EditIcon size=\"sm\" />\n        <Trans message=\"Change payment method\" />\n      </Link>\n    </Fragment>\n  );\n}\n\nfunction PaypalPaymentMethod({\n  methodClassName,\n  linkClassName,\n}: PaymentMethodProps) {\n  const {subscription} = useBillingUser();\n  return (\n    <Fragment>\n      <div className={methodClassName}>\n        <SvgImage src={paypalSvg} />\n      </div>\n      <a\n        className={linkClassName}\n        href={`https://www.sandbox.paypal.com/myaccount/autopay/connect/${subscription?.gateway_id}/funding`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <EditIcon size=\"sm\" />\n        <Trans message=\"Change payment method\" />\n      </a>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {Invoice} from '@common/billing/invoice';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\nconst Endpoint = 'billing/invoices';\n\nexport interface FetchInvoicesResponse extends BackendResponse {\n  invoices: Invoice[];\n}\n\nexport function useInvoices(userId: number) {\n  return useQuery({\n    queryKey: [Endpoint],\n    queryFn: () => fetchInvoices(userId),\n  });\n}\n\nfunction fetchInvoices(userId: number): Promise<FetchInvoicesResponse> {\n  return apiClient\n    .get(Endpoint, {params: {userId}})\n    .then(response => response.data);\n}\n","import {useBillingUser} from '../use-billing-user';\nimport {BillingPlanPanel} from '../billing-plan-panel';\nimport {Trans} from '../../../i18n/trans';\nimport {useInvoices} from '../requests/use-invoices';\nimport {FormattedDate} from '../../../i18n/formatted-date';\nimport {FormattedCurrency} from '../../../i18n/formatted-currency';\nimport {Chip} from '../../../ui/forms/input-field/chip-field/chip';\nimport {OpenInNewIcon} from '../../../icons/material/OpenInNew';\nimport {Skeleton} from '../../../ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Invoice} from '../../invoice';\nimport {opacityAnimation} from '../../../ui/animation/opacity-animation';\nimport {useSettings} from '../../../core/settings/use-settings';\n\nexport function InvoiceHistoryPanel() {\n  const {user} = useBillingUser();\n  const query = useInvoices(user?.id!);\n  if (!user) return null;\n\n  const invoices = query.data?.invoices;\n\n  return (\n    <BillingPlanPanel title={<Trans message=\"Payment history\" />}>\n      <div className=\"max-w-[464px]\">\n        <AnimatePresence initial={false} mode=\"wait\">\n          {query.isLoading ? (\n            <LoadingSkeleton key=\"loading-skeleton\" />\n          ) : (\n            <InvoiceList key=\"invoices\" invoices={invoices} />\n          )}\n        </AnimatePresence>\n      </div>\n    </BillingPlanPanel>\n  );\n}\n\ninterface InvoiceListProps {\n  invoices?: Invoice[];\n}\nfunction InvoiceList({invoices}: InvoiceListProps) {\n  const {base_url} = useSettings();\n  return (\n    <m.div {...opacityAnimation}>\n      {!invoices?.length ? (\n        <div className=\"text-muted italic\">\n          <Trans message=\"No invoices yet\" />\n        </div>\n      ) : undefined}\n      {invoices?.map(invoice => (\n        <div\n          className=\"whitespace-nowrap text-base flex items-center justify-between gap-10 mb-14\"\n          key={invoice.id}\n        >\n          <a\n            href={`${base_url}/billing/invoices/${invoice.uuid}`}\n            target=\"_blank\"\n            className=\"flex items-center gap-8 hover:underline\"\n            rel=\"noreferrer\"\n          >\n            <FormattedDate date={invoice.created_at} />\n            <OpenInNewIcon size=\"xs\" />\n          </a>\n          {invoice.subscription.price && (\n            <div>\n              <FormattedCurrency\n                value={invoice.subscription.price.amount}\n                currency={invoice.subscription.price.currency}\n              />\n            </div>\n          )}\n          <Chip\n            size=\"xs\"\n            color={invoice.paid ? 'positive' : 'danger'}\n            radius=\"rounded\"\n          >\n            {invoice.paid ? (\n              <Trans message=\"Paid\" />\n            ) : (\n              <Trans message=\"Unpaid\" />\n            )}\n          </Chip>\n          <div>{invoice.subscription.product?.name}</div>\n        </div>\n      ))}\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div {...opacityAnimation}>\n      <Skeleton className=\"mb-14\" />\n      <Skeleton className=\"mb-14\" />\n      <Skeleton className=\"mb-14\" />\n      <Skeleton className=\"mb-14\" />\n      <Skeleton />\n    </m.div>\n  );\n}\n","import {useBillingUser} from './use-billing-user';\nimport {CancelledPlanPanel} from './panels/cancelled-plan-panel';\nimport {ActivePlanPanel} from './panels/active-plan-panel';\nimport {PaymentMethodPanel} from './panels/payment-method-panel';\nimport {InvoiceHistoryPanel} from './panels/invoice-history-panel';\n\nexport function BillingPage() {\n  const {subscription} = useBillingUser();\n  if (!subscription?.price || !subscription?.product) return null;\n\n  const planPanel = subscription.ends_at ? (\n    <CancelledPlanPanel />\n  ) : (\n    <ActivePlanPanel />\n  );\n\n  return (\n    <div>\n      {planPanel}\n      <PaymentMethodPanel />\n      <InvoiceHistoryPanel />\n    </div>\n  );\n}\n","import {Route, Routes} from 'react-router-dom';\nimport React from 'react';\nimport {SubscribedRoute} from '../../auth/guards/subscribed-route';\nimport {BillingPageLayout} from './billing-page-layout';\nimport {ChangePaymentMethodLayout} from './change-payment-method/change-payment-method-layout';\nimport {ChangePaymentMethodPage} from './change-payment-method/change-payment-method-page';\nimport {ChangePaymentMethodDone} from './change-payment-method/change-payment-method-done';\nimport {ChangePlanPage} from './change-plan-page';\nimport {ConfirmPlanChangePage} from './confirm-plan-change-page';\nimport {ConfirmPlanCancellationPage} from './confirm-plan-cancellation-page';\nimport {ConfirmPlanRenewalPage} from './confirm-plan-renewal-page';\nimport {BillingPage} from './billing-page';\n\nexport default function BillingPageRoutes() {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <SubscribedRoute>\n            <BillingPageLayout />\n          </SubscribedRoute>\n        }\n      >\n        <Route index element={<BillingPage />} />\n        <Route\n          path=\"change-payment-method\"\n          element={<ChangePaymentMethodLayout />}\n        >\n          <Route index element={<ChangePaymentMethodPage />} />\n          <Route path=\"done\" element={<ChangePaymentMethodDone />} />\n        </Route>\n        <Route path=\"change-plan\" element={<ChangePlanPage />} />\n        <Route\n          path=\"change-plan/:productId/:priceId/confirm\"\n          element={<ConfirmPlanChangePage />}\n        />\n        <Route path=\"cancel\" element={<ConfirmPlanCancellationPage />} />\n        <Route path=\"renew\" element={<ConfirmPlanRenewalPage />} />\n      </Route>\n    </Routes>\n  );\n}\n"],"names":["previousUrl","changePlan"],"mappings":"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"}