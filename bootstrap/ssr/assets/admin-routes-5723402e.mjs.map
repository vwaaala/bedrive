{"version":3,"file":"admin-routes-5723402e.mjs","sources":["../../../common/resources/client/admin/admin-sidebar.tsx","../../../common/resources/client/admin/admin-layout.tsx","../../../common/resources/client/admin/users/user-datatable-filters.ts","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/datatable/page/data-table-context.ts","../../../common/resources/client/http/backend-response/pagination-response.ts","../../../common/resources/client/datatable/data-table-pagination-footer.tsx","../../../common/resources/client/icons/material/FilterAlt.tsx","../../../common/resources/client/ui/accordion/accordtion-animation.ts","../../../common/resources/client/ui/accordion/accordion.tsx","../../../common/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/resources/client/datatable/filters/add-filter-button.tsx","../../../common/resources/client/datatable/data-table-header.tsx","../../../common/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/resources/client/datatable/data-table.tsx","../../../common/resources/client/datatable/page/data-table-page.tsx","../../../common/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/resources/client/datatable/page/delete-selected-items-action.tsx","../../../common/resources/client/datatable/page/data-table-emty-state-message.tsx","../../../common/resources/client/admin/roles/team.svg","../../../common/resources/client/datatable/data-table-add-item-button.tsx","../../../common/resources/client/datatable/requests/use-export-csv.ts","../../../common/resources/client/datatable/csv-export/csv-export-info-dialog.tsx","../../../common/resources/client/datatable/csv-export/data-table-export-csv-button.tsx","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/icons/material/PersonOff.tsx","../../../common/resources/client/admin/users/requests/use-ban-user.ts","../../../common/resources/client/admin/users/ban-user-dialog.tsx","../../../common/resources/client/admin/users/requests/use-unban-user.ts","../../../common/resources/client/admin/users/requests/use-impersonate-user.ts","../../../common/resources/client/admin/users/user-datatable-columns.tsx","../../../common/resources/client/admin/users/user-datatable.tsx","../../../common/resources/client/utils/array/chunk-array.ts","../../../common/resources/client/admin/appearance/config/default-appearance-config.ts","../../../common/resources/client/ui/forms/slider/base-slider.tsx","../../../common/resources/client/ui/forms/slider/use-slider.ts","../../../common/resources/client/ui/forms/slider/slider-thumb.tsx","../../../common/resources/client/ui/forms/slider/slider.tsx","../../../common/resources/client/admin/appearance/appearance-button.tsx","../../../common/resources/client/admin/appearance/sections/themes/color-icon.tsx","../../../common/resources/client/ui/color-picker/color-swatch.tsx","../../../common/resources/client/ui/color-picker/color-presets.ts","../../../common/resources/client/ui/color-picker/color-picker.tsx","../../../common/resources/client/ui/color-picker/color-picker-dialog.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-general.tsx","../../../common/resources/client/utils/string/uc-first.ts","../../../common/resources/client/auth/ui/permission-selector.tsx","../../../common/resources/client/admin/appearance/sections/menus/hooks/available-routes.ts","../../../common/resources/client/ui/icon-picker/icon-grid-style.ts","../../../common/resources/client/ui/icon-picker/icon-picker.tsx","../../../common/resources/client/ui/icon-picker/icon-picker-dialog.tsx","../../../common/resources/client/utils/hooks/use-previous.ts","../../../common/resources/client/admin/menus/menu-item-form.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-primary-features.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features.tsx","../../../resources/client/admin/appearance/app-appearance-config.tsx","../../../common/resources/client/admin/appearance/config/merged-appearance-config.ts","../../../common/resources/client/admin/appearance/appearance-store.ts","../../../common/resources/client/admin/appearance/requests/save-appearance-changes.ts","../../../common/resources/client/admin/appearance/requests/appearance-values.ts","../../../common/resources/client/admin/appearance/section-header.tsx","../../../common/resources/client/admin/appearance/appearance-layout.tsx","../../../common/resources/client/admin/appearance/sections/menus/menu-list.tsx","../../../common/resources/client/admin/appearance/sections/menus/add-menu-item-dialog.tsx","../../../common/resources/client/icons/material/DragIndicator.tsx","../../../common/resources/client/admin/appearance/sections/menus/dropdown-menu.svg","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-line-strategy.ts","../../../common/resources/client/utils/array/move-item-in-array.ts","../../../common/resources/client/utils/array/move-item-in-new-array.ts","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-transform-strategy.ts","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-move-node-strategy.ts","../../../common/resources/client/ui/interactions/dnd/sortable/use-sortable.ts","../../../common/resources/client/admin/appearance/sections/menus/menu-editor.tsx","../../../common/resources/client/admin/appearance/sections/menus/menu-item-editor.tsx","../../../common/resources/client/admin/appearance/sections/general-section.tsx","../../../common/resources/client/utils/string/random-number.ts","../../../common/resources/client/admin/appearance/sections/themes/theme-list.tsx","../../../common/resources/client/ace-editor/ace-dialog.tsx","../../../common/resources/client/admin/appearance/sections/seo/use-seo-tags.ts","../../../common/resources/client/admin/appearance/sections/seo/use-update-seo-tags.ts","../../../common/resources/client/admin/appearance/sections/seo/seo-section.tsx","../../../common/resources/client/admin/appearance/sections/code/custom-code-section.tsx","../../../common/resources/client/admin/custom-pages/articles.svg","../../../common/resources/client/admin/custom-pages/custom-page-datatable-filters.tsx","../../../common/resources/client/admin/custom-pages/custom-page-datatable-columns.tsx","../../../common/resources/client/admin/custom-pages/custom-page-datable-page.tsx","../../../resources/client/admin/settings/app-settings-nav-config.ts","../../../common/resources/client/admin/settings/settings-nav-config.ts","../../../common/resources/client/admin/settings/settings-layout.tsx","../../../common/resources/client/admin/settings/requests/use-admin-settings.ts","../../../common/resources/client/admin/settings/generate-sitemap.ts","../../../common/resources/client/admin/settings/requests/update-admin-settings.ts","../../../common/resources/client/admin/settings/settings-panel.tsx","../../../common/resources/client/admin/settings/settings-separator.tsx","../../../common/resources/client/admin/settings/learn-more-link.tsx","../../../common/resources/client/admin/settings/pages/general-settings.tsx","../../../common/resources/client/ui/themes/utils/color-to-theme-value.ts","../../../common/resources/client/icons/material/Tune.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-settings-dialog-trigger.tsx","../../../common/resources/client/icons/material/RestartAlt.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-more-options-button.tsx","../../../common/resources/client/admin/appearance/sections/themes/navbar-color-picker.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-editor.tsx","../../../resources/client/admin/settings/drive-settings.tsx","../../../resources/client/admin/settings/app-settings-routes.tsx","../../../common/resources/client/admin/settings/settings-error-group.tsx","../../../common/resources/client/admin/settings/json-chip-field.tsx","../../../common/resources/client/ui/tabs/tabs-context.tsx","../../../common/resources/client/ui/tabs/tabs.tsx","../../../common/resources/client/ui/tabs/tab-line.tsx","../../../common/resources/client/ui/tabs/tab-list.tsx","../../../common/resources/client/ui/tabs/tab.tsx","../../../common/resources/client/ui/tabs/tab-panels.tsx","../../../common/resources/client/admin/settings/pages/subscription-settings.tsx","../../../common/resources/client/admin/settings/pages/localization-settings.tsx","../../../common/resources/client/admin/settings/pages/authentication-settings.tsx","../../../common/resources/client/ui/section-helper.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.ts","../../../common/resources/client/uploads/utils/space-units.ts","../../../common/resources/client/uploads/utils/convert-to-bytes.ts","../../../common/resources/client/ui/forms/input-field/file-size-field.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.ts","../../../common/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.ts","../../../common/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/uploading-settings.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/smtp-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/ses-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/postmark-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/gmail-icon.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.tsx","../../../common/resources/client/admin/settings/pages/cache-settings/clear-cache.ts","../../../common/resources/client/admin/settings/pages/cache-settings/cache-settings.tsx","../../../common/resources/client/admin/settings/pages/logging-settings.tsx","../../../common/resources/client/admin/settings/pages/queue-settings.tsx","../../../common/resources/client/admin/settings/pages/recaptcha-settings.tsx","../../../common/resources/client/ui/forms/input-field/file-field.tsx","../../../common/resources/client/admin/settings/pages/reports-settings.tsx","../../../common/resources/client/admin/users/requests/update-user.ts","../../../common/resources/client/utils/hooks/sticky-sentinel.ts","../../../common/resources/client/admin/crupdate-resource-layout.tsx","../../../common/resources/client/admin/users/crupdate-user-form.tsx","../../../common/resources/client/icons/material/Report.tsx","../../../common/resources/client/admin/users/update-user-page.tsx","../../../common/resources/client/admin/users/requests/create-user.ts","../../../common/resources/client/admin/users/create-user-page.tsx","../../../common/resources/client/icons/material/Translate.tsx","../../../common/resources/client/admin/translations/use-locale-with-lines.ts","../../../common/resources/client/admin/translations/update-localization.ts","../../../common/resources/client/admin/translations/update-localization-dialog.tsx","../../../common/resources/client/admin/translations/create-localization.ts","../../../common/resources/client/admin/translations/create-localization-dialog.tsx","../../../common/resources/client/admin/translations/around-the-world.svg","../../../common/resources/client/admin/translations/localization-index.tsx","../../../common/resources/client/admin/translations/new-translation-dialog.tsx","../../../common/resources/client/admin/translations/translation-management-page.tsx","../../../common/resources/client/ui/overlays/dialog/image-zoom-dialog.tsx","../../../common/resources/client/admin/ads/ads-page.tsx","../../../common/resources/client/admin/appearance/section-list.tsx","../../../common/resources/client/admin/roles/role-index-page-filters.ts","../../../common/resources/client/admin/roles/roles-index-page.tsx","../../../common/resources/client/admin/roles/requests/use-role.ts","../../../common/resources/client/admin/roles/requests/use-update-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.tsx","../../../common/resources/client/users/select-user-dialog.tsx","../../../common/resources/client/admin/roles/requests/use-remove-users-from-role.ts","../../../common/resources/client/admin/roles/requests/use-add-users-to-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/edit-role-page-users-panel.tsx","../../../common/resources/client/admin/roles/crupdate-role-page/edit-role-page.tsx","../../../common/resources/client/admin/roles/requests/user-create-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/create-role-page.tsx","../../../common/resources/client/admin/tags/tag-index-page-filters.ts","../../../common/resources/client/admin/tags/software-engineer.svg","../../../common/resources/client/admin/tags/crupdate-tag-form.tsx","../../../common/resources/client/utils/string/slugify-string.ts","../../../common/resources/client/admin/tags/requests/use-create-new-tag.ts","../../../common/resources/client/admin/tags/create-tag-dialog.tsx","../../../common/resources/client/admin/tags/requests/use-update-tag.ts","../../../common/resources/client/admin/tags/update-tag-dialog.tsx","../../../common/resources/client/admin/tags/tag-index-page.tsx","../../../common/resources/client/uploads/formatted-bytes.tsx","../../../common/resources/client/icons/material/Visibility.tsx","../../../common/resources/client/admin/file-entry/upload.svg","../../../common/resources/client/admin/file-entry/file-entry-index-page.tsx","../../../common/resources/client/admin/subscriptions/subscription-index-page-filters.ts","../../../common/resources/client/admin/subscriptions/subscriptions.svg","../../../common/resources/client/admin/subscriptions/requests/use-update-subscription.ts","../../../common/resources/client/admin/subscriptions/crupdate-subscription-form.tsx","../../../common/resources/client/admin/subscriptions/update-subscription-dialog.tsx","../../../common/resources/client/admin/subscriptions/requests/use-create-subscription.ts","../../../common/resources/client/admin/subscriptions/create-subscription-dialog.tsx","../../../common/resources/client/icons/material/Pause.tsx","../../../common/resources/client/icons/material/PlayArrow.tsx","../../../common/resources/client/admin/subscriptions/subscriptions-index-page.tsx","../../../common/resources/client/icons/material/Sync.tsx","../../../common/resources/client/admin/plans/requests/use-sync-products.ts","../../../common/resources/client/admin/plans/requests/use-delete-product.ts","../../../common/resources/client/admin/plans/plans-index-page-filters.ts","../../../common/resources/client/admin/plans/plans-index-page.tsx","../../../common/resources/client/admin/plans/requests/use-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/billing-period-presets.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/price-form.tsx","../../../common/resources/client/admin/plans/crupdate-plan-page/crupdate-plan-form.tsx","../../../common/resources/client/admin/plans/requests/use-update-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/edit-plan-page.tsx","../../../common/resources/client/admin/plans/requests/use-create-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/create-plan-page.tsx","../../../common/resources/client/admin/settings/pages/gdpr-settings.tsx","../../../resources/client/admin/app-admin-routes.tsx","../../../common/resources/client/admin/custom-pages/requests/use-update-custom-page.ts","../../../common/resources/client/article-editor/article-editor-title.tsx","../../../common/resources/client/ui/slug-editor.tsx","../../../common/resources/client/icons/material/Undo.tsx","../../../common/resources/client/icons/material/Redo.tsx","../../../common/resources/client/text-editor/menubar/history-buttons.tsx","../../../common/resources/client/icons/material/Code.tsx","../../../common/resources/client/text-editor/menubar/mode-button.tsx","../../../common/resources/client/text-editor/menubar/divider.tsx","../../../common/resources/client/icons/material/FormatBold.tsx","../../../common/resources/client/icons/material/FormatItalic.tsx","../../../common/resources/client/icons/material/FormatUnderlined.tsx","../../../common/resources/client/text-editor/menubar/font-style-buttons.tsx","../../../common/resources/client/icons/material/FormatListBulleted.tsx","../../../common/resources/client/icons/material/FormatListNumbered.tsx","../../../common/resources/client/text-editor/menubar/list-buttons.tsx","../../../common/resources/client/text-editor/insert-link-into-text-editor.ts","../../../common/resources/client/text-editor/menubar/link-button.tsx","../../../common/resources/client/icons/material/Image.tsx","../../../common/resources/client/text-editor/menubar/image-button.tsx","../../../common/resources/client/icons/material/FormatClear.tsx","../../../common/resources/client/text-editor/menubar/clear-format-button.tsx","../../../common/resources/client/icons/material/HorizontalRule.tsx","../../../common/resources/client/icons/material/PriorityHigh.tsx","../../../common/resources/client/icons/material/Note.tsx","../../../common/resources/client/icons/material/SmartDisplay.tsx","../../../common/resources/client/text-editor/menubar/insert-menu-trigger.tsx","../../../common/resources/client/ui/keyboard/keyboard.tsx","../../../common/resources/client/text-editor/menubar/format-menu-trigger.tsx","../../../common/resources/client/icons/material/FormatColorText.tsx","../../../common/resources/client/icons/material/FormatColorFill.tsx","../../../common/resources/client/text-editor/menubar/color-buttons.tsx","../../../common/resources/client/icons/material/FormatAlignLeft.tsx","../../../common/resources/client/icons/material/FormatAlignCenter.tsx","../../../common/resources/client/icons/material/FormatAlignRight.tsx","../../../common/resources/client/icons/material/FormatAlignJustify.tsx","../../../common/resources/client/text-editor/menubar/align-buttons.tsx","../../../common/resources/client/icons/material/FormatIndentDecrease.tsx","../../../common/resources/client/icons/material/FormatIndentIncrease.tsx","../../../common/resources/client/text-editor/menubar/indent-buttons.tsx","../../../common/resources/client/text-editor/menubar/code-block-menu-trigger.tsx","../../../common/resources/client/icons/material/UnfoldLess.tsx","../../../common/resources/client/article-editor/article-body-editor-menubar.tsx","../../../common/resources/client/article-editor/article-editor-sticky-header.tsx","../../../common/resources/client/admin/custom-pages/edit-custom-page.tsx","../../../common/resources/client/admin/custom-pages/requests/use-create-custom-page.ts","../../../common/resources/client/admin/custom-pages/create-custom-page.tsx","../../../common/resources/client/ui/font-selector/font.svg","../../../common/resources/client/ui/font-selector/font-selector-filters.tsx","../../../common/resources/client/i18n/use-filter.ts","../../../common/resources/client/ui/font-picker/browser-safe-fonts.ts","../../../common/resources/client/ui/font-selector/font-selector-state.ts","../../../common/resources/client/ui/font-selector/font-selector-pagination.tsx","../../../common/resources/client/ui/font-selector/font-selector.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-font-panel.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-radius-panel.tsx","../../../common/resources/client/admin/admin-routes.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nimport {CustomMenu} from '../menus/custom-menu';\nimport {Trans} from '../i18n/trans';\nimport {useSettings} from '../core/settings/use-settings';\n\ninterface Props {\n  className?: string;\n  isCompactMode?: boolean;\n}\nexport function AdminSidebar({className, isCompactMode}: Props) {\n  const {version} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'relative flex flex-col gap-20 overflow-y-auto border-r bg-alt px-12 pb-16 pt-26 text-sm font-medium text-muted',\n      )}\n    >\n      <CustomMenu\n        matchDescendants={to => to === '/admin'}\n        menu=\"admin-sidebar\"\n        orientation=\"vertical\"\n        onlyShowIcons={isCompactMode}\n        itemClassName={({isActive}) =>\n          clsx(\n            'block w-full rounded-button py-12 px-16',\n            isActive\n              ? 'bg-primary/6 text-primary font-semibold'\n              : 'hover:bg-hover',\n          )\n        }\n        gap=\"gap-8\"\n      />\n      {!isCompactMode && (\n        <div className=\"mt-auto gap-14 px-16 text-xs\">\n          <Trans message=\"Version: :number\" values={{number: version}} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import {Outlet} from 'react-router-dom';\nimport {AdminSidebar} from './admin-sidebar';\nimport {DashboardLayout} from '../ui/layout/dashboard-layout';\nimport {DashboardContent} from '../ui/layout/dashboard-content';\nimport {DashboardSidenav} from '../ui/layout/dashboard-sidenav';\nimport {DashboardNavbar} from '../ui/layout/dashboard-navbar';\n\nexport function AdminLayout() {\n  return (\n    <DashboardLayout name=\"admin\" leftSidenavCanBeCompact>\n      <DashboardNavbar size=\"sm\" menuPosition=\"admin-navbar\" />\n      <DashboardSidenav position=\"left\" size=\"sm\">\n        <AdminSidebar />\n      </DashboardSidenav>\n      <DashboardContent>\n        <div className=\"bg dark:bg-alt\">\n          <Outlet />\n        </div>\n      </DashboardContent>\n    </DashboardLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\nimport {message} from '../../i18n/message';\n\nexport const UserDatatableFilters: BackendFilter[] = [\n  {\n    key: 'email_verified_at',\n    label: message('Email'),\n    description: message('Email verification status'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is confirmed'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n        {\n          key: '02',\n          label: message('is not confirmed'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date user registered or was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date user was last updated'),\n  }),\n  {\n    key: 'subscriptions',\n    label: message('Subscription'),\n    description: message('Whether user is subscribed or not'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is subscribed'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('is not subscribed'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n];\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import React, {useContext} from 'react';\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\n\nexport interface DataTableContextValue {\n  selectedRows: (string | number)[];\n  setSelectedRows: (keys: (string | number)[]) => void;\n  endpoint: string;\n  params: GetDatatableDataParams;\n  setParams: (value: GetDatatableDataParams) => void;\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\n}\n\nexport const DataTableContext = React.createContext<DataTableContextValue>(\n  null!\n);\n\nexport function useDataTable() {\n  return useContext(DataTableContext);\n}\n","import {BackendResponse} from './backend-response';\n\nexport interface LengthAwarePaginationResponse<T> {\n  data: T[];\n  from: number;\n  to: number;\n  total: number;\n  per_page: number;\n  current_page: number;\n  last_page: number;\n  next_page: number;\n  prev_page: number;\n}\n\nexport interface SimplePaginationResponse<T> {\n  data: T[];\n  from: number;\n  to: number;\n  per_page: number;\n  current_page: number;\n}\n\ninterface CursorPaginationResponse<T> {\n  data: T[];\n  next_cursor: string | null;\n  per_page: number;\n  prev_cursor: string | null;\n}\n\nexport type PaginationResponse<T> =\n  | LengthAwarePaginationResponse<T>\n  | SimplePaginationResponse<T>\n  | CursorPaginationResponse<T>;\n\nexport const EMPTY_PAGINATION_RESPONSE = {\n  pagination: {data: [], from: 0, to: 0, per_page: 15, current_page: 1},\n};\n\nexport interface PaginatedBackendResponse<T> extends BackendResponse {\n  pagination: PaginationResponse<T>;\n}\n\nexport function hasNextPage(pagination: PaginationResponse<unknown>): boolean {\n  if ('next_cursor' in pagination) {\n    return pagination.next_cursor != null;\n  }\n\n  if ('last_page' in pagination) {\n    return pagination.current_page < pagination.last_page;\n  }\n\n  return (\n    pagination.data.length > 0 && pagination.data.length >= pagination.per_page\n  );\n}\n","import {UseQueryResult} from '@tanstack/react-query';\nimport {\n  hasNextPage,\n  LengthAwarePaginationResponse,\n  PaginatedBackendResponse,\n} from '../http/backend-response/pagination-response';\nimport {useNumberFormatter} from '../i18n/use-number-formatter';\nimport {Select} from '../ui/forms/select/select';\nimport {Trans} from '../i18n/trans';\nimport {Item} from '../ui/forms/listbox/item';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '../icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '../icons/material/KeyboardArrowRight';\nimport React from 'react';\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\nimport clsx from 'clsx';\n\nconst defaultPerPage = 15;\nconst perPageOptions = [{key: 10}, {key: 15}, {key: 20}, {key: 50}, {key: 100}];\n\ntype DataTablePaginationFooterProps = {\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\n  onPerPageChange?: (perPage: number) => void;\n  onPageChange?: (page: number) => void;\n  className?: string;\n};\nexport function DataTablePaginationFooter({\n  query,\n  onPerPageChange,\n  onPageChange,\n  className,\n}: DataTablePaginationFooterProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const numberFormatter = useNumberFormatter();\n  const pagination = query.data\n    ?.pagination as LengthAwarePaginationResponse<any>;\n\n  if (!pagination) return null;\n\n  const perPageSelect = onPerPageChange ? (\n    <Select\n      minWidth=\"min-w-auto\"\n      selectionMode=\"single\"\n      disabled={query.isLoading}\n      labelPosition=\"side\"\n      size=\"xs\"\n      label={<Trans message=\"Items per page\" />}\n      selectedValue={pagination.per_page || defaultPerPage}\n      onSelectionChange={value => onPerPageChange(value as number)}\n    >\n      {perPageOptions.map(option => (\n        <Item key={option.key} value={option.key}>\n          {option.key}\n        </Item>\n      ))}\n    </Select>\n  ) : null;\n\n  return (\n    <div\n      className={clsx(\n        'flex h-54 select-none items-center justify-end gap-20 px-20',\n        className,\n      )}\n    >\n      {!isMobile && perPageSelect}\n      {pagination.from && pagination.to && 'total' in pagination && (\n        <div className=\"text-sm\">\n          <Trans\n            message=\":from - :to of :total\"\n            values={{\n              from: pagination.from,\n              to: pagination.to,\n              total: numberFormatter.format(pagination.total),\n            }}\n          />\n        </div>\n      )}\n      <div className=\"text-muted\">\n        <IconButton\n          disabled={query.isFetching || pagination.current_page < 2}\n          onClick={() => {\n            onPageChange?.(pagination?.current_page - 1);\n          }}\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <IconButton\n          disabled={query.isFetching || !hasNextPage(pagination)}\n          onClick={() => {\n            onPageChange?.(pagination?.current_page + 1);\n          }}\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FilterAltIcon = createSvgIcon(\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\n, 'FilterAltOutlined');\n","export const AccordionAnimation = {\n  variants: {\n    open: {\n      height: 'auto',\n      visibility: 'visible',\n      transitionEnd: {\n        overflow: 'auto',\n      },\n    },\n    closed: {\n      height: 0,\n      overflow: 'hidden',\n      transitionEnd: {\n        visibility: 'hidden',\n      },\n    },\n  },\n  transition: {type: 'tween', duration: 0.2},\n} as const;\n","import React, {\n  cloneElement,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useId,\n  useRef,\n} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\n\ntype Props = {\n  variant?: 'outline' | 'default' | 'minimal';\n  children?: ReactNode;\n  mode?: 'single' | 'multiple';\n  expandedValues?: (string | number)[];\n  defaultExpandedValues?: (string | number)[];\n  onExpandedChange?: (key: (string | number)[]) => void;\n  className?: string;\n  isLazy?: boolean;\n};\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      variant = 'default',\n      mode = 'single',\n      children,\n      className,\n      isLazy,\n      ...other\n    },\n    ref,\n  ) => {\n    const [expandedValues, setExpandedValues] = useControlledState(\n      other.expandedValues,\n      other.defaultExpandedValues || [],\n      other.onExpandedChange,\n    );\n\n    const itemsCount = React.Children.count(children);\n\n    return (\n      <div\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\n        ref={ref}\n        role=\"presentation\"\n      >\n        <AnimatePresence>\n          <FocusScope>\n            {React.Children.map(children, (child, index) => {\n              if (!isValidElement<AccordionItemProps>(child)) return null;\n              return cloneElement<AccordionItemProps>(child, {\n                key: child.key || index,\n                value: child.props.value || index,\n                isFirst: index === 0,\n                isLast: index === itemsCount - 1,\n                mode,\n                variant,\n                expandedValues,\n                setExpandedValues,\n                isLazy,\n              });\n            })}\n          </FocusScope>\n        </AnimatePresence>\n      </div>\n    );\n  },\n);\n\ninterface AccordionItemProps {\n  children: ReactNode;\n  disabled?: boolean;\n  label: ReactNode;\n  description?: ReactNode;\n  value?: string | number;\n  isFirst?: boolean;\n  isLast?: boolean;\n  bodyClassName?: string;\n  labelClassName?: string;\n  buttonPadding?: string;\n  chevronPosition?: 'left' | 'right';\n  startIcon?: ReactElement;\n  endAppend?: ReactElement;\n  variant?: 'outline' | 'default' | 'minimal';\n  expandedValues?: (string | number)[];\n  setExpandedValues?: (keys: (string | number)[]) => void;\n  mode?: 'single' | 'multiple';\n  footerContent?: ReactNode;\n  isLazy?: boolean;\n  onHeaderMouseEnter?: () => void;\n  onHeaderMouseLeave?: () => void;\n}\nexport function AccordionItem(props: AccordionItemProps) {\n  const {\n    children,\n    label,\n    disabled,\n    bodyClassName,\n    labelClassName,\n    buttonPadding = 'py-10 pl-14 pr-10',\n    startIcon,\n    description,\n    endAppend,\n    chevronPosition = 'right',\n    isFirst,\n    mode,\n    isLazy,\n    variant,\n    footerContent,\n    onHeaderMouseEnter,\n    onHeaderMouseLeave,\n  } = props;\n  const expandedValues = props.expandedValues || [];\n  const value = props.value || 0;\n  const setExpandedValues = props.setExpandedValues || (() => {});\n  const ref = useRef<HTMLButtonElement>(null);\n  const isExpanded = !disabled && expandedValues!.includes(value!);\n  const wasExpandedOnce = useRef(false);\n  if (isExpanded) {\n    wasExpandedOnce.current = true;\n  }\n  const focusManager = useFocusManager();\n  const id = useId();\n  const buttonId = `${id}-button`;\n  const panelId = `${id}-panel`;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowDown':\n        focusManager?.focusNext();\n        break;\n      case 'ArrowUp':\n        focusManager?.focusPrevious();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const toggle = () => {\n    const i = expandedValues.indexOf(value);\n    if (i > -1) {\n      const newKeys = [...expandedValues];\n      newKeys.splice(i, 1);\n      setExpandedValues(newKeys);\n    } else if (mode === 'single') {\n      setExpandedValues([value]);\n    } else {\n      setExpandedValues([...expandedValues, value]);\n    }\n  };\n\n  const chevron = (\n    <div className={clsx(variant === 'minimal' && '')}>\n      <ArrowDropDownIcon\n        aria-hidden=\"true\"\n        size=\"md\"\n        className={clsx(\n          disabled ? 'text-disabled' : 'text-muted',\n          isExpanded && 'rotate-180 transition-transform',\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(\n        variant === 'default' && 'border-b',\n        variant === 'outline' && 'rounded-panel border',\n        disabled && 'text-disabled',\n      )}\n    >\n      <h3\n        className={clsx(\n          'flex w-full items-center justify-between text-sm',\n          disabled && 'pointer-events-none',\n          isFirst && variant === 'default' && 'border-t',\n          isExpanded && variant !== 'minimal'\n            ? 'border-b'\n            : 'border-b border-b-transparent',\n          variant === 'outline'\n            ? isExpanded\n              ? 'rounded-panel-t'\n              : 'rounded-panel'\n            : undefined,\n        )}\n        onMouseEnter={onHeaderMouseEnter}\n        onMouseLeave={onHeaderMouseLeave}\n      >\n        <button\n          disabled={disabled}\n          aria-expanded={isExpanded}\n          id={buttonId}\n          aria-controls={panelId}\n          type=\"button\"\n          ref={ref}\n          onKeyDown={onKeyDown}\n          onClick={() => {\n            if (!disabled) {\n              toggle();\n            }\n          }}\n          className={clsx(\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\n            buttonPadding,\n          )}\n        >\n          {chevronPosition === 'left' && chevron}\n          {startIcon &&\n            cloneElement(startIcon, {\n              size: 'md',\n              className: clsx(\n                startIcon.props.className,\n                disabled ? 'text-disabled' : 'text-muted',\n              ),\n            })}\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\n            <div className={labelClassName} data-testid=\"accordion-label\">\n              {label}\n            </div>\n            {description && (\n              <div className=\"text-xs text-muted\">{description}</div>\n            )}\n          </div>\n          {chevronPosition === 'right' && chevron}\n        </button>\n        {endAppend && (\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\n            {endAppend}\n          </div>\n        )}\n      </h3>\n      <m.div\n        aria-labelledby={id}\n        role=\"region\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isExpanded ? 'open' : 'closed'}\n      >\n        <div className={clsx('p-16', bodyClassName)}>\n          {!isLazy || wasExpandedOnce ? children : null}\n        </div>\n        {footerContent}\n      </m.div>\n    </div>\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\n\nexport function BooleanFilterPanel({\n  filter,\n}: FilterPanelProps<FilterBooleanToggleControl>) {\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\n  return null;\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from './backend-filter';\nimport {Trans} from '../../i18n/trans';\nimport {useState} from 'react';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\nimport {Button} from '../../ui/buttons/button';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {Checkbox} from '../../ui/forms/toggle/checkbox';\nimport {SelectFilterPanel} from './panels/select-filter-panel';\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\nimport {InputFilterPanel} from './panels/input-filter-panel';\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\nimport clsx from 'clsx';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\n\nexport interface FilterItemFormValue<T = any> {\n  value: T;\n  operator?: FilterOperator;\n}\n\ninterface AddFilterDialogProps {\n  filters: BackendFilter[];\n}\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\n  const {formId} = useDialogContext();\n\n  // expand currently active filters\n  const [expandedFilters, setExpandedFilters] = useState<(string | number)[]>(\n    () => {\n      return decodedFilters.map(f => f.key);\n    },\n  );\n\n  const clearButton = (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      className=\"mr-auto\"\n      onClick={() => {\n        setExpandedFilters([]);\n      }}\n    >\n      <Trans message=\"Clear\" />\n    </Button>\n  );\n\n  const applyButton = (\n    <Button\n      size=\"xs\"\n      variant=\"flat\"\n      color=\"primary\"\n      className=\"ml-auto\"\n      type=\"submit\"\n      form={formId}\n    >\n      <Trans message=\"Apply\" />\n    </Button>\n  );\n\n  return (\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\n      <DialogHeader\n        padding=\"px-14 py-10\"\n        leftAdornment={clearButton}\n        rightAdornment={applyButton}\n      >\n        <Trans message=\"Filter\" />\n      </DialogHeader>\n      <DialogBody padding=\"p-0\">\n        <FilterList\n          filters={filters}\n          expandedFilters={expandedFilters}\n          setExpandedFilters={setExpandedFilters}\n        />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  expandedFilters: (string | number)[];\n  setExpandedFilters: (value: (string | number)[]) => void;\n}\nfunction FilterList({\n  filters,\n  expandedFilters,\n  setExpandedFilters,\n}: FilterListProps) {\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\n\n  // either get value and operator from url params if filter is active, or get defaults from filter config\n  const defaultValues: Record<string, FilterItemFormValue> = {};\n  filters.forEach(filter => {\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\n    defaultValues[filter.key] =\n      appliedFilter?.value !== undefined\n        ? // there might be some extra keys set on filter besides\n          // \"value\" and \"operator\", so add the whole object to form\n          appliedFilter\n        : {\n            value: filter.control.defaultValue,\n            operator: filter.defaultOperator,\n          };\n  });\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\n  const {formId, close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      id={formId}\n      onSubmit={formValue => {\n        const filterValue = Object.entries(formValue)\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\n          .filter(\n            ([key, fieldValue]) =>\n              expandedFilters.includes(key) && fieldValue !== undefined,\n          )\n          .map(([key, fieldValue]) => ({\n            key,\n            ...fieldValue, // value and operator from form\n          }));\n\n        replaceAll(filterValue);\n        close();\n      }}\n    >\n      <Accordion\n        mode=\"multiple\"\n        expandedValues={expandedFilters}\n        onExpandedChange={setExpandedFilters}\n      >\n        {filters.map(filter => (\n          <AccordionItem\n            startIcon={\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\n            }\n            key={filter.key}\n            value={filter.key}\n            label={<Trans {...filter.label} />}\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\n          >\n            {filter.description && (\n              <div\n                className={clsx(\n                  'text-xs text-muted',\n                  // boolean filter will have nothing in the panel, no need to add margin\n                  filter.control.type !== FilterControlType.BooleanToggle &&\n                    'mb-14',\n                )}\n              >\n                <Trans {...filter.description} />\n              </div>\n            )}\n            <AddFilterDialogPanel filter={filter} />\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </Form>\n  );\n}\n\ninterface ActiveFilterPanelProps {\n  filter: BackendFilter;\n}\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\n  switch (filter.control.type) {\n    case FilterControlType.Select:\n      return (\n        <SelectFilterPanel\n          filter={filter as BackendFilter<FilterSelectControl>}\n        />\n      );\n    case FilterControlType.ChipField:\n      return (\n        <ChipFieldFilterPanel\n          filter={filter as BackendFilter<FilterChipFieldControl>}\n        />\n      );\n    case FilterControlType.DateRangePicker:\n      return (\n        <DateRangeFilterPanel\n          filter={filter as BackendFilter<DatePickerFilterControl>}\n        />\n      );\n    case FilterControlType.SelectModel:\n      return (\n        <NormalizedModelFilterPanel\n          filter={filter as BackendFilter<FilterSelectModelControl>}\n        />\n      );\n    case FilterControlType.Input:\n      return (\n        <InputFilterPanel\n          filter={filter as BackendFilter<FilterTextInputControl>}\n        />\n      );\n    case FilterControlType.BooleanToggle:\n      return (\n        <BooleanFilterPanel\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\n        />\n      );\n    case 'custom':\n      const CustomComponent = filter.control.panel;\n      return (\n        <CustomComponent\n          filter={filter as BackendFilter<CustomFilterControl>}\n        />\n      );\n    default:\n      return null;\n  }\n}\n","import {Button, ButtonProps} from '../../ui/buttons/button';\nimport {BackendFilter} from './backend-filter';\nimport {FilterAltIcon} from '../../icons/material/FilterAlt';\nimport {Trans} from '../../i18n/trans';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {AddFilterDialog} from './add-filter-dialog';\nimport {ReactElement} from 'react';\n\ninterface AddFilterButtonProps {\n  filters: BackendFilter[];\n  icon?: ReactElement;\n  color?: ButtonProps['color'];\n  variant?: ButtonProps['variant'];\n  disabled?: boolean;\n  size?: ButtonProps['size'];\n  className?: string;\n}\nexport function AddFilterButton({\n  filters,\n  icon = <FilterAltIcon />,\n  color = 'primary',\n  variant = 'outline',\n  size = 'sm',\n  disabled,\n  className,\n}: AddFilterButtonProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const desktopButton = (\n    <Button\n      variant={variant}\n      color={color}\n      startIcon={icon}\n      disabled={disabled}\n      size={size}\n      className={className}\n    >\n      <Trans message=\"Filter\" />\n    </Button>\n  );\n\n  const mobileButton = (\n    <IconButton\n      color={color}\n      size=\"sm\"\n      variant={variant}\n      disabled={disabled}\n      className={className}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  return (\n    <DialogTrigger type=\"popover\">\n      {isMobile ? mobileButton : desktopButton}\n      <AddFilterDialog filters={filters} />\n    </DialogTrigger>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport {BackendFilter} from './filters/backend-filter';\nimport {useTrans} from '../i18n/use-trans';\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '../icons/material/Search';\nimport {AddFilterButton} from './filters/add-filter-button';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  actions?: ReactNode;\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  searchPlaceholder?: MessageDescriptor;\n  searchValue?: string;\n  onSearchChange: (value: string) => void;\n}\nexport function DataTableHeader({\n  actions,\n  filters,\n  filtersLoading,\n  searchPlaceholder = message('Type to search...'),\n  searchValue = '',\n  onSearchChange,\n}: Props) {\n  const {trans} = useTrans();\n  return (\n    <HeaderLayout>\n      <TextField\n        inputTestId=\"datatable-search\"\n        className=\"flex-auto max-w-440 mr-auto\"\n        inputWrapperClassName=\"mr-24 md:mr-0\"\n        placeholder={trans(searchPlaceholder)}\n        startAdornment={<SearchIcon />}\n        value={searchValue}\n        onChange={e => {\n          onSearchChange(e.target.value);\n        }}\n      />\n      {filters && (\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\n      )}\n      {actions}\n    </HeaderLayout>\n  );\n}\n\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\n  return (\n    <div\n      className=\"mb-24 flex items-center gap-8 md:gap-12 text-muted relative h-42\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {ReactNode} from 'react';\nimport {HeaderLayout} from '@common/datatable/data-table-header';\n\ninterface Props {\n  actions?: ReactNode;\n  selectedItemsCount: number;\n}\nexport function SelectedStateDatatableHeader({\n  actions,\n  selectedItemsCount,\n}: Props) {\n  return (\n    <HeaderLayout data-testid=\"datatable-selected-header\">\n      <div className=\"mr-auto\">\n        <Trans\n          message=\"[one 1 item|other :count items] selected\"\n          values={{count: selectedItemsCount}}\n        />\n      </div>\n      {actions}\n    </HeaderLayout>\n  );\n}\n","import {m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport React from 'react';\n\nexport function FilterListSkeleton() {\n  return (\n    <m.div\n      className=\"flex items-center gap-6 h-30\"\n      key=\"filter-list-skeleton\"\n      {...opacityAnimation}\n    >\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\n    </m.div>\n  );\n}\n","import React, {\n  cloneElement,\n  ComponentProps,\n  ReactElement,\n  ReactNode,\n  useState,\n} from 'react';\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\nimport {BackendFilter} from './filters/backend-filter';\nimport {MessageDescriptor} from '../i18n/message-descriptor';\nimport {ColumnConfig} from './column-config';\nimport {useTrans} from '../i18n/use-trans';\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\nimport {\n  GetDatatableDataParams,\n  useDatatableData,\n} from './requests/paginated-resources';\nimport {DataTableContext} from './page/data-table-context';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {ProgressBar} from '../ui/progress/progress-bar';\nimport {Table, TableProps} from '../ui/tables/table';\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\nimport {DataTableHeader} from './data-table-header';\nimport {FilterList} from './filters/filter-list/filter-list';\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\nimport clsx from 'clsx';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\n\nexport interface DataTableProps<T extends TableDataItem> {\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  columns: ColumnConfig<T>[];\n  searchPlaceholder?: MessageDescriptor;\n  queryParams?: Record<string, string | number | undefined | null>;\n  endpoint: string;\n  resourceName?: ReactNode;\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\n  actions?: ReactNode;\n  enableSelection?: boolean;\n  selectionStyle?: TableProps<T>['selectionStyle'];\n  selectedActions?: ReactNode;\n  onRowAction?: TableProps<T>['onAction'];\n  tableDomProps?: ComponentProps<'table'>;\n  children?: ReactNode;\n  collapseTableOnMobile?: boolean;\n  cellHeight?: string;\n}\nexport function DataTable<T extends TableDataItem>({\n  filters,\n  filtersLoading,\n  columns,\n  searchPlaceholder,\n  queryParams,\n  endpoint,\n  actions,\n  selectedActions,\n  emptyStateMessage,\n  tableDomProps,\n  onRowAction,\n  enableSelection = true,\n  selectionStyle = 'checkbox',\n  children,\n  cellHeight,\n  collapseTableOnMobile = true,\n}: DataTableProps<T>) {\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\n  const query = useDatatableData<T>(\n    endpoint,\n    {\n      ...params,\n      ...queryParams,\n      [BackendFiltersUrlKey]: encodedFilters,\n    },\n    undefined,\n    () => setSelectedRows([]),\n  );\n\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\n  const pagination = query.data?.pagination;\n\n  return (\n    <DataTableContext.Provider\n      value={{\n        selectedRows,\n        setSelectedRows,\n        endpoint,\n        params,\n        setParams,\n        query,\n      }}\n    >\n      {children}\n      <AnimatePresence initial={false} mode=\"wait\">\n        {selectedRows.length ? (\n          <SelectedStateDatatableHeader\n            selectedItemsCount={selectedRows.length}\n            actions={selectedActions}\n            key=\"selected\"\n          />\n        ) : (\n          <DataTableHeader\n            searchPlaceholder={searchPlaceholder}\n            searchValue={params.query}\n            onSearchChange={query => setParams({...params, query})}\n            actions={actions}\n            filters={filters}\n            filtersLoading={filtersLoading}\n            key=\"default\"\n          />\n        )}\n      </AnimatePresence>\n\n      {filters && (\n        <div className=\"mb-14\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {filtersLoading && encodedFilters ? (\n              <FilterListSkeleton />\n            ) : (\n              <m.div key=\"filter-list\" {...opacityAnimation}>\n                <FilterList filters={filters} />\n              </m.div>\n            )}\n          </AnimatePresence>\n        </div>\n      )}\n\n      <div\n        className={clsx(\n          'relative rounded-panel',\n          (!isMobile || !collapseTableOnMobile) && 'border',\n        )}\n      >\n        {query.isFetching && (\n          <ProgressBar\n            isIndeterminate\n            className=\"absolute left-0 top-0 z-10 w-full\"\n            aria-label={trans({message: 'Loading'})}\n            size=\"xs\"\n          />\n        )}\n\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\n          <Table\n            {...tableDomProps}\n            columns={columns}\n            data={pagination?.data || []}\n            sortDescriptor={params}\n            onSortChange={descriptor => {\n              setParams({...params, ...descriptor});\n            }}\n            selectedRows={selectedRows}\n            enableSelection={enableSelection}\n            selectionStyle={selectionStyle}\n            onSelectionChange={setSelectedRows}\n            onAction={onRowAction}\n            collapseOnMobile={collapseTableOnMobile}\n            cellHeight={cellHeight}\n          />\n        </div>\n\n        {(query.isFetched || query.isPlaceholderData) &&\n        !pagination?.data.length ? (\n          <div className=\"pt-50\">\n            {cloneElement(emptyStateMessage, {\n              isFiltering,\n            })}\n          </div>\n        ) : undefined}\n\n        <DataTablePaginationFooter\n          query={query}\n          onPageChange={page => setParams({...params, page})}\n          onPerPageChange={perPage => setParams({...params, perPage})}\n        />\n      </div>\n    </DataTableContext.Provider>\n  );\n}\n","import React, {ReactElement, ReactNode, useId} from 'react';\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\nimport {DataTable, DataTableProps} from '../data-table';\nimport {TableProps} from '../../ui/tables/table';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport clsx from 'clsx';\n\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\n  title?: ReactElement<MessageDescriptor>;\n  headerContent?: ReactNode;\n  headerItemsAlign?: string;\n  enableSelection?: boolean;\n  onRowAction?: TableProps<T>['onAction'];\n  className?: string;\n}\nexport function DataTablePage<T extends TableDataItem>({\n  title,\n  headerContent,\n  headerItemsAlign = 'items-end',\n  className,\n  ...dataTableProps\n}: Props<T>) {\n  const titleId = useId();\n\n  return (\n    <div className={clsx('p-12 md:p-24', className)}>\n      {title && (\n        <div\n          className={clsx(\n            'mb-16',\n            headerContent && `flex ${headerItemsAlign} gap-4`\n          )}\n        >\n          <StaticPageTitle>{title}</StaticPageTitle>\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\n            {title}\n          </h1>\n          {headerContent}\n        </div>\n      )}\n\n      <DataTable\n        {...dataTableProps}\n        tableDomProps={{\n          'aria-labelledby': title ? titleId : undefined,\n        }}\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {DatatableDataQueryKey} from './paginated-resources';\nimport {useDataTable} from '../page/data-table-context';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\nimport {Key} from 'react';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport function useDeleteSelectedRows() {\n  const {endpoint, selectedRows, setSelectedRows} = useDataTable();\n  return useMutation({\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      toast(\n        message('Deleted [one 1 record|other :count records]', {\n          values: {count: selectedRows.length},\n        }),\n      );\n      setSelectedRows([]);\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not delete records')),\n  });\n}\n\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\n}\n","import {Button} from '../../ui/buttons/button';\nimport {Trans} from '../../i18n/trans';\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\nimport {useDataTable} from './data-table-context';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\nexport function DeleteSelectedItemsAction() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <DeleteItemsDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DeleteItemsDialog() {\n  const deleteSelectedRows = useDeleteSelectedRows();\n  const {selectedRows} = useDataTable();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isLoading={deleteSelectedRows.isPending}\n      title={\n        <Trans\n          message=\"Delete [one 1 item|other :count items]?\"\n          values={{count: selectedRows.length}}\n        />\n      }\n      body={\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isDanger\n      onConfirm={() => {\n        deleteSelectedRows.mutate(undefined, {onSuccess: () => close()});\n      }}\n    />\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {IllustratedMessage} from '../../ui/images/illustrated-message';\nimport {SvgImage} from '../../ui/images/svg-image/svg-image';\nimport {Trans} from '../../i18n/trans';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\n\nexport interface DataTableEmptyStateMessageProps {\n  isFiltering?: boolean;\n  title: ReactNode;\n  filteringTitle?: ReactNode;\n  image: string;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function DataTableEmptyStateMessage({\n  isFiltering,\n  title,\n  filteringTitle,\n  image,\n  size,\n  className,\n}: DataTableEmptyStateMessageProps) {\n  const isMobile = useIsMobileMediaQuery();\n  if (!size) {\n    size = isMobile ? 'sm' : 'md';\n  }\n\n  // allow user to disable filtering message variation by not passing in \"filteringTitle\"\n  return (\n    <IllustratedMessage\n      className={className}\n      size={size}\n      image={<SvgImage src={image} />}\n      title={isFiltering && filteringTitle ? filteringTitle : title}\n      description={\n        isFiltering && filteringTitle ? (\n          <Trans message=\"Try another search query or different filters\" />\n        ) : undefined\n      }\n    />\n  );\n}\n","export default \"__VITE_ASSET__d109d853__\"","import {AddIcon} from '../icons/material/Add';\nimport {Button} from '../ui/buttons/button';\nimport React, {ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {To} from 'react-router-dom';\nimport {ButtonBaseProps} from '../ui/buttons/button-base';\n\nexport interface DataTableAddItemButtonProps {\n  children: ReactNode;\n  to?: To;\n  elementType?: ButtonBaseProps['elementType'];\n  onClick?: ButtonBaseProps['onClick'];\n}\nexport const DataTableAddItemButton = React.forwardRef<\n  HTMLButtonElement,\n  DataTableAddItemButtonProps\n>(({children, to, elementType, onClick}, ref) => {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    return (\n      <IconButton\n        ref={ref}\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"flex-shrink-0\"\n        size=\"sm\"\n        to={to}\n        elementType={elementType}\n        onClick={onClick}\n      >\n        <AddIcon />\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      ref={ref}\n      startIcon={<AddIcon />}\n      variant=\"flat\"\n      color=\"primary\"\n      size=\"sm\"\n      to={to}\n      elementType={elementType}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  downloadPath?: string;\n  result?: 'jobQueued';\n}\n\nexport type ExportCsvPayload = Record<string, string | number | undefined>;\n\nexport function useExportCsv(endpoint: string) {\n  return useMutation({\n    mutationFn: (payload?: ExportCsvPayload) => exportCsv(endpoint, payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction exportCsv(\n  endpoint: string,\n  payload: ExportCsvPayload | undefined,\n): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {Button} from '../../ui/buttons/button';\nimport {Trans} from '../../i18n/trans';\n\nexport function CsvExportInfoDialog() {\n  const {close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Csv export\" />\n      </DialogHeader>\n      <DialogBody>\n        <Trans\n          message=\"Your request is being processed. We'll email you when the report is ready to download. In\n            certain cases, it might take a little longer, depending on the number of items beings\n            exported and the volume of activity.\"\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" color=\"primary\" onClick={close}>\n          <Trans message=\"Got it\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {IconButton} from '../../ui/buttons/icon-button';\nimport {FileDownloadIcon} from '../../icons/material/FileDownload';\nimport React, {Fragment, useState} from 'react';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {ExportCsvPayload, useExportCsv} from '../requests/use-export-csv';\nimport {downloadFileFromUrl} from '../../uploads/utils/download-file-from-url';\nimport {CsvExportInfoDialog} from './csv-export-info-dialog';\n\ninterface DataTableExportCsvButtonProps {\n  endpoint: string;\n  payload?: ExportCsvPayload;\n}\nexport function DataTableExportCsvButton({\n  endpoint,\n  payload,\n}: DataTableExportCsvButtonProps) {\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const exportCsv = useExportCsv(endpoint);\n\n  return (\n    <Fragment>\n      <IconButton\n        variant=\"outline\"\n        color=\"primary\"\n        size=\"sm\"\n        className=\"flex-shrink-0\"\n        disabled={exportCsv.isPending}\n        onClick={() => {\n          exportCsv.mutate(payload, {\n            onSuccess: response => {\n              if (response.downloadPath) {\n                downloadFileFromUrl(response.downloadPath);\n              } else {\n                setDialogIsOpen(true);\n              }\n            },\n          });\n        }}\n      >\n        <FileDownloadIcon />\n      </IconButton>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={dialogIsOpen}\n        onOpenChange={setDialogIsOpen}\n      >\n        <CsvExportInfoDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport clsx from 'clsx';\n\ninterface Props {\n  image?: string;\n  label: ReactNode;\n  description?: ReactNode;\n  labelClassName?: string;\n  avatarSize?: AvatarProps['size'];\n}\nexport function NameWithAvatar({\n  image,\n  label,\n  description,\n  labelClassName,\n  avatarSize = 'md',\n}: Props) {\n  return (\n    <div className=\"flex items-center gap-12\">\n      {image && (\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\n      )}\n      <div className=\"min-w-0 overflow-hidden\">\n        <div\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\n        >\n          {label}\n        </div>\n        {description && (\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function NameWithAvatarPlaceholder({\n  labelClassName,\n  showDescription,\n}: Partial<Props> & {\n  showDescription?: boolean;\n}) {\n  return (\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\n      <div className=\"flex-auto\">\n        <div className={clsx(labelClassName, 'leading-3')}>\n          <Skeleton />\n        </div>\n        {showDescription && (\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PersonOffIcon = createSvgIcon(\n  <path d=\"m20 17.17-3.37-3.38c.64.22 1.23.48 1.77.76.97.51 1.58 1.52 1.6 2.62zm1.19 4.02-1.41 1.41-2.61-2.6H4v-2.78c0-1.12.61-2.15 1.61-2.66 1.29-.66 2.87-1.22 4.67-1.45L1.39 4.22 2.8 2.81l18.39 18.38zM15.17 18l-3-3H12c-2.37 0-4.29.73-5.48 1.34-.32.16-.52.5-.52.88V18h9.17zM12 6c1.1 0 2 .9 2 2 0 .86-.54 1.59-1.3 1.87l1.48 1.48C15.28 10.64 16 9.4 16 8c0-2.21-1.79-4-4-4-1.4 0-2.64.72-3.35 1.82l1.48 1.48C10.41 6.54 11.14 6 12 6z\" />\n, 'PersonOffOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@common/auth/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface BanUserPayload {\n  ban_until?: string;\n  permanent?: boolean;\n  comment?: string;\n}\n\nexport function useBanUser(\n  form: UseFormReturn<BanUserPayload>,\n  userId: number,\n) {\n  return useMutation({\n    mutationFn: (payload: BanUserPayload) => banUser(userId, payload),\n    onSuccess: async () => {\n      toast(message('User suspended'));\n      await queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction banUser(userId: number, payload: BanUserPayload): Promise<Response> {\n  return apiClient.post(`users/${userId}/ban`, payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Form} from '@common/ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  BanUserPayload,\n  useBanUser,\n} from '@common/admin/users/requests/use-ban-user';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {User} from '@common/auth/user';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\n\ninterface Props {\n  user: User;\n}\nexport function BanUserDialog({user}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<BanUserPayload>({\n    defaultValues: {\n      permanent: true,\n    },\n  });\n  const isPermanent = form.watch('permanent');\n  const banUser = useBanUser(form, user.id);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            banUser.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FormDatePicker\n            name=\"ban_until\"\n            label={<Trans message=\"Suspend until\" />}\n            disabled={isPermanent}\n          />\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\n            <Trans message=\"Permanent\" />\n          </FormSwitch>\n          <FormTextField\n            className=\"mt-24\"\n            name=\"comment\"\n            inputElementType=\"textarea\"\n            maxLength={250}\n            label={<Trans message=\"Reason\" />}\n            placeholder={trans(message('Optional'))}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={banUser.isPending}\n        >\n          <Trans message=\"Suspend\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUnbanUser(userId: number) {\n  return useMutation({\n    mutationFn: () => unbanUser(userId),\n    onSuccess: () => {\n      toast(message('User unsuspended'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unbanUser(userId: number): Promise<Response> {\n  return apiClient.delete(`users/${userId}/unban`).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient} from '@common/http/query-client';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {User} from '@common/auth/user';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  userId: string | number;\n}\n\nexport function useImpersonateUser() {\n  return useMutation({\n    mutationFn: (payload: Payload) => impersonateUser(payload),\n    onSuccess: async response => {\n      toast(message(`Impersonating User \"${response.user.display_name}\"`));\n      window.location.href = '/';\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction impersonateUser(payload: Payload) {\n  return apiClient\n    .post<Response>(`admin/users/impersonate/${payload.userId}`, payload)\n    .then(r => r.data);\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@common/auth/user';\nimport {Trans} from '@common/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {PersonOffIcon} from '@common/icons/material/PersonOff';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport React from 'react';\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useImpersonateUser} from '@common/admin/users/requests/use-impersonate-user';\nimport {LoginIcon} from '@common/icons/material/Login';\n\nexport const userDatatableColumns: ColumnConfig<User>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'email',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"User\" />,\n    body: user => (\n      <NameWithAvatar\n        image={user.avatar}\n        label={user.display_name}\n        description={user.email}\n      />\n    ),\n  },\n  {\n    key: 'subscribed',\n    header: () => <Trans message=\"Subscribed\" />,\n    width: 'w-96',\n    body: user =>\n      user.subscriptions?.length ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'roles',\n    header: () => <Trans message=\"Roles\" />,\n    body: user => (\n      <ChipList radius=\"rounded\" size=\"xs\">\n        {user?.roles.map(role => (\n          <Chip key={role.id} selectable>\n            <Link\n              className={clsx('capitalize')}\n              target=\"_blank\"\n              to={`/admin/roles/${role.id}/edit`}\n            >\n              <Trans message={role.name} />\n            </Link>\n          </Chip>\n        ))}\n      </ChipList>\n    ),\n  },\n  {\n    key: 'firstName',\n    allowsSorting: true,\n    header: () => <Trans message=\"First name\" />,\n    body: user => user.first_name,\n  },\n  {\n    key: 'lastName',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last name\" />,\n    body: user => user.last_name,\n  },\n  {\n    key: 'createdAt',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Created at\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.created_at} />\n      </time>\n    ),\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-128 flex-shrink-0',\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    body: user => (\n      <div className=\"text-muted\">\n        <Link to={`${user.id}/edit`}>\n          <Tooltip label={<Trans message=\"Edit user\" />}>\n            <IconButton size=\"md\">\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        </Link>\n        {user.banned_at ? (\n          <UnbanButton user={user} />\n        ) : (\n          <DialogTrigger type=\"modal\">\n            <Tooltip label={<Trans message=\"Suspend user\" />}>\n              <IconButton size=\"md\">\n                <PersonOffIcon />\n              </IconButton>\n            </Tooltip>\n            <BanUserDialog user={user} />\n          </DialogTrigger>\n        )}\n        <ImpersonateButton user={user} />\n      </div>\n    ),\n  },\n];\n\ninterface UnbanButtonProps {\n  user: User;\n}\nfunction UnbanButton({user}: UnbanButtonProps) {\n  const unban = useUnbanUser(user.id);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          unban.mutate();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Remove suspension\" />}>\n        <IconButton size=\"md\" color=\"danger\">\n          <PersonOffIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={\n          <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\n        }\n        body={\n          <Trans message=\"Are you sure you want to remove suspension from this user?\" />\n        }\n        confirm={<Trans message=\"Unsuspend\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface ImpersonateButtonProps {\n  user: User;\n}\nfunction ImpersonateButton({user}: ImpersonateButtonProps) {\n  const impersonate = useImpersonateUser();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Login as user\" />}>\n        <IconButton size=\"md\">\n          <LoginIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={\n          <Trans\n            message=\"Login as “:name“\"\n            values={{name: user.display_name}}\n          />\n        }\n        isLoading={impersonate.isPending}\n        body={<Trans message=\"Are you sure you want to login as this user?\" />}\n        confirm={<Trans message=\"Login\" />}\n        onConfirm={() => {\n          impersonate.mutate({userId: user.id});\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {UserDatatableFilters} from './user-datatable-filters';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {Trans} from '../../i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport teamSvg from '../roles/team.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\nimport {useSettings} from '../../core/settings/use-settings';\nimport {userDatatableColumns} from '@common/admin/users/user-datatable-columns';\n\nexport function UserDatatable() {\n  const {billing} = useSettings();\n\n  const filteredColumns = !billing.enable\n    ? userDatatableColumns.filter(c => c.key !== 'subscribed')\n    : userDatatableColumns;\n\n  return (\n    <Fragment>\n      <DataTablePage\n        endpoint=\"users\"\n        title={<Trans message=\"Users\" />}\n        filters={UserDatatableFilters}\n        columns={filteredColumns}\n        actions={<Actions />}\n        queryParams={{with: 'subscriptions,bans'}}\n        selectedActions={<DeleteSelectedItemsAction />}\n        emptyStateMessage={\n          <DataTableEmptyStateMessage\n            image={teamSvg}\n            title={<Trans message=\"No users have been created yet\" />}\n            filteringTitle={<Trans message=\"No matching users\" />}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"users/csv/export\" />\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new user\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\n  return array.reduce<any>((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n}\n","import {\n  IAppearanceConfig,\n  MenuSectionConfig,\n} from '@common/admin/appearance/types/appearance-editor-config';\nimport {message} from '@common/i18n/message';\nimport {chunkArray} from '@common/utils/array/chunk-array';\nimport {AppearanceEditorBreadcrumbItem} from '@common/admin/appearance/types/appearance-editor-section';\n\nexport const DefaultAppearanceConfig: IAppearanceConfig = {\n  preview: {\n    defaultRoute: '/',\n    navigationRoutes: [],\n  },\n  sections: {\n    general: {\n      label: message('General'),\n      position: 1,\n      buildBreadcrumb: () => [\n        {\n          label: message('General'),\n          location: `general`,\n        },\n      ],\n    },\n    themes: {\n      label: message('Themes'),\n      position: 2,\n      buildBreadcrumb: (pathname, formValue) => {\n        const parts = pathname.split('/').filter(p => !!p);\n        const [, , , themeIndex] = parts;\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\n          {\n            label: message('Themes'),\n            location: `themes`,\n          },\n        ];\n        if (themeIndex != null) {\n          breadcrumb.push({\n            label: formValue.appearance.themes.all[+themeIndex]?.name,\n            location: `themes/${themeIndex}`,\n          });\n        }\n        if (parts.at(-1) === 'font') {\n          breadcrumb.push({\n            label: message('Font'),\n            location: `themes/${themeIndex}/font`,\n          });\n        }\n        if (parts.at(-1) === 'radius') {\n          breadcrumb.push({\n            label: message('Rounding'),\n            location: `themes/${themeIndex}/radius`,\n          });\n        }\n        return breadcrumb;\n      },\n    },\n    menus: {\n      label: message('Menus'),\n      position: 3,\n      buildBreadcrumb: (pathname, formValue) => {\n        // /admin/appearance/menus/0/items/1\n        const parts = pathname.split('/').filter(p => !!p);\n        const [, , ...rest] = parts;\n        // admin/appearance\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\n          {\n            label: message('Menus'),\n            location: 'menus',\n          },\n        ];\n        // chunk every two items: [form group, item index]\n        const chunked = chunkArray(rest, 2);\n        chunked.forEach(([sectionName, sectionIndex], chunkIndex) => {\n          // menu\n          if (sectionName === 'menus' && sectionIndex != null) {\n            breadcrumb.push({\n              label: formValue.settings.menus[+sectionIndex]?.name,\n              location: `menus/${sectionIndex}`,\n            });\n            // menu item\n          } else if (sectionName === 'items' && sectionIndex != null) {\n            const [, menuIndex] = chunked[chunkIndex - 1];\n            breadcrumb.push({\n              label:\n                formValue.settings.menus[+menuIndex].items[+sectionIndex]\n                  ?.label,\n              location: `menus/${menuIndex}/${sectionIndex}`,\n            });\n          }\n        });\n        return breadcrumb;\n      },\n      config: {\n        availableRoutes: [\n          '/',\n          '/login',\n          '/register',\n          '/contact',\n          '/billing/pricing',\n          '/account-settings',\n          '/admin',\n          '/admin/appearance',\n          '/admin/settings',\n          '/admin/plans',\n          '/admin/subscriptions',\n          '/admin/users',\n          '/admin/roles',\n          '/admin/pages',\n          '/admin/tags',\n          '/admin/files',\n          '/admin/localizations',\n          '/admin/ads',\n          '/admin/settings/authentication',\n          '/admin/settings/branding',\n          '/admin/settings/cache',\n          '/admin/settings/providers',\n          '/api-docs',\n        ],\n        positions: [\n          'admin-navbar',\n          'admin-sidebar',\n          'custom-page-navbar',\n          'auth-page-footer',\n          'auth-dropdown',\n          'account-settings-page',\n          'billing-page',\n          'checkout-page-navbar',\n          'checkout-page-footer',\n          'pricing-table-page',\n          'contact-us-page',\n          'notifications-page',\n          'footer',\n          'footer-secondary',\n        ],\n      } as MenuSectionConfig,\n    },\n    'custom-code': {\n      label: message('Custom Code'),\n      position: 4,\n      buildBreadcrumb: () => [\n        {\n          label: message('Custom code'),\n          location: `custom-code`,\n        },\n      ],\n    },\n    'seo-settings': {\n      label: message('SEO Settings'),\n      position: 5,\n      buildBreadcrumb: () => [\n        {\n          label: message('SEO'),\n          location: `seo`,\n        },\n      ],\n    },\n  },\n};\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\nimport {InputSize} from '@common/ui/forms/input-field/input-size';\n\nexport interface BaseSliderProps extends UseSliderProps {\n  slider: UseSliderReturn;\n  children: ReactNode;\n}\n\nexport function BaseSlider(props: BaseSliderProps) {\n  const {\n    size = 'md',\n    inline,\n    label,\n    showValueLabel = !!label,\n    className,\n    width = 'w-full',\n    slider,\n    children,\n    trackColor = 'primary',\n    fillColor = 'primary',\n  } = props;\n\n  const {\n    domProps,\n    trackRef,\n    getThumbPercent,\n    getThumbValueLabel,\n    labelId,\n    groupId,\n    thumbIds,\n    isDisabled,\n    numberFormatter,\n    minValue,\n    maxValue,\n    step,\n    values,\n    getValueLabel,\n  } = slider;\n\n  let outputValue = '';\n  let maxLabelLength = Math.max(\n    [...numberFormatter.format(minValue)].length,\n    [...numberFormatter.format(maxValue)].length,\n    [...numberFormatter.format(step)].length,\n  );\n\n  if (getValueLabel) {\n    outputValue = getValueLabel(values[0]);\n  } else if (values.length === 1) {\n    outputValue = getThumbValueLabel(0);\n  } else if (values.length === 2) {\n    // This should really use the NumberFormat#formatRange proposal...\n    // https://github.com/tc39/ecma402/issues/393\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\n    maxLabelLength =\n      3 +\n      2 *\n        Math.max(\n          maxLabelLength,\n          [...numberFormatter.format(minValue)].length,\n          [...numberFormatter.format(maxValue)].length,\n        );\n  }\n  const style = getInputFieldClassNames({\n    size,\n    disabled: isDisabled,\n    labelDisplay: 'flex',\n  });\n\n  const wrapperClassname = clsx('touch-none', className, width, {\n    'flex items-center': inline,\n  });\n\n  return (\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\n      {(label || showValueLabel) && (\n        <div className={clsx(style.label, 'select-none')}>\n          {label && (\n            <label\n              onClick={() => {\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n                // so do it manually. In addition, make sure we show the focus ring.\n                document.getElementById(thumbIds[0])?.focus();\n              }}\n              id={labelId}\n              htmlFor={groupId}\n            >\n              {label}\n            </label>\n          )}\n          {showValueLabel && (\n            <output\n              htmlFor={thumbIds[0]}\n              className=\"ml-auto text-right\"\n              aria-live=\"off\"\n              style={\n                !maxLabelLength\n                  ? undefined\n                  : {\n                      width: `${maxLabelLength}ch`,\n                      minWidth: `${maxLabelLength}ch`,\n                    }\n              }\n            >\n              {outputValue}\n            </output>\n          )}\n        </div>\n      )}\n      <div\n        ref={trackRef}\n        className=\"relative h-30\"\n        {...domProps}\n        role=\"presentation\"\n      >\n        <div\n          className={clsx(\n            'absolute inset-0 m-auto rounded',\n            getTrackColor(trackColor, isDisabled),\n            getTrackHeight(size),\n          )}\n        />\n        <div\n          className={clsx(\n            'absolute inset-0 my-auto rounded',\n            getFillColor(fillColor, isDisabled),\n            getTrackHeight(size),\n          )}\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\n        />\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction getTrackHeight(size: InputSize): string {\n  switch (size) {\n    case 'xs':\n      return 'h-2';\n    case 'sm':\n      return 'h-3';\n    default:\n      return 'h-4';\n  }\n}\n\nfunction getTrackColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled/60';\n    case 'primary':\n      return 'bg-primary-light';\n    case 'neutral':\n      return 'bg-divider';\n    default:\n      return color;\n  }\n}\n\nfunction getFillColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled';\n    case 'primary':\n      return 'bg-primary';\n    default:\n      return color;\n  }\n}\n","import {\n  mergeProps,\n  snapValueToStep,\n  useGlobalListeners,\n} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport React, {\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {clamp} from '@common/utils/number/clamp';\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\nimport {useNumberFormatter} from '@common/i18n/use-number-formatter';\nimport type {NumberFormatOptions} from '@internationalized/number';\nimport {InputSize} from '../input-field/input-size';\n\nexport interface UseSliderProps<T = number[]> {\n  formatOptions?: NumberFormatOptions;\n  onPointerDown?: () => void;\n  onPointerMove?: (e: React.PointerEvent) => void;\n  onChange?: (value: T) => void;\n  onChangeEnd?: (value: T) => void;\n  value?: T;\n  defaultValue?: T;\n  getValueLabel?: (value: number) => string;\n  minValue?: number;\n  maxValue?: number;\n  step?: number;\n  isDisabled?: boolean;\n  size?: InputSize;\n  label?: ReactNode;\n  inline?: boolean;\n  className?: string;\n  width?: string;\n  showValueLabel?: boolean;\n  fillColor?: 'primary' | string;\n  trackColor?: 'primary' | 'neutral' | string;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n}\n\nexport interface UseSliderReturn {\n  domProps: HTMLAttributes<HTMLElement>;\n  trackRef: RefObject<HTMLDivElement>;\n  isPointerOver: boolean;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n  step: number;\n  isDisabled: boolean;\n  values: number[];\n  minValue: number;\n  maxValue: number;\n  focusedThumb: number | undefined;\n  labelId: string | undefined;\n  groupId: string;\n  thumbIds: string[];\n  numberFormatter: Intl.NumberFormat;\n  getThumbPercent: (index: number) => number;\n  getThumbMinValue: (index: number) => number;\n  getThumbMaxValue: (index: number) => number;\n  getThumbValueLabel: (index: number) => string;\n  setThumbValue: (index: number, value: number) => void;\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\n  isThumbDragging: (index: number) => boolean;\n  setThumbEditable: (index: number, editable: boolean) => void;\n  setFocusedThumb: (index: number | undefined) => void;\n  getValueLabel?: (value: number) => string;\n}\n\nexport function useSlider({\n  minValue = 0,\n  maxValue = 100,\n  isDisabled = false,\n  step = 1,\n  formatOptions,\n  onChangeEnd,\n  onPointerDown,\n  label,\n  getValueLabel,\n  showThumbOnHoverOnly,\n  thumbSize,\n  onPointerMove,\n  ...props\n}: UseSliderProps): UseSliderReturn {\n  const [isPointerOver, setIsPointerOver] = useState(false);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n  const trackRef = useRef<HTMLDivElement>(null);\n\n  // values will be stored in internal state as an array for both slider and range slider\n  const [values, setValues] = useControlledState<number[]>(\n    props.value ? props.value : undefined,\n    props.defaultValue ?? ([minValue] as any),\n    props.onChange as any\n  );\n  // need to also store values in ref, because state value would\n  // lag behind by one between pointer down and move callbacks\n  const valuesRef = useRef<number[] | null>(null);\n  valuesRef.current = values;\n\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\n    new Array(values.length).fill(false)\n  );\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\n  draggedThumbsRef.current = draggedThumbs;\n\n  // formatted value for <output> and thumb aria labels\n  function getFormattedValue(value: number) {\n    return numberFormatter.format(value);\n  }\n\n  const isThumbDragging = (index: number) => {\n    return draggedThumbsRef.current?.[index] || false;\n  };\n\n  const getThumbValueLabel = (index: number) =>\n    getFormattedValue(values[index]);\n\n  const getThumbMinValue = (index: number) =>\n    index === 0 ? minValue : values[index - 1];\n  const getThumbMaxValue = (index: number) =>\n    index === values.length - 1 ? maxValue : values[index + 1];\n\n  const setThumbValue = (index: number, value: number) => {\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\n      return;\n    }\n    const thisMin = getThumbMinValue(index);\n    const thisMax = getThumbMaxValue(index);\n\n    // Round value to multiple of step, clamp value between min and max\n    value = snapValueToStep(value, thisMin, thisMax, step);\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\n    setValues(valuesRef.current);\n  };\n\n  // update \"dragging\" status of specified thumb\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\n    if (isDisabled || !isThumbEditable(index)) {\n      return;\n    }\n\n    const wasDragging = draggedThumbsRef.current?.[index];\n    draggedThumbsRef.current = replaceIndex(\n      draggedThumbsRef.current || [],\n      index,\n      dragging\n    );\n    setDraggedThumbs(draggedThumbsRef.current);\n\n    // Call onChangeEnd if no handles are dragging.\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\n      onChangeEnd(valuesRef.current || []);\n    }\n  };\n\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\n    undefined\n  );\n\n  const getValuePercent = (value: number) => {\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\n    if (isNaN(x)) {\n      return 0;\n    }\n    return x;\n  };\n\n  const getThumbPercent = (index: number) =>\n    getValuePercent(valuesRef.current![index]);\n\n  const setThumbPercent = (index: number, percent: number) => {\n    setThumbValue(index, getPercentValue(percent));\n  };\n\n  const getRoundedValue = (value: number) =>\n    Math.round((value - minValue) / step) * step + minValue;\n\n  const getPercentValue = (percent: number) => {\n    const val = percent * (maxValue - minValue) + minValue;\n    return clamp(getRoundedValue(val), minValue, maxValue);\n  };\n\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\n  const editableThumbsRef = useRef<boolean[]>(\n    new Array(values.length).fill(true)\n  );\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\n  const setThumbEditable = (index: number, editable: boolean) => {\n    editableThumbsRef.current[index] = editable;\n  };\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb. Hence, we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const currentPointer = useRef<number | null | undefined>(undefined);\n  const handlePointerDown = (e: React.PointerEvent) => {\n    if (\n      e.pointerType === 'mouse' &&\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n    ) {\n      return;\n    }\n\n    onPointerDown?.();\n\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      trackRef.current &&\n      !isDisabled &&\n      values.every((_, i) => !draggedThumbs[i])\n    ) {\n      const size = trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\n      const offset = e.clientX - trackPosition;\n      const percent = offset / size;\n      const value = getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      const split = values.findIndex(v => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closest thumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = values.length - 1;\n      } else {\n        const lastLeft = values[split - 1];\n        const firstRight = values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\n        // Don't un-focus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        setFocusedThumb(closestThumb);\n        currentPointer.current = e.pointerId;\n\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\n        setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  const currentPosition = useRef<number | null>(null);\n  const {domProps: moveDomProps} = usePointerEvents({\n    onPointerDown: handlePointerDown,\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove(e, deltaX) {\n      const size = trackRef.current?.offsetWidth || 0;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\n      }\n\n      currentPosition.current += deltaX;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  const domProps = mergeProps(moveDomProps, {\n    onPointerEnter: () => {\n      setIsPointerOver(true);\n    },\n    onPointerLeave: () => {\n      setIsPointerOver(false);\n    },\n    onPointerMove: (e: React.PointerEvent) => {\n      onPointerMove?.(e);\n    },\n  });\n\n  const onUpTrack = (e: PointerEvent) => {\n    const id = e.pointerId;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  const id = useId();\n  const labelId = label ? `${id}-label` : undefined;\n  const groupId = `${id}-group`;\n  const thumbIds = [...Array(values.length)].map((v, i) => {\n    return `${id}-thumb-${i}`;\n  });\n\n  return {\n    domProps,\n    trackRef,\n    isDisabled,\n    step,\n    values,\n    minValue,\n    maxValue,\n    focusedThumb,\n    labelId,\n    groupId,\n    thumbIds,\n    numberFormatter,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    isThumbDragging,\n    setThumbValue,\n    updateDraggedThumbs,\n    setThumbEditable,\n    setFocusedThumb,\n    getValueLabel,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize,\n  };\n}\n\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\n  if (array[index] === value) {\n    return array;\n  }\n\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {UseSliderReturn} from './use-slider';\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {BaseSliderProps} from '@common/ui/forms/slider/base-slider';\n\ninterface SliderThumb {\n  index: number;\n  slider: UseSliderReturn;\n  isDisabled?: boolean;\n  ariaLabel?: string;\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nexport function SliderThumb({\n  index,\n  slider,\n  isDisabled: isThumbDisabled,\n  ariaLabel,\n  inputRef,\n  onBlur,\n  fillColor = 'primary',\n}: SliderThumb) {\n  const inputObjRef = useObjectRef(inputRef);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  const {\n    step,\n    values,\n    focusedThumb,\n    labelId,\n    thumbIds,\n    isDisabled: isSliderDisabled,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    setThumbValue,\n    updateDraggedThumbs,\n    isThumbDragging,\n    setThumbEditable,\n    setFocusedThumb,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize = 'w-18 h-18',\n  } = slider;\n\n  const isDragging = isThumbDragging(index);\n  const value = values[index];\n\n  // Immediately register editability with the state\n  setThumbEditable(index, !isThumbDisabled);\n  const isDisabled = isThumbDisabled || isSliderDisabled;\n\n  const focusInput = useCallback(() => {\n    if (inputObjRef.current) {\n      inputObjRef.current.focus({preventScroll: true});\n    }\n  }, [inputObjRef]);\n\n  // we will focus the native range input when slider is clicked or thumb is\n  // focused in some other way, and let browser handle keyboard interactions\n  const isFocused = focusedThumb === index;\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const currentPointer = useRef<number | undefined>(undefined);\n  const handlePointerUp = (e: PointerEvent) => {\n    if (e.pointerId === currentPointer.current) {\n      focusInput();\n      updateDraggedThumbs(index, false);\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\n    }\n  };\n\n  const className = clsx(\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\n    thumbSize,\n    !isDisabled && 'shadow-md',\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\n    !showThumbOnHoverOnly ||\n      (showThumbOnHoverOnly && isDragging) ||\n      isPointerOver\n      ? 'visible'\n      : 'invisible',\n  );\n\n  return (\n    <div\n      role=\"presentation\"\n      className={className}\n      style={{\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\n      }}\n      onPointerDown={e => {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        focusInput();\n        currentPointer.current = e.pointerId;\n        updateDraggedThumbs(index, true);\n\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\n      }}\n    >\n      <input\n        id={thumbIds[index]}\n        onKeyDown={createEventHandler(() => {\n          updateDraggedThumbs(index, true);\n        })}\n        onKeyUp={createEventHandler(() => {\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\n          updateDraggedThumbs(index, false);\n        })}\n        ref={inputObjRef}\n        tabIndex={!isDisabled ? 0 : undefined}\n        min={getThumbMinValue(index)}\n        max={getThumbMaxValue(index)}\n        step={step}\n        value={value}\n        disabled={isDisabled}\n        aria-label={ariaLabel}\n        aria-labelledby={labelId}\n        aria-orientation=\"horizontal\"\n        aria-valuetext={getThumbValueLabel(index)}\n        onFocus={() => {\n          setFocusedThumb(index);\n        }}\n        onBlur={e => {\n          setFocusedThumb(undefined);\n          updateDraggedThumbs(index, false);\n          onBlur?.(e);\n        }}\n        onChange={e => {\n          setThumbValue(index, parseFloat(e.target.value));\n        }}\n        type=\"range\"\n        className=\"sr-only\"\n      />\n    </div>\n  );\n}\n\ninterface SliderThumbColorProps {\n  isDisabled?: boolean;\n  isDragging: boolean;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nfunction thumbColor({\n  isDisabled,\n  isDragging,\n  fillColor,\n}: SliderThumbColorProps): string {\n  if (isDisabled) {\n    return 'bg-slider-disabled cursor-default';\n  }\n\n  if (fillColor && fillColor !== 'primary') {\n    return fillColor;\n  }\n\n  return clsx(\n    'hover:bg-primary-dark',\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\n  );\n}\n","import {BaseSlider} from './base-slider';\nimport {useSlider, UseSliderProps} from './use-slider';\nimport React, {Ref} from 'react';\nimport {SliderThumb} from './slider-thumb';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\n\ninterface SliderProps extends UseSliderProps<number> {\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n}\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\n\n  const baseProps: UseSliderProps = {\n    ...otherProps,\n    // Normalize `value: number[]` to `value: number`\n    value: value != null ? [value] : undefined,\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\n    onChange: (v: number[]): void => {\n      onChange?.(v[0]);\n    },\n    onChangeEnd: (v: number[]): void => {\n      onChangeEnd?.(v[0]);\n    },\n  };\n\n  const slider = useSlider(baseProps);\n\n  return (\n    <BaseSlider {...baseProps} slider={slider}>\n      <SliderThumb\n        fillColor={props.fillColor}\n        index={0}\n        slider={slider}\n        inputRef={inputRef}\n        onBlur={onBlur}\n      />\n    </BaseSlider>\n  );\n}\n\nexport interface FormSliderProps extends SliderProps {\n  name: string;\n}\n\nexport function FormSlider({name, ...props}: FormSliderProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n\n  const formProps: SliderProps = {\n    onChange,\n    onBlur,\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\n  };\n\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\n}\n","import clsx from 'clsx';\nimport {forwardRef, ReactNode} from 'react';\nimport {KeyboardArrowRightIcon} from '../../icons/material/KeyboardArrowRight';\nimport {ButtonBase, ButtonBaseProps} from '../../ui/buttons/button-base';\n\ninterface Props extends ButtonBaseProps {\n  startIcon?: ReactNode;\n  description?: ReactNode;\n}\nexport const AppearanceButton = forwardRef<HTMLButtonElement, Props>(\n  ({startIcon, children, className, description, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        display=\"flex\"\n        className={clsx(\n          'relative mb-10 h-54 w-full items-center gap-10 rounded-input border bg px-14 text-sm hover:bg-hover',\n          className,\n        )}\n        variant={null}\n        {...other}\n      >\n        {startIcon}\n        <span className=\"block min-w-0\">\n          <span className=\"block\">{children}</span>\n          {description && (\n            <span className=\"block overflow-hidden overflow-ellipsis whitespace-nowrap text-xs text-muted\">\n              {description}\n            </span>\n          )}\n        </span>\n        <KeyboardArrowRightIcon\n          aria-hidden\n          className=\"ml-auto text-muted icon-sm\"\n        />\n      </ButtonBase>\n    );\n  },\n);\n","import {createSvgIcon} from '../../../../icons/create-svg-icon';\n\nexport const ColorIcon = createSvgIcon(\n  <path\n    stroke=\"#E0E0E0\"\n    d=\"M24,44c-7.168,0-13-5.816-13-12.971C11,24,24,4,24,4s13,20,13,27.029C37,38.184,31.168,44,24,44z\"\n  />\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonBase} from '../buttons/button-base';\n\ntype Props = {\n  onChange?: (e: string) => void;\n  value?: string;\n  colors: string[];\n};\nexport function ColorSwatch({onChange, value, colors}: Props) {\n  const presetButtons = colors.map(color => {\n    const isSelected = value === color;\n    return (\n      <ButtonBase\n        key={color}\n        onClick={() => {\n          onChange?.(color);\n        }}\n        className={clsx(\n          'relative block flex-shrink-0 w-26 h-26 border rounded',\n          isSelected && 'shadow-md'\n        )}\n        style={{backgroundColor: color}}\n      >\n        {isSelected && (\n          <span className=\"absolute inset-0 m-auto rounded-full w-8 h-8 bg-white\" />\n        )}\n      </ButtonBase>\n    );\n  });\n\n  return <div className=\"flex flex-wrap gap-6\">{presetButtons}</div>;\n}\n","import {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport const ColorPresets: {\n  color: string;\n  name: MessageDescriptor;\n  foreground?: string;\n}[] = [\n  {\n    color: 'rgb(255, 255, 255)',\n    name: message('White'),\n  },\n  {\n    color: 'rgb(239,245,245)',\n    name: message('Solitude'),\n  },\n  {\n    color: 'rgb(245,213,174)',\n    name: message('Wheat'),\n  },\n  {\n    color: 'rgb(253,227,167)',\n    name: message('Cape Honey'),\n  },\n  {\n    color: 'rgb(242,222,186)',\n    name: message('Milk punch'),\n  },\n  {\n    color: 'rgb(97,118,75)',\n    name: message('Dingy'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(4, 147, 114)',\n    name: message('Aquamarine'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(222,245,229)',\n    name: message('Cosmic Latte'),\n  },\n  {\n    color: 'rgb(233,119,119)',\n    name: message('Geraldine'),\n    foreground: 'rgb(90,14,14)',\n  },\n  {\n    color: 'rgb(247,164,164)',\n    name: message('Sundown'),\n  },\n  {\n    color: 'rgb(30,139,195)',\n    name: message('Pelorous'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(142,68,173)',\n    name: message('Deep Lilac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(108,74,182)',\n    name: message('Blue marguerite'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(139,126,116)',\n    name: message('Americano'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(0,0,0)',\n    name: message('Black'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(64,66,88)',\n    name: message('Blue zodiac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(101,100,124)',\n    name: message('Comet'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n];\n","import {HexColorInput, HexColorPicker} from 'react-colorful';\nimport React, {useState} from 'react';\nimport {parseColor} from '@react-stately/color';\nimport {ColorSwatch} from './color-swatch';\nimport {getInputFieldClassNames} from '../forms/input-field/get-input-field-class-names';\nimport {ColorPresets} from '@common/ui/color-picker/color-presets';\n\nconst DefaultPresets = ColorPresets.map(({color}) => color).slice(0, 14);\n\ntype Props = {\n  defaultValue?: string;\n  onChange?: (e: string) => void;\n  colorPresets?: string[];\n  showInput?: boolean;\n};\nexport function ColorPicker({\n  defaultValue,\n  onChange,\n  colorPresets,\n  showInput,\n}: Props) {\n  const [color, setColor] = useState<string | undefined>(defaultValue);\n\n  const presets: string[] = colorPresets || DefaultPresets;\n\n  const style = getInputFieldClassNames({size: 'sm'});\n\n  return (\n    <div>\n      <HexColorPicker\n        className=\"!w-auto\"\n        color={color}\n        onChange={newColor => {\n          onChange?.(newColor);\n          setColor(newColor);\n        }}\n      />\n      <div className=\"py-20 px-12\">\n        {presets && (\n          <ColorSwatch\n            colors={presets}\n            onChange={newColor => {\n              if (newColor) {\n                const hex = parseColor(newColor).toString('hex');\n                onChange?.(hex);\n                setColor(hex);\n              }\n            }}\n            value={color}\n          />\n        )}\n        {showInput && (\n          <div className=\"pt-20\">\n            <HexColorInput\n              autoComplete=\"off\"\n              role=\"textbox\"\n              autoCorrect=\"off\"\n              spellCheck=\"false\"\n              required\n              aria-label=\"Hex color\"\n              prefixed\n              className={style.input}\n              color={color}\n              onChange={newColor => {\n                onChange?.(newColor);\n                setColor(newColor);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {ColorPicker} from './color-picker';\nimport {DialogFooter} from '../overlays/dialog/dialog-footer';\nimport {Button} from '../buttons/button';\nimport {useDialogContext} from '../overlays/dialog/dialog-context';\nimport {Dialog} from '../overlays/dialog/dialog';\nimport {Trans} from '../../i18n/trans';\n\ninterface ColorPickerDialogProps {\n  hideFooter?: boolean;\n  showInput?: boolean;\n}\nexport function ColorPickerDialog({\n  hideFooter = false,\n  showInput = true,\n}: ColorPickerDialogProps) {\n  const {close, value, setValue, initialValue} = useDialogContext();\n  // todo: remove this once pixie and bedrive are refactored to use dialogTrigger currentValue (use \"currentValue\" for defaultValue as well)\n  //const initialValue = useRef(defaultValue);\n\n  return (\n    <Dialog size=\"2xs\">\n      <ColorPicker\n        showInput={showInput}\n        defaultValue={initialValue as string}\n        onChange={newValue => {\n          setValue(newValue);\n        }}\n      />\n      {!hideFooter && (\n        <DialogFooter dividerTop>\n          <Button variant=\"text\" size=\"xs\" onClick={() => close()}>\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"xs\"\n            onClick={() => close(value)}\n          >\n            <Trans message=\"Apply\" />\n          </Button>\n        </DialogFooter>\n      )}\n    </Dialog>\n  );\n}\n","import {LandingPageContent} from '@app/landing/landing-page-content';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceValues,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {Fragment, ReactNode} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormSlider} from '@common/ui/forms/slider/slider';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {ColorPickerDialog} from '@common/ui/color-picker/color-picker-dialog';\nimport {Link} from 'react-router-dom';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\n\nexport function LandingPageSectionGeneral() {\n  return (\n    <Fragment>\n      <HeaderSection />\n      <div className=\"my-24 border-y py-24\">\n        <AppearanceButton\n          to=\"action-buttons\"\n          elementType={Link}\n          className=\"mb-20\"\n        >\n          <Trans message=\"Action buttons\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"primary-features\" elementType={Link}>\n          <Trans message=\"Primary features\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"secondary-features\" elementType={Link}>\n          <Trans message=\"Secondary features\" />\n        </AppearanceButton>\n      </div>\n      <FooterSection />\n    </Fragment>\n  );\n}\n\nfunction HeaderSection() {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.headerImage,\n  );\n\n  return (\n    <>\n      <FormTextField\n        label={<Trans message=\"Header title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.headerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"headerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Header subtitle\" />}\n        className=\"mb-30\"\n        inputElementType=\"textarea\"\n        rows={4}\n        name=\"settings.homepage.appearance.headerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"headerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.headerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Header image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormSlider\n        name=\"settings.homepage.appearance.headerImageOpacity\"\n        label={<Trans message=\"Header image opacity\" />}\n        minValue={0}\n        step={0.1}\n        maxValue={1}\n        formatOptions={{style: 'percent'}}\n      />\n      <div className=\"mb-20 text-xs text-muted\">\n        <Trans message=\"In order for overlay colors to appear, header image opacity will need to be less then 100%\" />\n      </div>\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor1\"\n        label={<Trans message=\"Header overlay color 1\" />}\n      />\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor2\"\n        label={<Trans message=\"Header overlay color 2\" />}\n      />\n    </>\n  );\n}\n\nfunction FooterSection() {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.footerImage,\n  );\n  return (\n    <Fragment>\n      <FormTextField\n        label={<Trans message=\"Footer title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"footerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Footer subtitle\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"footerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.footerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Footer background image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n    </Fragment>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  formKey: string;\n  label: ReactNode;\n}\nfunction ColorPickerTrigger({label, formKey}: ColorPickerTriggerProps) {\n  const key = formKey as 'settings.homepage.appearance.headerOverlayColor1';\n  const {watch, setValue} = useFormContext<AppearanceValues>();\n\n  const formValue = watch(key);\n\n  const setColor = (value: string | null) => {\n    setValue(formKey as any, value, {\n      shouldDirty: true,\n    });\n  };\n\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      value={formValue}\n      alwaysReturnCurrentValueOnClose\n      onValueChange={newValue => setColor(newValue)}\n      onClose={value => setColor(value)}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: formValue}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","export function ucFirst<T extends string>(string: T): T {\n  if (!string) return string;\n  return (string.charAt(0).toUpperCase() + string.slice(1)) as T;\n}\n","import {useControlledState} from '@react-stately/utils';\nimport React, {Fragment, useState} from 'react';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {produce} from 'immer';\nimport {Permission, PermissionRestriction} from '../permission';\nimport {useValueLists} from '../../http/value-lists';\nimport {ucFirst} from '../../utils/string/uc-first';\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\nimport {List, ListItem} from '../../ui/list/list';\nimport {Switch} from '../../ui/forms/toggle/switch';\nimport {TextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {DoneAllIcon} from '../../icons/material/DoneAll';\nimport {Trans} from '../../i18n/trans';\n\ninterface PermissionSelectorProps {\n  value?: Permission[];\n  onChange?: (value: Permission[]) => void;\n  valueListKey?: 'permissions' | 'workspacePermissions';\n}\nexport const PermissionSelector = React.forwardRef<\n  HTMLDivElement,\n  PermissionSelectorProps\n>(({valueListKey = 'permissions', ...props}, ref) => {\n  const {data} = useValueLists([valueListKey]);\n  const permissions = data?.permissions || data?.workspacePermissions;\n\n  const [value, setValue] = useControlledState(props.value, [], props.onChange);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  if (!permissions) return null;\n\n  const groupedPermissions = buildPermissionList(\n    permissions,\n    value,\n    showAdvanced\n  );\n\n  const onRestrictionChange = (newPermission: Permission) => {\n    const newValue = [...value];\n    const index = newValue.findIndex(p => p.id === newPermission.id);\n    if (index > -1) {\n      newValue.splice(index, 1, newPermission);\n    }\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      <Accordion variant=\"outline\" ref={ref}>\n        {groupedPermissions.map(({groupName, items, anyChecked}) => (\n          <AccordionItem\n            label={<Trans message={prettyName(groupName)} />}\n            key={groupName}\n            startIcon={anyChecked ? <DoneAllIcon size=\"sm\" /> : undefined}\n          >\n            <List>\n              {items.map(permission => {\n                const index = value.findIndex(v => v.id === permission.id);\n                const isChecked = index > -1;\n\n                return (\n                  <div key={permission.id}>\n                    <ListItem\n                      onSelected={() => {\n                        if (isChecked) {\n                          const newValue = [...value];\n                          newValue.splice(index, 1);\n                          setValue(newValue);\n                        } else {\n                          setValue([...value, permission]);\n                        }\n                      }}\n                      endSection={\n                        <Switch\n                          tabIndex={-1}\n                          checked={isChecked}\n                          onChange={() => {}}\n                        />\n                      }\n                      description={<Trans message={permission.description} />}\n                    >\n                      <Trans\n                        message={permission.display_name || permission.name}\n                      />\n                    </ListItem>\n                    {isChecked && (\n                      <Restrictions\n                        permission={permission}\n                        onChange={onRestrictionChange}\n                      />\n                    )}\n                  </div>\n                );\n              })}\n            </List>\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Switch\n        className=\"mt-30\"\n        checked={showAdvanced}\n        onChange={e => {\n          setShowAdvanced(e.target.checked);\n        }}\n      >\n        <Trans message=\"Show advanced permissions\" />\n      </Switch>\n    </Fragment>\n  );\n});\n\ninterface RestrictionsProps {\n  permission: Permission;\n  onChange?: (newPermission: Permission) => void;\n}\nfunction Restrictions({permission, onChange}: RestrictionsProps) {\n  if (!permission?.restrictions?.length) return null;\n\n  const setRestrictionValue = (\n    name: string,\n    value: PermissionRestriction['value']\n  ) => {\n    const nextState = produce(permission, draftState => {\n      const restriction = draftState.restrictions.find(r => r.name === name);\n      if (restriction) {\n        restriction.value = value;\n      }\n    });\n    onChange?.(nextState);\n  };\n\n  return (\n    <div className=\"px-40 py-20\">\n      {permission.restrictions.map((restriction, index) => {\n        const isLast = index === permission.restrictions.length - 1;\n\n        const name = <Trans message={prettyName(restriction.name)} />;\n        const description = restriction.description ? (\n          <Trans message={restriction.description} />\n        ) : undefined;\n\n        if (restriction.type === 'bool') {\n          return (\n            <Switch\n              description={description}\n              key={restriction.name}\n              className={clsx(!isLast && 'mb-30')}\n              checked={Boolean(restriction.value)}\n              onChange={e => {\n                setRestrictionValue(restriction.name, e.target.checked);\n              }}\n            >\n              {name}\n            </Switch>\n          );\n        }\n\n        return (\n          <TextField\n            size=\"sm\"\n            label={name}\n            description={description}\n            type=\"number\"\n            key={restriction.name}\n            className={clsx(!isLast && 'mb-30')}\n            value={(restriction.value as string) || ''}\n            onChange={e => {\n              setRestrictionValue(\n                restriction.name,\n                e.target.value === '' ? undefined : parseInt(e.target.value)\n              );\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport type FormChipFieldProps = PermissionSelectorProps & {\n  name: string;\n};\nexport function FormPermissionSelector(props: FormChipFieldProps) {\n  const {\n    field: {onChange, value = [], ref},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<PermissionSelectorProps> = {\n    onChange,\n    value,\n  };\n\n  return <PermissionSelector ref={ref} {...mergeProps(formProps, props)} />;\n}\n\nexport const prettyName = (name: string) => {\n  return ucFirst(name.replace('_', ' '));\n};\n\ninterface PermissionGroup {\n  groupName: string;\n  anyChecked: boolean;\n  items: Permission[];\n}\n\n// merge \"restrictions\" from selected value into all permissions to make\n// it easier to bind restriction values to form inputs\nexport function buildPermissionList(\n  allPermissions: Permission[],\n  selectedPermissions: Permission[],\n  showAdvanced: boolean\n) {\n  const groupedPermissions: PermissionGroup[] = [];\n\n  allPermissions.forEach(permission => {\n    const index = selectedPermissions.findIndex(p => p.id === permission.id);\n    if (!showAdvanced && permission.advanced) return;\n\n    let group: PermissionGroup | undefined = groupedPermissions.find(\n      g => g.groupName === permission.group\n    );\n    if (!group) {\n      group = {groupName: permission.group, anyChecked: false, items: []};\n      groupedPermissions.push(group);\n    }\n\n    if (index > -1) {\n      const mergedPermission = {\n        ...permission,\n        restrictions: mergeRestrictions(\n          permission.restrictions,\n          selectedPermissions[index].restrictions\n        ),\n      };\n      group.anyChecked = true;\n      group.items.push(mergedPermission);\n    } else {\n      group.items.push(permission);\n    }\n  });\n\n  return groupedPermissions;\n}\n\nfunction mergeRestrictions(\n  allRestrictions: PermissionRestriction[],\n  selectedRestrictions: PermissionRestriction[]\n): PermissionRestriction[] {\n  return allRestrictions?.map(restriction => {\n    const selected = selectedRestrictions.find(\n      r => r.name === restriction.name\n    );\n    if (selected) {\n      return {...restriction, value: selected.value};\n    } else {\n      return restriction;\n    }\n  });\n}\n","import {MenuSectionConfig} from '../../../types/appearance-editor-config';\nimport {MenuItemConfig} from '../../../../../core/settings/settings';\nimport mergedAppearanceConfig from '../../../config/merged-appearance-config';\n\nexport function useAvailableRoutes(): Partial<MenuItemConfig>[] {\n  const menuConfig = mergedAppearanceConfig.sections.menus.config;\n\n  if (!menuConfig) return [];\n\n  return (menuConfig as MenuSectionConfig).availableRoutes.map(route => {\n    return {\n      id: route,\n      label: route,\n      action: route,\n      type: 'route',\n      target: '_self',\n    };\n  });\n}\n","export const iconGridStyle = {\n  grid: 'flex flex-wrap gap-24',\n  button:\n    'flex flex-col items-center rounded hover:bg-hover h-90 aspect-square',\n};\n","import React, {Suspense} from 'react';\nimport {IconTree} from '../../icons/create-svg-icon';\nimport {iconGridStyle} from './icon-grid-style';\nimport {TextField} from '../forms/input-field/text-field/text-field';\nimport {Skeleton} from '../skeleton/skeleton';\nimport {useTrans} from '../../i18n/use-trans';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '../animation/opacity-animation';\n\nconst skeletons = [...Array(60).keys()];\n\nconst IconList = React.lazy(() => import('./icon-list'));\n\ninterface IconListProps {\n  onIconSelected: (icon: IconTree[] | null) => void;\n}\nexport default function IconPicker({onIconSelected}: IconListProps) {\n  const {trans} = useTrans();\n  const [value, setValue] = React.useState('');\n\n  return (\n    <div className=\"py-4\">\n      <TextField\n        className=\"mb-20\"\n        value={value}\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n        placeholder={trans({message: 'Search icons...'})}\n      />\n      <AnimatePresence mode=\"wait\">\n        <Suspense\n          fallback={\n            <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n              {skeletons.map((_, index) => (\n                <div className={iconGridStyle.button} key={index}>\n                  <Skeleton variant=\"rect\" />\n                </div>\n              ))}\n            </m.div>\n          }\n        >\n          <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n            <IconList searchQuery={value} onIconSelected={onIconSelected} />\n          </m.div>\n        </Suspense>\n      </AnimatePresence>\n    </div>\n  );\n}\n","import React from 'react';\nimport IconPicker from './icon-picker';\nimport {useDialogContext} from '../overlays/dialog/dialog-context';\nimport {Dialog} from '../overlays/dialog/dialog';\nimport {DialogHeader} from '../overlays/dialog/dialog-header';\nimport {DialogBody} from '../overlays/dialog/dialog-body';\nimport {Trans} from '../../i18n/trans';\n\nexport function IconPickerDialog() {\n  return (\n    <Dialog size=\"w-850\" className=\"min-h-dialog\">\n      <DialogHeader>\n        <Trans message=\"Select icon\" />\n      </DialogHeader>\n      <DialogBody>\n        <IconPickerWrapper />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction IconPickerWrapper() {\n  const {close} = useDialogContext();\n  return (\n    <IconPicker\n      onIconSelected={value => {\n        close(value);\n      }}\n    />\n  );\n}\n","import {useEffect, useRef} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../i18n/trans';\nimport {useValueLists} from '../../http/value-lists';\nimport {useTrans} from '../../i18n/use-trans';\nimport {FormChipField} from '../../ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '../../ui/forms/listbox/item';\nimport {Fragment, useEffect, useMemo} from 'react';\nimport {\n  buildPermissionList,\n  prettyName,\n} from '../../auth/ui/permission-selector';\nimport {Section} from '../../ui/forms/listbox/section';\nimport {useFormContext} from 'react-hook-form';\nimport {MenuItemConfig} from '../../core/settings/settings';\nimport {FormSelect, Option} from '../../ui/forms/select/select';\nimport {useAvailableRoutes} from '../appearance/sections/menus/hooks/available-routes';\nimport {ButtonBaseProps} from '../../ui/buttons/button-base';\nimport {createSvgIconFromTree, IconTree} from '../../icons/create-svg-icon';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {IconPickerDialog} from '../../ui/icon-picker/icon-picker-dialog';\nimport {message} from '../../i18n/message';\nimport {usePrevious} from '../../utils/hooks/use-previous';\n\ninterface NameProps {\n  prefixName: (name: string) => string;\n}\n\ninterface MenuItemFormProps {\n  formPathPrefix?: string;\n  hideRoleAndPermissionFields?: boolean;\n}\nexport function MenuItemForm({\n  formPathPrefix,\n  hideRoleAndPermissionFields,\n}: MenuItemFormProps) {\n  const {trans} = useTrans();\n  const prefixName = (name: string): string => {\n    return formPathPrefix ? `${formPathPrefix}.${name}` : name;\n  };\n\n  return (\n    <Fragment>\n      <FormTextField\n        className=\"mb-20\"\n        name={prefixName('label')}\n        label={<Trans message=\"Label\" />}\n        placeholder={trans(message('No label...'))}\n        startAppend={<IconDialogTrigger prefixName={prefixName} />}\n      />\n      <DestinationSelector prefixName={prefixName} />\n      {!hideRoleAndPermissionFields && (\n        <Fragment>\n          <RoleSelector prefixName={prefixName} />\n          <PermissionSelector prefixName={prefixName} />\n        </Fragment>\n      )}\n      <TargetSelect prefixName={prefixName} />\n    </Fragment>\n  );\n}\n\ninterface IconDialogTriggerProps extends ButtonBaseProps, NameProps {}\nfunction IconDialogTrigger({\n  prefixName,\n  ...buttonProps\n}: IconDialogTriggerProps) {\n  const {watch, setValue} = useFormContext<MenuItemConfig>();\n  const fieldName = prefixName('icon') as 'icon';\n  const watchedItemIcon = watch(fieldName);\n  const Icon = watchedItemIcon && createSvgIconFromTree(watchedItemIcon);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(iconTree?: IconTree[] | null) => {\n        // null will be set explicitly if icon is cleared via icon picker\n        if (iconTree || iconTree === null) {\n          setValue(fieldName, iconTree, {\n            shouldDirty: true,\n          });\n        }\n      }}\n    >\n      <IconButton\n        className=\"text-muted icon-sm\"\n        variant=\"outline\"\n        size=\"md\"\n        {...buttonProps}\n      >\n        {Icon ? <Icon /> : <EditIcon />}\n      </IconButton>\n      <IconPickerDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DestinationSelector({prefixName}: NameProps) {\n  const form = useFormContext<MenuItemConfig>();\n  const currentType = form.watch(prefixName('type') as 'type');\n  const previousType = usePrevious(currentType);\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const selectedCategory = categories.find(c => c.type === currentType);\n  const {trans} = useTrans();\n  const routeItems = useAvailableRoutes();\n\n  // clear \"action\" field when \"type\" field changes\n  useEffect(() => {\n    if (previousType && previousType !== currentType) {\n      form.setValue(prefixName('action') as 'action', '');\n    }\n  }, [currentType, previousType, form, prefixName]);\n\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name={prefixName('type')}\n        selectionMode=\"single\"\n        label={<Trans message=\"Type\" />}\n      >\n        <Option value=\"link\">\n          <Trans message=\"Custom link\" />\n        </Option>\n        <Option value=\"route\">\n          <Trans message=\"Site page\" />\n        </Option>\n        {categories.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {currentType === 'link' && (\n        <FormTextField\n          className=\"mb-20\"\n          required\n          type=\"url\"\n          name={prefixName('action')}\n          placeholder={trans({message: 'Enter a url...'})}\n          label={<Trans message=\"Url\" />}\n        />\n      )}\n      {currentType === 'route' && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={routeItems}\n          name={prefixName('action')}\n          label={<Trans message=\"Page\" />}\n          searchPlaceholder={trans(message('Search pages'))}\n          showSearchField\n          selectionMode=\"single\"\n        >\n          {item => (\n            <Item value={item.id} key={item.id}>\n              {item.label}\n            </Item>\n          )}\n        </FormSelect>\n      )}\n      {selectedCategory && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={selectedCategory.items}\n          name={prefixName('action')}\n          showSearchField\n          searchPlaceholder={trans(message('Search...'))}\n          selectionMode=\"single\"\n          label={<Trans message={selectedCategory.name} />}\n        >\n          {item => (\n            <Item value={item.action}>\n              <Trans message={item.label} />\n            </Item>\n          )}\n        </FormSelect>\n      )}\n    </Fragment>\n  );\n}\n\nfunction RoleSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const roles = data?.roles || [];\n  const {trans} = useTrans();\n\n  return (\n    <FormChipField\n      className=\"mb-20\"\n      placeholder={trans({message: 'Add role...'})}\n      label={<Trans message=\"Only show if user has role\" />}\n      name={prefixName('roles')}\n      chipSize=\"sm\"\n      suggestions={roles}\n      valueKey=\"id\"\n      displayWith={c => roles.find(r => r.id === c.id)?.name}\n    >\n      {role => (\n        <Item value={role.id} key={role.id} capitalizeFirst>\n          <Trans message={role.name} />\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction PermissionSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const {trans} = useTrans();\n\n  const groupedPermissions = useMemo(() => {\n    return buildPermissionList(data?.permissions || [], [], false);\n  }, [data?.permissions]);\n\n  return (\n    <FormChipField\n      label={<Trans message=\"Only show if user has permissions\" />}\n      placeholder={trans({message: 'Add permission...'})}\n      chipSize=\"sm\"\n      suggestions={groupedPermissions}\n      name={prefixName('permissions')}\n      valueKey=\"name\"\n    >\n      {({groupName, items}) => (\n        <Section label={prettyName(groupName)} key={groupName}>\n          {items.map(permission => (\n            <Item\n              key={permission.name}\n              value={permission.name}\n              description={<Trans message={permission.description} />}\n            >\n              <Trans message={permission.display_name || permission.name} />\n            </Item>\n          ))}\n        </Section>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction TargetSelect({prefixName}: NameProps) {\n  const form = useFormContext<MenuItemConfig>();\n  const watchedType = form.watch(prefixName('type') as 'type');\n\n  // routes and pages can only be \"_self\"\n  if (watchedType !== 'link') {\n    return null;\n  }\n\n  return (\n    <FormSelect\n      className=\"mt-20\"\n      selectionMode=\"single\"\n      name={prefixName('target')}\n      label={<Trans message=\"Open link in\" />}\n    >\n      <Option value=\"_self\">\n        <Trans message=\"Same window\" />\n      </Option>\n      <Option value=\"_blank\">\n        <Trans message=\"New window\" />\n      </Option>\n    </FormSelect>\n  );\n}\n","import {MenuItemForm} from '@common/admin/menus/menu-item-form';\nimport {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\nimport {Trans} from '@common/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useState} from 'react';\n\nexport function LandingPageSectionActionButtons() {\n  const [expandedValues, setExpandedValues] = useState(['cta1']);\n  return (\n    <Accordion\n      variant=\"outline\"\n      expandedValues={expandedValues}\n      onExpandedChange={values => {\n        setExpandedValues(values as string[]);\n        if (values.length) {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"${values[0]}\"]`\n          );\n        }\n      }}\n    >\n      <AccordionItem value=\"cta1\" label={<Trans message=\"Header button 1\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta1\" />\n      </AccordionItem>\n      <AccordionItem value=\"ct2\" label={<Trans message=\"Header button 2\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta2\" />\n      </AccordionItem>\n      <AccordionItem value=\"cta3\" label={<Trans message=\"Footer button\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta3\" />\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {LandingPageContent} from '@app/landing/landing-page-content';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {useState} from 'react';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\n\nexport function LandingPageSectionPrimaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.primaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"primary-root-${values[0]}\"]`\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Primary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.primaryFeatures[index]?.image\n  );\n\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.primaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-title-${index}\"]`\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-subtitle-${index}\"]`\n          );\n        }}\n      />\n    </>\n  );\n}\n","import {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\nimport {Trans} from '@common/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {LandingPageContent} from '@app/landing/landing-page-content';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {useState} from 'react';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\n\nexport function LandingPageSecondaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.secondaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"secondary-root-${values[0]}\"]`\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Secondary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={getDefaultImage(index)}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-title-${index}\"]`\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-subtitle-${index}\"]`\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.description`}\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-description-${index}\"]`\n          );\n        }}\n      />\n    </>\n  );\n}\n\nfunction getDefaultImage(index: number): string | undefined {\n  return (\n    appearanceState().defaults?.settings.homepage\n      .appearance as LandingPageContent\n  ).secondaryFeatures[index]?.image;\n}\n","import {\n  IAppearanceConfig,\n  MenuSectionConfig,\n  SeoSettingsSectionConfig,\n} from '@common/admin/appearance/types/appearance-editor-config';\nimport {message} from '@common/i18n/message';\nimport {LandingPageSectionGeneral} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-general';\nimport {LandingPageSectionActionButtons} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons';\nimport {LandingPageSectionPrimaryFeatures} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-primary-features';\nimport {LandingPageSecondaryFeatures} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features';\nimport {AppearanceEditorBreadcrumbItem} from '@common/admin/appearance/types/appearance-editor-section';\n\nexport const AppAppearanceConfig: IAppearanceConfig = {\n  preview: {\n    defaultRoute: 'drive',\n    navigationRoutes: ['s', 'drive'],\n  },\n  sections: {\n    'landing-page': {\n      label: message('Landing Page'),\n      position: 1,\n      previewRoute: '/',\n      routes: [\n        {path: 'landing-page', element: <LandingPageSectionGeneral />},\n        {\n          path: 'landing-page/action-buttons',\n          element: <LandingPageSectionActionButtons />,\n        },\n        {\n          path: 'landing-page/primary-features',\n          element: <LandingPageSectionPrimaryFeatures />,\n        },\n        {\n          path: 'landing-page/secondary-features',\n          element: <LandingPageSecondaryFeatures />,\n        },\n      ],\n      buildBreadcrumb: (pathname, formValue) => {\n        const parts = pathname.split('/').filter(p => !!p);\n        const sectionName = parts.pop();\n        // admin/appearance\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\n          {\n            label: message('Landing page'),\n            location: 'landing-page',\n          },\n        ];\n        if (sectionName === 'action-buttons') {\n          breadcrumb.push({\n            label: message('Action buttons'),\n            location: 'landing-page/action-buttons',\n          });\n        }\n\n        if (sectionName === 'primary-features') {\n          breadcrumb.push({\n            label: message('Primary features'),\n            location: 'landing-page/primary-features',\n          });\n        }\n\n        if (sectionName === 'secondary-features') {\n          breadcrumb.push({\n            label: message('Secondary features'),\n            location: 'landing-page/secondary-features',\n          });\n        }\n\n        return breadcrumb;\n      },\n    },\n    // missing label will get added by deepMerge from default config\n    // @ts-ignore\n    menus: {\n      config: {\n        positions: [\n          'drive-navbar',\n          'drive-sidebar',\n          'homepage-navbar',\n          'shareable-link-page',\n          'footer',\n          'footer-secondary',\n        ],\n        availableRoutes: [\n          '/drive',\n          '/drive/shares',\n          '/drive/recent',\n          '/drive/starred',\n          '/drive/trash',\n        ],\n      } as MenuSectionConfig,\n    },\n    // @ts-ignore\n    'seo-settings': {\n      config: {\n        pages: [\n          {\n            key: 'landing-page',\n            label: message('Landing page'),\n          },\n          {\n            key: 'shareable-link-page',\n            label: message('Shareable link page'),\n          },\n        ],\n      } as SeoSettingsSectionConfig,\n    },\n  },\n};\n","import deepMerge from 'deepmerge';\nimport {DefaultAppearanceConfig} from '@common/admin/appearance/config/default-appearance-config';\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\nimport {IAppearanceConfig} from '@common/admin/appearance/types/appearance-editor-config';\n\nconst mergedAppearanceConfig = deepMerge.all([\n  DefaultAppearanceConfig,\n  AppAppearanceConfig,\n]);\n\nexport default mergedAppearanceConfig as IAppearanceConfig;\n","import {create} from 'zustand';\nimport {subscribeWithSelector} from 'zustand/middleware';\nimport {immer} from 'zustand/middleware/immer';\nimport {Settings} from '../../core/settings/settings';\nimport type {IAppearanceConfig} from './types/appearance-editor-config';\nimport {AllCommands} from './commands/commands';\nimport mergedAppearanceConfig from './config/merged-appearance-config';\nimport {BootstrapData} from '../../core/bootstrap-data/bootstrap-data';\nimport {FontConfig} from '@common/http/value-lists';\n\nexport interface AppearanceValues {\n  appearance: {\n    env: {app_name: string; app_url: string};\n    seo: {\n      key: string;\n      name: string;\n      value: string;\n      defaultValue: string;\n    }[];\n    themes: BootstrapData['themes'];\n    custom_code: {\n      css?: string;\n      html?: string;\n    };\n  };\n  settings: Settings;\n}\n\nexport interface AppearanceDefaults {\n  appearance: {\n    themes: {\n      light: Record<string, string>;\n      dark: Record<string, string>;\n    };\n  };\n  settings: Settings;\n}\n\ninterface AppearanceStore {\n  defaults: AppearanceDefaults | null;\n  iframeWindow: Window | null;\n  config: IAppearanceConfig | null;\n  setDefaults: (value: AppearanceDefaults) => void;\n  setIframeWindow: (value: Window) => void;\n  preview: {\n    navigate: (sectionName: string) => void;\n    setValues: (settings: AppearanceValues) => void;\n    setThemeFont: (font: FontConfig | null) => void;\n    setThemeValue: (name: string, value: string) => void;\n    setActiveTheme: (themeId: number | string) => void;\n    setHighlight: (selector: string | null | undefined) => void;\n    setCustomCode: (mode: 'css' | 'html', value?: string) => void;\n  };\n}\n\nexport const useAppearanceStore = create<AppearanceStore>()(\n  subscribeWithSelector(\n    immer((set, get) => ({\n      defaults: null,\n      iframeWindow: null,\n      config: mergedAppearanceConfig,\n      setDefaults: value => {\n        set(state => {\n          state.defaults = {...value};\n        });\n      },\n      setIframeWindow: value => {\n        set(() => {\n          return {iframeWindow: value};\n        });\n      },\n\n      preview: {\n        navigate: sectionName => {\n          const section = get().config?.sections[sectionName];\n          const route = section?.previewRoute || '/';\n          const preview = get().iframeWindow;\n          if (route) {\n            postMessage(preview, {type: 'navigate', to: route});\n          }\n        },\n        setValues: values => {\n          const preview = get().iframeWindow;\n          postMessage(preview, {type: 'setValues', values});\n        },\n        setThemeFont: font => {\n          const preview = get().iframeWindow;\n          postMessage(preview, {type: 'setThemeFont', value: font});\n        },\n        setThemeValue: (name, value) => {\n          const preview = get().iframeWindow;\n          postMessage(preview, {type: 'setThemeValue', name, value});\n        },\n        setActiveTheme: themeId => {\n          const preview = get().iframeWindow;\n          postMessage(preview, {type: 'setActiveTheme', themeId});\n        },\n        setCustomCode: (mode, value) => {\n          const preview = get().iframeWindow;\n          postMessage(preview, {type: 'setCustomCode', mode, value});\n        },\n        setHighlight: selector => {\n          set(() => {\n            let node: HTMLElement | null = null;\n            const document = get().iframeWindow?.document;\n            if (document && selector) {\n              node = document.querySelector(selector);\n            }\n            if (node) {\n              requestAnimationFrame(() => {\n                if (!node) return;\n                node.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'center',\n                  inline: 'center',\n                });\n              });\n            }\n          });\n        },\n      },\n    })),\n  ),\n);\n\nfunction postMessage(window: Window | null, command: AllCommands) {\n  if (window) {\n    window.postMessage({source: 'be-appearance-editor', ...command}, '*');\n  }\n}\n\nexport function appearanceState() {\n  return useAppearanceStore.getState();\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {}\n\nexport function useSaveAppearanceChanges() {\n  return useMutation({\n    mutationFn: (values: Partial<AppearanceValues>) =>\n      saveAppearanceChanges(values),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['admin/appearance/values'],\n      });\n      toast(message('Changes saved'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction saveAppearanceChanges(\n  changes: Partial<AppearanceValues>,\n): Promise<Response> {\n  return apiClient.post(`admin/appearance`, {changes}).then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {AppearanceDefaults, AppearanceValues} from '../appearance-store';\n\nexport interface FetchAppearanceValuesResponse extends BackendResponse {\n  values: AppearanceValues;\n  defaults: AppearanceDefaults;\n}\n\nexport function useAppearanceValues() {\n  return useQuery({\n    queryKey: ['admin/appearance/values'],\n    queryFn: () => fetchAppearanceValues(),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchAppearanceValues(): Promise<FetchAppearanceValuesResponse> {\n  return apiClient\n    .get('admin/appearance/values')\n    .then(response => response.data);\n}\n","import {Link, useLocation} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {Fragment, useEffect, useState} from 'react';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '../../icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '../../icons/material/KeyboardArrowRight';\nimport {Trans} from '../../i18n/trans';\nimport {MixedText} from '../../i18n/mixed-text';\nimport {useFormContext} from 'react-hook-form';\nimport {appearanceState, AppearanceValues} from './appearance-store';\nimport {AppearanceEditorBreadcrumbItem} from './types/appearance-editor-section';\nimport {message} from '../../i18n/message';\n\nexport function SectionHeader() {\n  const {pathname} = useLocation();\n  const {getValues} = useFormContext<AppearanceValues>();\n  const [breadcrumb, setBreadcrumb] = useState<\n    AppearanceEditorBreadcrumbItem[] | null\n  >(null);\n\n  useEffect(() => {\n    const [, , sectionName] = pathname.split('/').filter(p => !!p);\n    if (sectionName) {\n      const section = appearanceState().config?.sections[sectionName];\n      if (section) {\n        setBreadcrumb([\n          {\n            label: message('Appearance'),\n            location: '',\n          },\n          ...section.buildBreadcrumb(pathname, getValues()),\n        ]);\n        // bail, so breadcrumb is not cleared below\n        return;\n      }\n    }\n    setBreadcrumb(null);\n  }, [pathname, getValues]);\n\n  // not need to show section header if already at root\n  if (!breadcrumb || breadcrumb.length < 2) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center border-b h-60 flex-shrink-0\">\n      <IconButton\n        iconSize=\"md\"\n        radius=\"rounded-none\"\n        className=\"text-muted h-full w-50 flex-shrink-0\"\n        elementType={Link}\n        to={`/admin/appearance/${breadcrumb[breadcrumb.length - 2].location}`}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"border-l p-10 min-w-0\">\n        <div className=\"text-xs text-muted\">\n          <Trans message=\"Customizing\" />\n        </div>\n        <div className=\"flex items-center gap-4 text-sm mt-2\">\n          {breadcrumb.map((item, index) => {\n            const isLast = breadcrumb.length - 1 === index;\n            const isFirst = index === 0;\n            const label = <MixedText value={item.label} />;\n\n            if (isFirst) {\n              return null;\n            }\n\n            return (\n              <Fragment key={index}>\n                <div\n                  className={clsx(\n                    'whitespace-nowrap overflow-hidden overflow-ellipsis min-w-0',\n                    isLast && 'text-primary',\n                    // don't overflow ellipses last item\n                    isLast ? 'flex-shrink-0' : 'flex-auto'\n                  )}\n                >\n                  {label}\n                </div>\n                {!isLast && (\n                  <KeyboardArrowRightIcon className=\"icon-sm text-muted flex-shrink-0\" />\n                )}\n              </Fragment>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {Link, Navigate, Outlet, useLocation} from 'react-router-dom';\nimport {useEffect, useRef} from 'react';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {CloseIcon} from '../../icons/material/Close';\nimport {Button} from '../../ui/buttons/button';\nimport {appearanceState, AppearanceValues} from './appearance-store';\nimport {useSaveAppearanceChanges} from './requests/save-appearance-changes';\nimport {useAppearanceValues} from './requests/appearance-values';\nimport {Trans} from '../../i18n/trans';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\nimport {SectionHeader} from './section-header';\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\nimport {useAppearanceEditorMode} from './commands/use-appearance-editor-mode';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {useSettings} from '../../core/settings/use-settings';\n\nexport function AppearanceLayout() {\n  const {isAppearanceEditorActive} = useAppearanceEditorMode();\n  const {data} = useAppearanceValues();\n  const {base_url} = useSettings();\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    // only set defaults snapshot once on route init\n    if (data?.defaults && !appearanceState().defaults) {\n      appearanceState().setDefaults(data.defaults);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      appearanceState().setIframeWindow(iframeRef.current.contentWindow!);\n    }\n  }, []);\n\n  useEffect(() => {\n    const sectionName = pathname.split('/')[3];\n    appearanceState().preview.navigate(sectionName);\n  }, [pathname]);\n\n  // make sure appearance editor iframe can't be nested\n  if (isAppearanceEditorActive) {\n    return <Navigate to=\"/admin\" />;\n  }\n\n  return (\n    <div className=\"h-screen items-center md:flex\">\n      <StaticPageTitle>\n        <Trans message=\"Appearance\" />\n      </StaticPageTitle>\n      <Sidebar values={data?.values} />\n      <div className=\"relative h-full flex-auto\">\n        <iframe\n          ref={iframeRef}\n          className=\"h-full w-full max-md:hidden\"\n          src={`${base_url}?appearanceEditor=true`}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface SidebarProps {\n  values: AppearanceValues | undefined;\n}\nfunction Sidebar({values}: SidebarProps) {\n  const spinner = (\n    <div className=\"flex h-full flex-auto items-center justify-center\">\n      <ProgressCircle isIndeterminate aria-label=\"Loading editor\" />\n    </div>\n  );\n\n  return (\n    <div className=\"relative z-10 h-full w-full border-r bg shadow-lg @container md:w-320\">\n      {values ? <AppearanceForm defaultValues={values} /> : spinner}\n    </div>\n  );\n}\n\ninterface AppearanceFormProps {\n  defaultValues: AppearanceValues;\n}\n\nfunction AppearanceForm({defaultValues}: AppearanceFormProps) {\n  const form = useForm<AppearanceValues>({defaultValues});\n  const {watch, reset} = form;\n  const saveChanges = useSaveAppearanceChanges();\n\n  useEffect(() => {\n    const subscription = watch(value => {\n      appearanceState().preview.setValues(value as AppearanceValues);\n    });\n    return () => subscription.unsubscribe();\n  }, [watch]);\n\n  return (\n    <Form\n      className=\"flex h-full flex-col\"\n      form={form}\n      onSubmit={values => {\n        saveChanges.mutate(values, {\n          onSuccess: () => reset(values),\n        });\n      }}\n    >\n      <Header isLoading={saveChanges.isPending} />\n      <SectionHeader />\n      <div className=\"flex-auto overflow-y-auto px-14 py-20\">\n        <FileUploadProvider>\n          <Outlet />\n        </FileUploadProvider>\n      </div>\n    </Form>\n  );\n}\n\ninterface HeaderProps {\n  isLoading: boolean;\n}\nfunction Header({isLoading}: HeaderProps) {\n  const {\n    formState: {dirtyFields},\n  } = useFormContext<AppearanceValues>();\n  const isDirty = Object.keys(dirtyFields).length;\n  return (\n    <div className=\"flex h-50 flex-shrink-0 items-center border-b pr-10\">\n      <IconButton\n        border=\"border-r\"\n        className=\"text-muted\"\n        elementType={Link}\n        to=\"..\"\n      >\n        <CloseIcon />\n      </IconButton>\n      <div className=\"pl-10\">\n        <Trans message=\"Appearance editor\" />\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"ml-auto block\"\n        disabled={!isDirty || isLoading}\n        type=\"submit\"\n      >\n        {isDirty ? <Trans message=\"Save\" /> : <Trans message=\"Saved\" />}\n      </Button>\n    </div>\n  );\n}\n","import {Link, useNavigate} from 'react-router-dom';\nimport {AppearanceValues} from '../../appearance-store';\nimport {Button} from '../../../../ui/buttons/button';\nimport {AddIcon} from '../../../../icons/material/Add';\nimport {Trans} from '../../../../i18n/trans';\nimport {useFieldArray} from 'react-hook-form';\nimport {AppearanceButton} from '../../appearance-button';\nimport {nanoid} from 'nanoid';\nimport {useTrans} from '../../../../i18n/use-trans';\nimport {message} from '../../../../i18n/message';\nimport {Fragment} from 'react';\n\nexport function MenuList() {\n  const navigate = useNavigate();\n  const {trans} = useTrans();\n  const {fields, append} = useFieldArray<\n    AppearanceValues,\n    'settings.menus',\n    'key'\n  >({\n    name: 'settings.menus',\n    keyName: 'key',\n  });\n\n  return (\n    <Fragment>\n      <div>\n        {fields.map((field, index) => (\n          <AppearanceButton to={`${index}`} key={field.key} elementType={Link}>\n            {field.name}\n          </AppearanceButton>\n        ))}\n      </div>\n      <div className=\"text-right\">\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n          onClick={() => {\n            const id = nanoid(10);\n            append({\n              name: trans(\n                message('New menu :number', {\n                  values: {number: fields.length + 1},\n                })\n              ),\n              id,\n              positions: [],\n              items: [],\n            });\n            navigate(`${fields.length}`);\n          }}\n        >\n          <Trans message=\"Create menu\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {MenuItemConfig} from '@common/core/settings/settings';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {Button} from '@common/ui/buttons/button';\nimport {useAvailableRoutes} from '@common/admin/appearance/sections/menus/hooks/available-routes';\nimport {ucFirst} from '@common/utils/string/uc-first';\nimport {List, ListItem} from '@common/ui/list/list';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {useValueLists} from '@common/http/value-lists';\nimport {ReactNode} from 'react';\nimport {nanoid} from 'nanoid';\n\ninterface AddMenuItemDialogProps {\n  title?: ReactNode;\n}\nexport function AddMenuItemDialog({\n  title = <Trans message=\"Add menu item\" />,\n}: AddMenuItemDialogProps) {\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const routeItems = useAvailableRoutes();\n\n  return (\n    <Dialog size=\"sm\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody>\n        <Accordion variant=\"outline\">\n          <AccordionItem\n            label={<Trans message=\"Link\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddCustomLink />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"Route\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddRoute items={routeItems} />\n          </AccordionItem>\n          {categories.map(category => (\n            <AccordionItem\n              key={category.name}\n              label={<Trans message={category.name} />}\n            >\n              <AddRoute items={category.items} />\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction AddCustomLink() {\n  const form = useForm<MenuItemConfig>({\n    defaultValues: {\n      id: nanoid(6),\n      type: 'link',\n      target: '_blank',\n    },\n  });\n  const {close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        close(value);\n      }}\n    >\n      <FormTextField\n        required\n        name=\"label\"\n        label={<Trans message=\"Label\" />}\n        className=\"mb-20\"\n      />\n      <FormTextField\n        required\n        type=\"url\"\n        name=\"action\"\n        placeholder=\"https://\"\n        label={<Trans message=\"Url\" />}\n        className=\"mb-20\"\n      />\n      <div className=\"text-right\">\n        <Button type=\"submit\" variant=\"flat\" color=\"primary\" size=\"xs\">\n          <Trans message=\"Add to menu\" />\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\ninterface AddRouteProps {\n  items: Partial<MenuItemConfig>[];\n}\nfunction AddRoute({items}: AddRouteProps) {\n  const {close} = useDialogContext();\n\n  return (\n    <List>\n      {items.map(item => {\n        return (\n          <ListItem\n            key={item.id}\n            startIcon={<AddIcon size=\"sm\" />}\n            onSelected={() => {\n              if (item.label) {\n                const last = item.label.split('/').pop();\n                item.label = last ? ucFirst(last) : item.label;\n                item.id = nanoid(6);\n              }\n              close(item);\n            }}\n          >\n            {item.label}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragIndicatorIcon = createSvgIcon(\n  <path d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'DragIndicatorOutlined');\n","export default \"__VITE_ASSET__abcb02f6__\"","import {\n  DropPosition,\n  SortSession,\n} from '@common/ui/interactions/dnd/sortable/use-sortable';\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\n\nexport const sortableLineStrategy: SortableStrategy = {\n  onDragStart: () => {},\n  onDragEnter: () => {},\n  onDragOver: ({e, ref, item, sortSession, onDropPositionChange}) => {\n    const previousPosition = sortSession.dropPosition;\n    let newPosition: DropPosition = null;\n\n    const rect = droppables.get(item)?.rect;\n    if (rect) {\n      const midY = rect.top + rect.height / 2;\n      if (e.clientY <= midY) {\n        newPosition = 'before';\n      } else if (e.clientY >= midY) {\n        newPosition = 'after';\n      }\n    }\n\n    if (newPosition !== previousPosition) {\n      const overIndex = sortSession.sortables.indexOf(item);\n      sortSession.dropPosition = newPosition;\n      onDropPositionChange?.(sortSession.dropPosition);\n\n      clearLinePreview(sortSession);\n      if (ref.current) {\n        if (sortSession.dropPosition === 'after') {\n          addLinePreview(ref.current, 'bottom', sortSession);\n        } else {\n          // if it's the first row, add preview to the top border, as there's no previous element\n          if (overIndex === 0) {\n            addLinePreview(ref.current, 'top', sortSession);\n            // otherwise add preview to the bottom border of the previous row\n          } else {\n            const droppableId = sortSession.sortables[overIndex - 1];\n            const droppable = droppables.get(droppableId);\n            if (droppable?.ref.current) {\n              addLinePreview(droppable.ref.current, 'bottom', sortSession);\n            }\n          }\n        }\n      }\n\n      const itemIndex = sortSession.sortables.indexOf(item);\n\n      // don't move item at all if hovering over itself\n      if (sortSession.activeIndex === itemIndex) {\n        sortSession.finalIndex = sortSession.activeIndex;\n        return;\n      }\n\n      // adjust final drop index based on whether we're dropping drag target after or before it's original index\n      // this is needed, so we get the same index if target is dropped after current item or before next item\n      const dragDirection =\n        overIndex > sortSession.activeIndex ? 'after' : 'before';\n      if (dragDirection === 'after') {\n        sortSession.finalIndex =\n          sortSession.dropPosition === 'before' ? itemIndex - 1 : itemIndex;\n      } else {\n        sortSession.finalIndex =\n          sortSession.dropPosition === 'after' ? itemIndex + 1 : itemIndex;\n      }\n    }\n  },\n  onDragEnd: sortSession => {\n    clearLinePreview(sortSession);\n  },\n};\n\nfunction clearLinePreview(sortSession: SortSession) {\n  if (sortSession?.linePreviewEl) {\n    sortSession.linePreviewEl.style.borderBottomColor = '';\n    sortSession.linePreviewEl.style.borderTopColor = '';\n    sortSession.linePreviewEl = undefined;\n  }\n}\n\nfunction addLinePreview(\n  el: HTMLElement,\n  side: 'top' | 'bottom',\n  sortSession: SortSession,\n) {\n  const color = 'rgb(var(--be-primary))';\n  if (side === 'top') {\n    el.style.borderTopColor = color;\n  } else {\n    el.style.borderBottomColor = color;\n  }\n  if (sortSession) {\n    sortSession.linePreviewEl = el;\n  }\n}\n","import {clamp} from '../number/clamp';\n\nexport function moveItemInArray<T = any>(\n  array: T[],\n  fromIndex: number,\n  toIndex: number\n): T[] {\n  const from = clamp(fromIndex, 0, array.length - 1);\n  const to = clamp(toIndex, 0, array.length - 1);\n\n  if (from === to) {\n    return array;\n  }\n\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n\n  array[to] = target;\n\n  return array;\n}\n","export function moveItemInNewArray<T>(\n  array: T[],\n  from: number,\n  to: number\n): T[] {\n  const newArray = array.slice();\n  newArray.splice(\n    to < 0 ? newArray.length + to : to,\n    0,\n    newArray.splice(from, 1)[0]\n  );\n\n  return newArray;\n}\n","import {moveItemInArray} from '@common/utils/array/move-item-in-array';\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\nimport {moveItemInNewArray} from '@common/utils/array/move-item-in-new-array';\nimport type {SortSession} from '@common/ui/interactions/dnd/sortable/use-sortable';\nimport type {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\n\nconst transition = 'transform 0.2s cubic-bezier(0.2, 0, 0, 1)';\n\nexport const sortableTransformStrategy: SortableStrategy = {\n  onDragStart: sortSession => {\n    sortSession.sortables.forEach((sortable, index) => {\n      const droppable = droppables.get(sortable);\n      if (!droppable?.ref.current) return;\n\n      droppable.ref.current.style.transition = transition;\n\n      if (sortSession?.activeIndex === index) {\n        droppable.ref.current.style.opacity = '0.4';\n      }\n    });\n  },\n  onDragEnter: (\n    sortSession: SortSession,\n    overIndex: number,\n    currentIndex: number,\n  ) => {\n    moveItemInArray(sortSession.sortables, currentIndex, overIndex);\n    const rects = sortSession.sortables.map(s => droppables.get(s)?.rect);\n\n    sortSession.sortables.forEach((sortable, index) => {\n      if (!sortSession) return;\n\n      const newRects = moveItemInNewArray(\n        rects,\n        overIndex,\n        sortSession.activeIndex,\n      );\n      const oldRect = rects[index];\n      const newRect = newRects[index];\n      const sortableTarget = droppables.get(sortable);\n\n      if (sortableTarget?.ref.current && newRect && oldRect) {\n        const x = newRect.left - oldRect.left;\n        const y = newRect.top - oldRect.top;\n        sortableTarget.ref.current.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n      }\n    });\n\n    sortSession.finalIndex = overIndex;\n  },\n  onDragOver: () => {},\n  onDragEnd: sortSession => {\n    // clear any styles and transforms applied to sortables during sorting\n    sortSession.sortables.forEach(sortable => {\n      const droppable = droppables.get(sortable);\n      if (droppable?.ref.current) {\n        droppable.ref.current.style.transform = '';\n        droppable.ref.current.style.transition = '';\n        droppable.ref.current.style.opacity = '';\n        droppable.ref.current.style.zIndex = '';\n      }\n    });\n  },\n};\n","import {moveItemInArray} from '@common/utils/array/move-item-in-array';\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\n\nexport const sortableMoveNodeStrategy: SortableStrategy = {\n  onDragStart: () => {},\n  onDragOver: () => {},\n  onDragEnter: (sortSession, overIndex: number, currentIndex: number) => {\n    const node = droppables.get(sortSession.sortables[currentIndex])?.ref\n      .current;\n    if (node) {\n      moveNode(node, currentIndex, overIndex);\n      moveItemInArray(sortSession.sortables, currentIndex, overIndex);\n      sortSession.finalIndex = overIndex;\n    }\n  },\n  onDragEnd: () => {},\n};\n\nfunction moveNode(el: HTMLElement, currentIndex: number, newIndex: number) {\n  const parentEl = el.parentElement!;\n  if (newIndex < 0) {\n    parentEl.prepend(el);\n  } else {\n    // if parent already contains this node, and we're changing\n    // node's index within parent, need to adjust index by one\n    if (currentIndex > -1 && currentIndex <= newIndex) {\n      newIndex++;\n    }\n    const ref = parentEl.children.item(newIndex);\n    if (ref) {\n      ref.before(el);\n    } else {\n      parentEl.append(el);\n    }\n  }\n}\n","import {DraggableId, DragPreviewRenderer, useDraggable} from '../use-draggable';\nimport {useDroppable} from '../use-droppable';\nimport {RefObject, useEffect} from 'react';\nimport {getScrollParent, mergeProps} from '@react-aria/utils';\nimport {droppables} from '../drag-state';\nimport {updateRects} from '@common/ui/interactions/dnd/update-rects';\nimport {sortableLineStrategy} from '@common/ui/interactions/dnd/sortable/sortable-line-strategy';\nimport {sortableTransformStrategy} from '@common/ui/interactions/dnd/sortable/sortable-transform-strategy';\nimport {sortableMoveNodeStrategy} from '@common/ui/interactions/dnd/sortable/sortable-move-node-strategy';\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\n\nexport interface SortSession {\n  // items in this list will be moved when user is sorting\n  sortables: DraggableId[];\n\n  // sortable user started dragging to start this session\n  activeSortable: DraggableId;\n  activeIndex: number;\n\n  // final index sortable was dropped in and should be moved to\n  finalIndex: number;\n\n  // drop position for displaying line preview\n  dropPosition: DropPosition;\n  // element that currently has a line preview at the top or bottom\n  linePreviewEl?: HTMLElement;\n  scrollParent?: Element;\n  scrollListener: () => void;\n  ref: RefObject<HTMLElement>;\n}\n\nlet sortSession: null | SortSession = null;\n\nexport type DropPosition = 'before' | 'after' | null;\n\ntype StrategyName = 'line' | 'liveSort' | 'moveNode';\n\nconst strategies: Record<StrategyName, SortableStrategy> = {\n  line: sortableLineStrategy,\n  liveSort: sortableTransformStrategy,\n  moveNode: sortableMoveNodeStrategy,\n};\n\nexport interface UseSortableProps {\n  item: DraggableId;\n  items: DraggableId[];\n  onSortStart?: () => void;\n  onSortEnd?: (oldIndex: number, newIndex: number) => void;\n  onDragEnd?: () => void;\n  onDropPositionChange?: (dropPosition: DropPosition) => void;\n  ref: RefObject<HTMLElement>;\n  type: string;\n  preview?: RefObject<DragPreviewRenderer>;\n  strategy?: StrategyName;\n  disabled?: boolean;\n}\nexport function useSortable({\n  item,\n  items,\n  type,\n  ref,\n  onSortEnd,\n  onSortStart,\n  onDragEnd,\n  preview,\n  disabled,\n  onDropPositionChange,\n  strategy = 'liveSort',\n}: UseSortableProps) {\n  // todo: issue with sorting after scrolling menu editor item list\n\n  // update sortables and active index, in case we lazy load more items while sorting\n  useEffect(() => {\n    if (sortSession && sortSession.sortables.length !== items.length) {\n      sortSession.sortables = [...items];\n      sortSession.activeIndex = items.indexOf(item);\n    }\n  }, [items, item]);\n\n  const {draggableProps, dragHandleRef} = useDraggable({\n    id: item,\n    ref,\n    type,\n    preview,\n    disabled,\n    onDragStart: () => {\n      sortSession = {\n        sortables: [...items],\n        activeSortable: item,\n        activeIndex: items.indexOf(item),\n        finalIndex: items.indexOf(item),\n        dropPosition: null,\n        ref,\n        scrollParent: ref.current ? getScrollParent(ref.current) : undefined,\n        scrollListener: () => {\n          updateRects(droppables);\n        },\n      };\n      strategies[strategy].onDragStart(sortSession);\n\n      onSortStart?.();\n      sortSession.scrollParent?.addEventListener(\n        'scroll',\n        sortSession.scrollListener,\n      );\n    },\n    onDragEnd: () => {\n      if (!sortSession) return;\n\n      sortSession.dropPosition = null;\n      onDropPositionChange?.(sortSession.dropPosition);\n      if (sortSession.activeIndex !== sortSession.finalIndex) {\n        onSortEnd?.(sortSession.activeIndex, sortSession.finalIndex);\n      }\n      sortSession.scrollParent?.removeEventListener(\n        'scroll',\n        sortSession.scrollListener,\n      );\n      strategies[strategy].onDragEnd(sortSession);\n      // call \"onDragEnd\" after \"onSortEnd\", so listener has a chance to use sort session data\n      onDragEnd?.();\n      sortSession = null;\n    },\n    getData: () => {},\n  });\n\n  const {droppableProps} = useDroppable({\n    id: item,\n    ref,\n    types: [type],\n    disabled,\n    allowDragEventsFromItself: true,\n    onDragOver: (target, e) => {\n      if (!sortSession) return;\n      strategies[strategy].onDragOver({\n        e,\n        ref,\n        item,\n        sortSession,\n        onDropPositionChange,\n      });\n    },\n    onDragEnter: () => {\n      if (!sortSession) return;\n      const overIndex = sortSession.sortables.indexOf(item);\n      const oldIndex = sortSession.sortables.indexOf(\n        sortSession.activeSortable,\n      );\n      strategies[strategy].onDragEnter(sortSession, overIndex, oldIndex);\n    },\n    onDragLeave: () => {\n      if (!sortSession) return;\n      sortSession.dropPosition = null;\n      onDropPositionChange?.(sortSession.dropPosition);\n    },\n  });\n\n  return {\n    sortableProps: {...mergeProps(draggableProps, droppableProps)},\n    dragHandleRef,\n  };\n}\n","import {\n  FieldArrayWithId,\n  useFieldArray,\n  UseFieldArrayReturn,\n  useFormContext,\n} from 'react-hook-form';\nimport {Fragment, useEffect, useMemo, useRef} from 'react';\nimport {Link, useNavigate, useParams} from 'react-router-dom';\nimport {MenuSectionConfig} from '../../types/appearance-editor-config';\nimport {MenuItemConfig} from '@common/core/settings/settings';\nimport {\n  appearanceState,\n  AppearanceValues,\n  useAppearanceStore,\n} from '../../appearance-store';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddMenuItemDialog} from '@common/admin/appearance/sections/menus/add-menu-item-dialog';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {DragIndicatorIcon} from '@common/icons/material/DragIndicator';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Option} from '../../../../ui/forms/select/select';\nimport {Trans} from '@common/i18n/trans';\nimport dropdownMenu from './dropdown-menu.svg';\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {\n  useSortable,\n  UseSortableProps,\n} from '@common/ui/interactions/dnd/sortable/use-sortable';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {createSvgIconFromTree} from '@common/icons/create-svg-icon';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function MenuEditor() {\n  const {menuIndex} = useParams();\n  const navigate = useNavigate();\n\n  const {getValues} = useFormContext<AppearanceValues>();\n  const formPath = `settings.menus.${menuIndex!}` as 'settings.menus.0';\n  const menu = getValues(formPath);\n\n  useEffect(() => {\n    // go to menu list, if menu can't be found\n    if (!menu) {\n      navigate('/admin/appearance/menus');\n    } else {\n      appearanceState().preview.setHighlight(`[data-menu-id=\"${menu.id}\"]`);\n    }\n  }, [navigate, menu]);\n\n  if (!menu) {\n    return null;\n  }\n\n  return <MenuEditorSection formPath={formPath} />;\n}\n\ninterface MenuEditorFormProps {\n  formPath: 'settings.menus.0';\n}\nfunction MenuEditorSection({formPath}: MenuEditorFormProps) {\n  const {\n    site: {has_mobile_app},\n  } = useSettings();\n  const menuSectionConfig = useAppearanceStore(\n    s => s.config?.sections.menus.config,\n  ) as MenuSectionConfig;\n\n  const menuPositions = useMemo(() => {\n    const positions = [...menuSectionConfig?.positions];\n    if (has_mobile_app) {\n      positions.push('mobile-app-about');\n    }\n    return positions.map(position => ({\n      key: position,\n      name: position.replaceAll('-', ' '),\n    }));\n  }, [menuSectionConfig, has_mobile_app]);\n\n  const fieldArray = useFieldArray<\n    AppearanceValues,\n    `settings.menus.0.items`,\n    'key'\n  >({\n    name: `${formPath}.items`,\n    keyName: 'key',\n  });\n\n  return (\n    <Fragment>\n      <div className=\"mb-30 border-b pb-30\">\n        <FormTextField\n          name={`${formPath}.name`}\n          label={<Trans message=\"Menu name\" />}\n          className=\"mb-20\"\n          autoFocus\n        />\n        <FormChipField\n          chipSize=\"sm\"\n          name={`${formPath}.positions`}\n          valueKey=\"id\"\n          label={<Trans message=\"Menu positions\" />}\n          description={\n            <Trans message=\"Where should this menu appear on the site\" />\n          }\n        >\n          {menuPositions.map(item => (\n            <Option key={item.key} value={item.key} capitalizeFirst>\n              {item.name}\n            </Option>\n          ))}\n        </FormChipField>\n      </div>\n      <MenuItemsManager fieldArray={fieldArray} />\n      <div className=\"text-right\">\n        <DeleteMenuTrigger />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ItemListProps {\n  fieldArray: UseFieldArrayReturn<\n    AppearanceValues,\n    'settings.menus.0.items',\n    'key'\n  >;\n}\nfunction MenuItemsManager({fieldArray: {append, fields, move}}: ItemListProps) {\n  const navigate = useNavigate();\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-shrink-0 items-center justify-between gap-16\">\n        <Trans message=\"Menu items\" />\n        <DialogTrigger\n          type=\"popover\"\n          placement=\"right\"\n          offset={20}\n          onClose={(menuItemConfig?: MenuItemConfig) => {\n            if (menuItemConfig) {\n              append({...menuItemConfig});\n              navigate(`items/${fields.length}`);\n            }\n          }}\n        >\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            startIcon={<AddIcon />}\n          >\n            <Trans message=\"Add\" />\n          </Button>\n          <AddMenuItemDialog />\n        </DialogTrigger>\n      </div>\n      <div className=\"mt-20 flex-shrink-0\">\n        {fields.map((item, index) => (\n          <MenuListItem\n            key={item.key}\n            item={item}\n            items={fields}\n            index={index}\n            onSortEnd={(oldIndex, newIndex) => {\n              move(oldIndex, newIndex);\n            }}\n          />\n        ))}\n        {!fields.length ? (\n          <IllustratedMessage\n            size=\"xs\"\n            className=\"my-40\"\n            image={<SvgImage src={dropdownMenu} />}\n            title={<Trans message=\"No menu items yet\" />}\n            description={\n              <Trans message=\"Click “add“ button to start adding links, pages, routes and other items to this menu. \" />\n            }\n          />\n        ) : null}\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteMenuTrigger() {\n  const navigate = useNavigate();\n  const {menuIndex} = useParams();\n  const {fields, remove} = useFieldArray<\n    AppearanceValues,\n    'settings.menus',\n    'key'\n  >({\n    name: 'settings.menus',\n    keyName: 'key',\n  });\n  if (!menuIndex) return null;\n  const menu = fields[+menuIndex];\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          const index = fields.findIndex(m => m.id === menu.id);\n          remove(index);\n          navigate('/admin/appearance/menus');\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete menu\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete menu\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: menu.name}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface MenuListItemProps {\n  item: MenuItemConfig;\n  items: FieldArrayWithId[];\n  index: number;\n  onSortEnd: UseSortableProps['onSortEnd'];\n}\nfunction MenuListItem({item, items, index, onSortEnd}: MenuListItemProps) {\n  const ref = useRef<HTMLButtonElement>(null);\n  const {sortableProps, dragHandleRef} = useSortable({\n    item,\n    items,\n    type: 'menuEditorSortable',\n    ref,\n    onSortEnd,\n    strategy: 'liveSort',\n  });\n\n  const Icon = item.icon && createSvgIconFromTree(item.icon);\n  const iconOnlyLabel = (\n    <div className=\"flex items-center gap-4 text-xs text-muted\">\n      {Icon && <Icon size=\"sm\" />}\n      (<Trans message=\"No label...\" />)\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <AppearanceButton\n        elementType={Link}\n        to={`items/${index}`}\n        ref={ref}\n        {...sortableProps}\n      >\n        <div className=\"flex items-center gap-10\">\n          <IconButton ref={dragHandleRef} size=\"sm\">\n            <DragIndicatorIcon className=\"text-muted hover:cursor-move\" />\n          </IconButton>\n          <div>{item.label || iconOnlyLabel}</div>\n        </div>\n      </AppearanceButton>\n    </Fragment>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Fragment, useEffect} from 'react';\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\nimport {Button} from '@common/ui/buttons/button';\nimport {DeleteIcon} from '../../../../icons/material/Delete';\nimport {ConfirmationDialog} from '../../../../ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '../../../../i18n/trans';\nimport {useNavigate} from '../../../../utils/hooks/use-navigate';\nimport {MenuItemForm} from '../../../menus/menu-item-form';\nimport {useParams} from 'react-router-dom';\nimport {MenuItemConfig} from '../../../../core/settings/settings';\n\nexport function MenuItemEditor() {\n  const {menuIndex, menuItemIndex} = useParams();\n  const navigate = useNavigate();\n\n  const {getValues} = useFormContext<AppearanceValues>();\n\n  const formPath = `settings.menus.${menuIndex}.items.${menuItemIndex}`;\n  const item = getValues(formPath as any);\n\n  // go to menu editor, if menu item can't be found\n  useEffect(() => {\n    if (!item) {\n      //navigate(`../`);\n    } else {\n      appearanceState().preview.setHighlight(\n        `[data-menu-item-id=\"${item.id}\"]`\n      );\n    }\n  }, [navigate, item]);\n\n  // only render form when menu and item are available to avoid issues with hook form default values\n  if (!item || menuItemIndex == null) {\n    return null;\n  }\n\n  return <MenuItemEditorSection formPath={formPath} />;\n}\n\ninterface MenuItemEditorSectionProps {\n  formPath: string;\n}\nfunction MenuItemEditorSection({formPath}: MenuItemEditorSectionProps) {\n  return (\n    <Fragment>\n      <MenuItemForm formPathPrefix={formPath} />\n      <div className=\"text-right mt-40\">\n        <DeleteItemTrigger />\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteItemTrigger() {\n  const navigate = useNavigate();\n  const {menuIndex, menuItemIndex} = useParams();\n  const {fields, remove} = useFieldArray<AppearanceValues>({\n    name: `settings.menus.${+menuIndex!}.items`,\n  });\n\n  if (!menuItemIndex) return null;\n\n  const item = fields[+menuItemIndex] as MenuItemConfig;\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          if (menuItemIndex) {\n            remove(+menuItemIndex);\n            navigate(`/admin/appearance/menus/${menuIndex}`);\n          }\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete this item\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete menu item\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: item.label}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {appearanceState, useAppearanceStore} from '../appearance-store';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment, ReactNode} from 'react';\nimport {Settings} from '../../../core/settings/settings';\n\nexport function GeneralSection() {\n  return (\n    <Fragment>\n      <BrandingImageSelector\n        label={<Trans message=\"Favicon\" />}\n        description={\n          <Trans message=\"This will generate different size favicons. Image should be at least 512x512 in size.\" />\n        }\n        type=\"favicon\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Light logo\" />}\n        description={<Trans message=\"Will be used on dark backgrounds.\" />}\n        type=\"logo_light\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Dark logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds. Will default to light logo if left empty.\" />\n        }\n        type=\"logo_dark\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile light logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds on mobile. Will default to desktop logo if left empty.\" />\n        }\n        type=\"logo_light_mobile\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile dark logo\" />}\n        description={\n          <Trans message=\"Will be used on dark backgrounds on mobile. Will default to desktop if left empty.\" />\n        }\n        type=\"logo_dark_mobile\"\n      />\n      <SiteNameTextField />\n      <SiteDescriptionTextArea />\n    </Fragment>\n  );\n}\n\ninterface ImageSelectorProps {\n  label: ReactNode;\n  description: ReactNode;\n  type: keyof Settings['branding'];\n}\nfunction BrandingImageSelector({label, description, type}: ImageSelectorProps) {\n  const defaultValue = useAppearanceStore(\n    s => s.defaults?.settings.branding[type]\n  );\n  return (\n    <FormImageSelector\n      name={`settings.branding.${type}`}\n      className=\"border-b pb-30 mb-30\"\n      label={label}\n      description={description}\n      diskPrefix=\"branding_media\"\n      defaultValue={defaultValue}\n      onChange={() => {\n        appearanceState().preview.setHighlight('[data-logo=\"navbar\"]');\n      }}\n    />\n  );\n}\nfunction SiteNameTextField() {\n  return (\n    <FormTextField\n      name=\"appearance.env.app_name\"\n      required\n      className=\"mt-20\"\n      label={<Trans message=\"Site name\" />}\n    />\n  );\n}\n\nfunction SiteDescriptionTextArea() {\n  return (\n    <FormTextField\n      name=\"settings.branding.site_description\"\n      className=\"mt-20\"\n      inputElementType=\"textarea\"\n      rows={4}\n      label={<Trans message=\"Site description\" />}\n    />\n  );\n}\n","export function randomNumber(min: number = 1, max: number = 10000) {\n  const randomBuffer = new Uint32Array(1);\n\n  window.crypto.getRandomValues(randomBuffer);\n\n  const number = randomBuffer[0] / (0xffffffff + 1);\n\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(number * (max - min + 1)) + min;\n}\n","import {NavLink, useNavigate} from 'react-router-dom';\nimport {Fragment, useEffect} from 'react';\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\nimport {AppearanceButton} from '../../appearance-button';\nimport {Button} from '../../../../ui/buttons/button';\nimport {AddIcon} from '../../../../icons/material/Add';\nimport {randomNumber} from '../../../../utils/string/random-number';\nimport {Trans} from '../../../../i18n/trans';\nimport {useFieldArray} from 'react-hook-form';\nimport {useTrans} from '../../../../i18n/use-trans';\nimport {message} from '../../../../i18n/message';\nimport {useBootstrapData} from '../../../../core/bootstrap-data/bootstrap-data-context';\n\nexport function ThemeList() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {\n    data: {themes},\n  } = useBootstrapData();\n  const {fields, append} = useFieldArray<\n    AppearanceValues,\n    'appearance.themes.all',\n    'key'\n  >({\n    name: 'appearance.themes.all',\n    keyName: 'key',\n  });\n\n  useEffect(() => {\n    if (themes.selectedThemeId) {\n      appearanceState().preview.setActiveTheme(themes.selectedThemeId);\n    }\n  }, [themes.selectedThemeId]);\n\n  return (\n    <Fragment>\n      <div className=\"mb-20\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            const lightThemeColors =\n              appearanceState().defaults?.appearance.themes.light!;\n            append({\n              id: randomNumber(),\n              name: trans(message('New theme')),\n              values: lightThemeColors,\n            });\n            navigate(`${fields.length + 1}`);\n          }}\n        >\n          <Trans message=\"New theme\" />\n        </Button>\n      </div>\n      {fields.map((field, index) => (\n        <AppearanceButton key={field.key} to={`${index}`} elementType={NavLink}>\n          {field.name}\n        </AppearanceButton>\n      ))}\n    </Fragment>\n  );\n}\n","import React, {MutableRefObject, ReactNode, Suspense, useState} from 'react';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../i18n/trans';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../ui/buttons/button';\nimport type ReactAce from 'react-ace';\n\nconst AceEditor = React.lazy(() => import('./ace-editor'));\n\ninterface TextEditorSourcecodeDialogProps {\n  defaultValue: string;\n  mode?: 'css' | 'html' | 'php_laravel_blade';\n  title: ReactNode;\n  onSave?: (value?: string) => void;\n  isSaving?: boolean;\n  footerStartAction?: ReactNode;\n  beautify?: boolean;\n  editorRef?: MutableRefObject<ReactAce | null>;\n}\nexport function AceDialog({\n  defaultValue,\n  mode = 'html',\n  title,\n  onSave,\n  isSaving,\n  footerStartAction,\n  beautify,\n  editorRef,\n}: TextEditorSourcecodeDialogProps) {\n  const [value, setValue] = useState(defaultValue);\n  const [isValid, setIsValid] = useState<boolean>(true);\n\n  return (\n    <Dialog size=\"fullscreen\" className=\"h-full w-full\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody className=\"relative flex-auto\" padding=\"p-0\">\n        <Suspense\n          fallback={\n            <div className=\"flex h-400 w-full items-center justify-center\">\n              <ProgressCircle\n                aria-label=\"Loading editor...\"\n                isIndeterminate\n                size=\"md\"\n              />\n            </div>\n          }\n        >\n          <AceEditor\n            beautify={beautify}\n            mode={mode}\n            onChange={newValue => setValue(newValue)}\n            defaultValue={value || ''}\n            onIsValidChange={setIsValid}\n            editorRef={editorRef}\n          />\n        </Suspense>\n      </DialogBody>\n      <Footer\n        disabled={!isValid || isSaving}\n        value={value}\n        onSave={onSave}\n        startAction={footerStartAction}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  disabled: boolean | undefined;\n  value?: string;\n  onSave?: (value?: string) => void;\n  startAction?: ReactNode;\n}\nfunction Footer({disabled, value, onSave, startAction}: FooterProps) {\n  const {close} = useDialogContext();\n  return (\n    <DialogFooter dividerTop startAction={startAction}>\n      <Button onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        disabled={disabled}\n        variant=\"flat\"\n        color=\"primary\"\n        onClick={() => {\n          if (onSave) {\n            onSave(value);\n          } else {\n            close(value);\n          }\n        }}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\n\nexport function useSeoTags(name: string | string[]) {\n  return useQuery({\n    queryKey: ['admin', 'seo-tags', name],\n    queryFn: () => fetchTags(name),\n  });\n}\n\nfunction fetchTags(name: string | string[]) {\n  return apiClient\n    .get<\n      Record<\n        string,\n        {\n          custom: string | null;\n          original: string;\n        }\n      >\n    >(`admin/appearance/seo-tags/${name}`)\n    .then(response => response.data);\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {}\n\nexport function useUpdateSeoTags(name: string) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (payload: {tags: string}) => updateTags(name, payload.tags),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['admin', 'seo-tags', name],\n      });\n      toast(message('Updated SEO tags'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateTags(name: string, tags: string): Promise<Response> {\n  return apiClient\n    .put(`admin/appearance/seo-tags/${name}`, {tags})\n    .then(r => r.data);\n}\n","import {Fragment, useRef} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\nimport {SeoSettingsSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {useSeoTags} from '@common/admin/appearance/sections/seo/use-seo-tags';\nimport {useUpdateSeoTags} from '@common/admin/appearance/sections/seo/use-update-seo-tags';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {Button} from '@common/ui/buttons/button';\nimport type ReactAce from 'react-ace';\n\nconst pages =\n  (\n    mergedAppearanceConfig.sections['seo-settings']\n      .config as SeoSettingsSectionConfig\n  )?.pages || [];\n\nconst names = pages.map(page => page.key);\n\nexport function SeoSection() {\n  const {isLoading} = useSeoTags(names);\n\n  if (isLoading) {\n    return <FullPageLoader />;\n  }\n\n  return (\n    <Fragment>\n      {pages.map(page => (\n        <TagEditorTrigger key={page.key} label={page.label} name={page.key} />\n      ))}\n    </Fragment>\n  );\n}\n\ninterface TagEditorTriggerProps {\n  label: MessageDescriptor;\n  name: string;\n}\nfunction TagEditorTrigger({label, name}: TagEditorTriggerProps) {\n  const {data, isLoading} = useSeoTags(names);\n\n  return (\n    <DialogTrigger type=\"modal\">\n      <AppearanceButton disabled={isLoading}>\n        <Trans {...label} />\n      </AppearanceButton>\n      {data ? <TagsEditorDialog name={name} value={data[name]} /> : null}\n    </DialogTrigger>\n  );\n}\n\ninterface TagsEditorDialogProps {\n  name: string;\n  value: {custom: string | null; original: string};\n}\nfunction TagsEditorDialog({name, value}: TagsEditorDialogProps) {\n  const {close} = useDialogContext();\n  const updateTags = useUpdateSeoTags(name);\n  const editorRef = useRef<ReactAce | null>(null);\n\n  const resetButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      onClick={() => {\n        if (editorRef.current) {\n          editorRef.current.editor.setValue(value.original);\n        }\n      }}\n    >\n      <Trans message=\"Reset to original\" />\n    </Button>\n  );\n\n  return (\n    <AceDialog\n      mode=\"php_laravel_blade\"\n      title={<Trans message=\"Edit SEO meta tags\" />}\n      footerStartAction={resetButton}\n      editorRef={editorRef}\n      defaultValue={value.custom || value.original}\n      isSaving={updateTags.isPending}\n      beautify={false}\n      onSave={newValue => {\n        if (newValue != null) {\n          updateTags.mutate(\n            {tags: newValue},\n            {\n              onSuccess: () => close(),\n            },\n          );\n        }\n      }}\n    />\n  );\n}\n","import {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceValues,\n} from '@common/admin/appearance/appearance-store';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport {Fragment} from 'react';\n\nexport function CustomCodeSection() {\n  return (\n    <Fragment>\n      <CustomCodeDialogTrigger mode=\"css\" />\n      <CustomCodeDialogTrigger mode=\"html\" />\n    </Fragment>\n  );\n}\n\ninterface CustomCodeDialogTriggerProps {\n  mode: 'html' | 'css';\n}\nfunction CustomCodeDialogTrigger({mode}: CustomCodeDialogTriggerProps) {\n  const {getValues} = useFormContext<AppearanceValues>();\n  const {setValue} = useFormContext<AppearanceValues>();\n\n  const title =\n    mode === 'html' ? (\n      <Trans message=\"Custom HTML & JavaScript\" />\n    ) : (\n      <Trans message=\"Custom CSS\" />\n    );\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          setValue(`appearance.custom_code.${mode}`, newValue, {\n            shouldDirty: true,\n          });\n          appearanceState().preview.setCustomCode(mode, newValue);\n        }\n      }}\n    >\n      <AppearanceButton>{title}</AppearanceButton>\n      <AceDialog\n        title={title}\n        defaultValue={getValues(`appearance.custom_code.${mode}`) || ''}\n        mode={mode}\n      />\n    </DialogTrigger>\n  );\n}\n","export default \"__VITE_ASSET__8acde003__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '../../i18n/message';\nimport {USER_MODEL} from '../../auth/user';\nimport {SiteConfigContextValue} from '@common/core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const CustomPageDatatableFilters = (\n  config: SiteConfigContextValue\n): BackendFilter[] => {\n  const dynamicFilters: BackendFilter[] =\n    config.customPages.types.length > 1\n      ? [\n          {\n            control: {\n              type: FilterControlType.Select,\n              defaultValue: 'default',\n              options: config.customPages.types.map(type => ({\n                value: type.type,\n                label: type.label,\n                key: type.type,\n              })),\n            },\n\n            key: 'type',\n            label: message('Type'),\n            description: message('Type of the page'),\n            defaultOperator: FilterOperator.eq,\n          },\n        ]\n      : [];\n\n  return [\n    {\n      key: 'user_id',\n      label: message('User'),\n      description: message('User page was created by'),\n      defaultOperator: FilterOperator.eq,\n      control: {\n        type: FilterControlType.SelectModel,\n        model: USER_MODEL,\n      },\n    },\n    ...dynamicFilters,\n    createdAtFilter({\n      description: message('Date page was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date page was last updated'),\n    }),\n  ];\n};\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EditIcon} from '@common/icons/material/Edit';\n\nexport const CustomPageDatatableColumns: ColumnConfig<CustomPage>[] = [\n  {\n    key: 'slug',\n    allowsSorting: true,\n    width: 'flex-2 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Slug\" />,\n    body: page => (\n      <Link target=\"_blank\" to={`/pages/${page.slug}`} className={LinkStyle}>\n        {page.slug}\n      </Link>\n    ),\n  },\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-2 min-w-140',\n    header: () => <Trans message=\"Owner\" />,\n    body: page =>\n      page.user && (\n        <NameWithAvatar\n          image={page.user.avatar}\n          label={page.user.display_name}\n          description={page.user.email}\n        />\n      ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Type\" />,\n    body: page => <Trans message={page.type} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: page => <FormattedDate date={page.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: page => (\n      <IconButton\n        size=\"md\"\n        className=\"text-muted\"\n        elementType={Link}\n        to={`${page.id}/edit`}\n      >\n        <EditIcon />\n      </IconButton>\n    ),\n  },\n];\n","import React, {useContext, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {Trans} from '../../i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport articlesSvg from './articles.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {CustomPageDatatableFilters} from './custom-page-datatable-filters';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {CustomPageDatatableColumns} from '@common/admin/custom-pages/custom-page-datatable-columns';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\nexport function CustomPageDatablePage() {\n  const config = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return CustomPageDatatableFilters(config);\n  }, [config]);\n\n  return (\n    <DataTablePage\n      endpoint=\"custom-pages\"\n      title={<Trans message=\"Custom pages\" />}\n      filters={filters}\n      columns={CustomPageDatatableColumns}\n      queryParams={{with: 'user'}}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={articlesSvg}\n          title={<Trans message=\"No pages have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching pages\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton elementType={Link} to=\"new\">\n      <Trans message=\"New page\" />\n    </DataTableAddItemButton>\n  );\n}\n","import {message} from '@common/i18n/message';\nimport {SettingsNavItem} from '@common/admin/settings/settings-nav-config';\n\nexport const AppSettingsNavConfig: SettingsNavItem[] = [\n  {label: message('Drive'), to: 'drive'},\n];\n","import {AppSettingsNavConfig} from '@app/admin/settings/app-settings-nav-config';\nimport {message} from '../../i18n/message';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport {To} from 'react-router-dom';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nexport interface SettingsNavItem {\n  label: MessageDescriptor;\n  to: To;\n}\n\nconst filteredSettingsNavConfig: (SettingsNavItem | false)[] = [\n  {label: message('General'), to: 'general'},\n  ...AppSettingsNavConfig,\n  getBootstrapData().settings.billing.integrated && {\n    label: message('Subscriptions'),\n    to: 'subscriptions',\n  },\n  {label: message('Localization'), to: 'localization'},\n  {\n    label: message('Authentication'),\n    to: 'authentication',\n  },\n  {label: message('Uploading'), to: 'uploading'},\n  {label: message('Outgoing email'), to: 'outgoing-email'},\n  {label: message('Cache'), to: 'cache'},\n  {label: message('Analytics'), to: 'analytics'},\n  {label: message('Logging'), to: 'logging'},\n  {label: message('Queue'), to: 'queue'},\n  {label: message('Recaptcha'), to: 'recaptcha'},\n  {label: message('GDPR'), to: 'gdpr'},\n  {\n    label: message('Menus'),\n    to: '/admin/appearance/menus',\n  },\n  {\n    label: message('Seo'),\n    to: '/admin/appearance/seo-settings',\n  },\n  {\n    label: message('Themes'),\n    to: '/admin/appearance/themes',\n  },\n].filter(Boolean);\n\nexport const SettingsNavConfig = filteredSettingsNavConfig as SettingsNavItem[];\n","import clsx from 'clsx';\nimport {NavLink, Outlet, useLocation, useNavigate} from 'react-router-dom';\nimport {SettingsNavConfig} from './settings-nav-config';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\nimport {Option, Select} from '../../ui/forms/select/select';\nimport {Trans} from '../../i18n/trans';\nimport {StaticPageTitle} from '../../seo/static-page-title';\n\ninterface Props {\n  className?: string;\n}\nexport function SettingsLayout({className}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <div\n      className={clsx(\n        className,\n        'container mx-auto min-h-full items-start gap-30 p-24 md:flex',\n      )}\n    >\n      <StaticPageTitle>\n        <Trans message=\"Settings\" />\n      </StaticPageTitle>\n      {isMobile ? <MobileNav /> : <DesktopNav />}\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\nfunction MobileNav() {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const value = pathname.split('/').pop();\n\n  return (\n    <Select\n      minWidth=\"min-w-none\"\n      className=\"mb-24 w-full bg-paper\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newPage => {\n        navigate(newPage as string);\n      }}\n    >\n      {SettingsNavConfig.map(item => (\n        <Option key={item.to as string} value={item.to}>\n          <Trans {...item.label} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nfunction DesktopNav() {\n  return (\n    <div className=\"sticky top-24 w-240 flex-shrink-0\">\n      {SettingsNavConfig.map(item => (\n        <NavLink\n          key={item.to as string}\n          to={item.to}\n          className={({isActive}) =>\n            clsx(\n              'mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color',\n              isActive\n                ? 'bg-primary/6 font-semibold text-primary'\n                : 'hover:bg-hover',\n            )\n          }\n        >\n          <Trans {...item.label} />\n        </NavLink>\n      ))}\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {AdminSettings} from '../admin-settings';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchAdminSettingsResponse\n  extends BackendResponse,\n    AdminSettings {}\n\nexport function useAdminSettings() {\n  return useQuery({\n    queryKey: ['fetchAdminSettings'],\n    queryFn: () => fetchAdminSettings(),\n    // prevent automatic re-fetching so diffing with previous settings work properly\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchAdminSettings(): Promise<FetchAdminSettingsResponse> {\n  return apiClient.get('settings').then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {message} from '../../i18n/message';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nfunction GenerateSitemap(): Promise<Response> {\n  return apiClient.post('sitemap/generate').then(r => r.data);\n}\n\nexport function useGenerateSitemap() {\n  return useMutation({\n    mutationFn: () => GenerateSitemap(),\n    onSuccess: () => {\n      toast(message('Sitemap generated'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {diff} from 'deep-object-diff';\nimport dot from 'dot-object';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {}\n\nexport interface AdminSettingsWithFiles {\n  files?: Record<string, File>;\n  client?: Partial<AdminSettings['client']>;\n  server?: Partial<AdminSettings['server']>;\n}\n\nexport function useUpdateAdminSettings(\n  form: UseFormReturn<AdminSettingsWithFiles>,\n) {\n  const {data: original} = useAdminSettings();\n\n  return useMutation({\n    mutationFn: (props: AdminSettingsWithFiles) => {\n      //need to convert these to json, otherwise only single key from object would be sent due to diffing\n      if (props.client?.cookie_notice?.button) {\n        props.client.cookie_notice.button = JSON.stringify(\n          props.client.cookie_notice.button,\n        ) as any;\n      }\n      if (props.client?.registration?.policies) {\n        props.client.registration.policies = JSON.stringify(\n          props.client.registration.policies,\n        ) as any;\n      }\n      if ((props.client as any)?.artistPage?.tabs) {\n        (props.client as any).artistPage.tabs = JSON.stringify(\n          (props.client as any).artistPage.tabs,\n        ) as any;\n      }\n      if ((props.client as any)?.title_page?.sections) {\n        (props.client as any).title_page.sections = JSON.stringify(\n          (props.client as any).title_page.sections,\n        ) as any;\n      }\n      if ((props.client as any)?.incoming_email) {\n        (props.client as any).incoming_email = JSON.stringify(\n          (props.client as any).incoming_email,\n        ) as any;\n      }\n\n      const client = props.client ? diff(original!.client, props.client) : null;\n      const server = props.server ? diff(original!.server, props.server) : null;\n      return updateAdminSettings({\n        client,\n        server,\n        files: props.files,\n      } as AdminSettings);\n    },\n    onSuccess: () => {\n      toast(message('Settings updated'), {\n        position: 'bottom-right',\n      });\n      queryClient.invalidateQueries({queryKey: ['fetchAdminSettings']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateAdminSettings({\n  client,\n  server,\n  files,\n}: AdminSettingsWithFiles): Promise<Response> {\n  const formData = new FormData();\n  if (client) {\n    formData.set('client', JSON.stringify(dot.dot(client)));\n  }\n  if (server) {\n    formData.set('server', JSON.stringify(dot.dot(server)));\n  }\n  Object.entries(files || {}).forEach(([key, file]) => {\n    formData.set(key, file);\n  });\n  return apiClient\n    .post('settings', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    .then(r => r.data);\n}\n","import {FieldErrors, useForm} from 'react-hook-form';\nimport {Fragment, ReactNode} from 'react';\nimport {\n  AdminSettingsWithFiles,\n  useUpdateAdminSettings,\n} from './requests/update-admin-settings';\nimport {AdminSettings} from './admin-settings';\nimport {useAdminSettings} from './requests/use-admin-settings';\nimport {Form} from '../../ui/forms/form';\nimport {Button} from '../../ui/buttons/button';\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\nimport {ProgressBar} from '../../ui/progress/progress-bar';\nimport {Trans} from '../../i18n/trans';\n\ninterface Props {\n  title: ReactNode;\n  description: ReactNode;\n  children: ReactNode;\n  transformValues?: (values: AdminSettingsWithFiles) => AdminSettingsWithFiles;\n}\nexport function SettingsPanel({\n  title,\n  description,\n  children,\n  transformValues,\n}: Props) {\n  const {data} = useAdminSettings();\n\n  return (\n    <section>\n      <div className=\"mb-40\">\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\n        <div className=\"text-sm text-muted\">{description}</div>\n      </div>\n      {data ? (\n        <FormWrapper defaultValues={data} transformValues={transformValues}>\n          {children}\n        </FormWrapper>\n      ) : (\n        <ProgressCircle isIndeterminate aria-label=\"Loading settings...\" />\n      )}\n    </section>\n  );\n}\n\ninterface FormWrapperProps {\n  children: ReactNode;\n  defaultValues: AdminSettings;\n  transformValues?: (values: AdminSettingsWithFiles) => AdminSettingsWithFiles;\n}\nfunction FormWrapper({\n  children,\n  defaultValues,\n  transformValues,\n}: FormWrapperProps) {\n  const form = useForm<AdminSettingsWithFiles>({defaultValues});\n  const updateSettings = useUpdateAdminSettings(form);\n  return (\n    <Fragment>\n      <Form\n        form={form}\n        onBeforeSubmit={() => {\n          // clear group errors, because hook form won't automatically\n          // clear errors that are not bound to a specific form field\n          const errors = form.formState.errors as FieldErrors<object>;\n          const keys = Object.keys(errors).filter(key => {\n            return key.endsWith('_group');\n          });\n          form.clearErrors(keys as any);\n        }}\n        onSubmit={value => {\n          value = transformValues ? transformValues(value) : value;\n          updateSettings.mutate(value);\n        }}\n      >\n        {children}\n        <div className=\"mt-40\">\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            disabled={updateSettings.isPending}\n          >\n            <Trans message=\"Update\" />\n          </Button>\n        </div>\n      </Form>\n      {updateSettings.isPending && (\n        <ProgressBar\n          size=\"xs\"\n          className=\"absolute -bottom-14 left-30 w-full\"\n          isIndeterminate\n          aria-label=\"Saving settings...\"\n        />\n      )}\n    </Fragment>\n  );\n}\n","export function SettingsSeparator() {\n  return <div className=\"h-1 bg-divider my-30\" />;\n}\n","import clsx from 'clsx';\nimport {LinkIcon} from '../../icons/material/Link';\nimport {ExternalLink} from '../../ui/buttons/external-link';\nimport {Trans} from '../../i18n/trans';\nimport {useSettings} from '../../core/settings/use-settings';\n\ninterface LearnMoreLinkProps {\n  link: string;\n  className?: string;\n}\nexport function LearnMoreLink({link, className}: LearnMoreLinkProps) {\n  const {site} = useSettings();\n  if (site.hide_docs_button) {\n    return null;\n  }\n  return (\n    <div className={clsx('flex items-center gap-8', className)}>\n      <LinkIcon size=\"sm\" />\n      <ExternalLink href={link}>\n        <Trans message=\"Learn more\" />\n      </ExternalLink>\n    </div>\n  );\n}\n","import {useAdminSettings} from '../requests/use-admin-settings';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormSelect, Option} from '../../../ui/forms/select/select';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {Button} from '@common/ui/buttons/button';\nimport {useGenerateSitemap} from '../generate-sitemap';\nimport {ExternalLink} from '@common/ui/buttons/external-link';\nimport {SettingsPanel} from '../settings-panel';\nimport {SettingsSeparator} from '../settings-separator';\nimport {LearnMoreLink} from '../learn-more-link';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment, useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useBootstrapData} from '@common/core/bootstrap-data/bootstrap-data-context';\nimport {useValueLists} from '@common/http/value-lists';\nimport {useFormContext} from 'react-hook-form';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/update-admin-settings';\n\nexport function GeneralSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"General\" />}\n      description={\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\n      }\n    >\n      <SiteUrlSection />\n      <SettingsSeparator />\n      <HomepageSection />\n      <SettingsSeparator />\n      <ThemeSection />\n      <SettingsSeparator />\n      <SitemapSection />\n    </SettingsPanel>\n  );\n}\n\nfunction SiteUrlSection() {\n  const {data} = useAdminSettings();\n\n  if (!data) return null;\n\n  let append = null;\n  const server = data!.server;\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\n  if (isInvalid) {\n    append = (\n      <div className=\"mt-20 text-sm text-danger\">\n        <Trans\n          values={{\n            baseUrl: server.app_url,\n            currentUrl: server.newAppUrl,\n            b: chunks => <b>{chunks}</b>,\n          }}\n          message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={!!isInvalid}\n        name=\"server.app_url\"\n        label={<Trans message=\"Primary site url\" />}\n        description={\n          <LearnMoreLink link=\"https://support.vebto.com/help-center/articles/35/primary-site-url\" />\n        }\n      />\n      {append}\n    </Fragment>\n  );\n}\n\nfunction HomepageSection() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  const {homepage} = useContext(SiteConfigContext);\n  const {data} = useValueLists(['menuItemCategories']);\n  const selectedType = watch('client.homepage.type');\n\n  return (\n    <div>\n      <FormSelect\n        name=\"client.homepage.type\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Site home page\" />}\n        description={\n          <Trans message=\"Which page should be used as site homepage.\" />\n        }\n      >\n        {homepage.options.map(option => (\n          <Option key={option.value} value={option.value}>\n            <Trans {...option.label} />\n          </Option>\n        ))}\n        {data?.menuItemCategories?.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {data?.menuItemCategories?.map(category => {\n        return selectedType === category.type ? (\n          <FormSelect\n            className=\"mt-24\"\n            name=\"client.homepage.value\"\n            key={category.name}\n            selectionMode=\"single\"\n            label={\n              <Trans message=\"Homepage :name\" values={{name: category.name}} />\n            }\n          >\n            {category.items.map(item => (\n              <Option key={item.label} value={item.model_id}>\n                {item.label}\n              </Option>\n            ))}\n          </FormSelect>\n        ) : null;\n      })}\n    </div>\n  );\n}\n\nfunction ThemeSection() {\n  const {\n    data: {themes},\n  } = useBootstrapData();\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name=\"client.themes.default_id\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default site theme\" />}\n        description={\n          <Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />\n        }\n      >\n        <Option value={0}>\n          <Trans message=\"System\" />\n        </Option>\n        {themes.all.map(theme => (\n          <Option key={theme.id} value={theme.id}>\n            {theme.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormSwitch\n        name=\"client.themes.user_change\"\n        description={\n          <Trans message=\"Allow users to manually change site theme.\" />\n        }\n      >\n        <Trans message=\"Allow theme change\" />\n      </FormSwitch>\n    </Fragment>\n  );\n}\n\nfunction SitemapSection() {\n  const generateSitemap = useGenerateSitemap();\n  const {base_url} = useSettings();\n\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\n\n  return (\n    <>\n      <Button\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={generateSitemap.isPending}\n        onClick={() => {\n          generateSitemap.mutate();\n        }}\n      >\n        <Trans message=\"Generate sitemap\" />\n      </Button>\n      <div className=\"mt-14 text-sm text-muted\">\n        <Trans\n          message=\"Once generated, sitemap url will be: :url\"\n          values={{\n            url: link,\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import {parseColor} from '@react-stately/color';\n\nexport function colorToThemeValue(color: string): string {\n  return parseColor(color)\n    .toString('rgb')\n    .replace('rgb(', '')\n    .replace(')', '')\n    .replace(/, ?/g, ' ');\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TuneIcon = createSvgIcon(\n  <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\" />\n, 'TuneOutlined');\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {useEffect} from 'react';\nimport {TuneIcon} from '../../../../icons/material/Tune';\nimport {Button} from '../../../../ui/buttons/button';\nimport {CssTheme} from '../../../../ui/themes/css-theme';\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '../../../../ui/forms/toggle/switch';\nimport {AppearanceValues} from '../../appearance-store';\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '../../../../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../../../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../../../i18n/trans';\nimport {Form} from '../../../../ui/forms/form';\nimport {useParams} from 'react-router-dom';\n\nexport function ThemeSettingsDialogTrigger() {\n  const {getValues, setValue} = useFormContext<AppearanceValues>();\n  const {themeIndex} = useParams();\n  const theme = getValues(`appearance.themes.all.${+themeIndex!}`);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(value?: CssTheme) => {\n        if (!value) return;\n\n        getValues('appearance.themes.all').forEach((currentTheme, index) => {\n          // update changed theme\n          if (currentTheme.id === value.id) {\n            setValue(`appearance.themes.all.${index}`, value, {\n              shouldDirty: true,\n            });\n            return;\n          }\n\n          // unset \"default_light\" and \"default_dark\" on other themes\n          if (value.default_light) {\n            setValue(\n              `appearance.themes.all.${index}`,\n              {...currentTheme, default_light: false},\n              {shouldDirty: true}\n            );\n            return;\n          }\n          if (value.default_dark) {\n            setValue(\n              `appearance.themes.all.${index}`,\n              {...currentTheme, default_dark: false},\n              {shouldDirty: true}\n            );\n            return;\n          }\n        });\n      }}\n    >\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<TuneIcon />}\n      >\n        <Trans message=\"Settings\" />\n      </Button>\n      <SettingsDialog theme={theme} />\n    </DialogTrigger>\n  );\n}\n\ninterface SettingsDialogProps {\n  theme: CssTheme;\n}\nfunction SettingsDialog({theme}: SettingsDialogProps) {\n  const form = useForm<CssTheme>({defaultValues: theme});\n  const {close, formId} = useDialogContext();\n\n  useEffect(() => {\n    const subscription = form.watch((value, {name}) => {\n      // theme can only be set as either light or dark default\n      if (name === 'default_light' && value.default_light) {\n        form.setValue('default_dark', false);\n      }\n      if (name === 'default_dark' && value.default_dark) {\n        form.setValue('default_light', false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            autoFocus\n          />\n          <FormSwitch\n            name=\"is_dark\"\n            className=\"mb-20 pb-20 border-b\"\n            description={\n              <Trans message=\"Whether this theme has light text on dark background.\" />\n            }\n          >\n            <Trans message=\"Dark theme\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_light\"\n            className=\"mb-30\"\n            description={\n              <Trans message=\"When light mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for light mode\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_dark\"\n            description={\n              <Trans message=\"When dark mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for dark mode\" />\n          </FormSwitch>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RestartAltIcon = createSvgIcon(\n  <path d=\"M6 13c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91zm14 0c0-4.42-3.58-8-8-8-.06 0-.12.01-.18.01l1.09-1.09L11.5 2.5 8 6l3.5 3.5 1.41-1.41-1.08-1.08c.06 0 .12-.01.17-.01 3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93z\" />\n, 'RestartAltOutlined');\n","import {Fragment, useState} from 'react';\nimport {DeleteIcon} from '../../../../icons/material/Delete';\nimport {ConfirmationDialog} from '../../../../ui/overlays/dialog/confirmation-dialog';\nimport {IconButton} from '../../../../ui/buttons/icon-button';\nimport {MoreVertIcon} from '../../../../icons/material/MoreVert';\nimport {RestartAltIcon} from '../../../../icons/material/RestartAlt';\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\nimport {toast} from '../../../../ui/toast/toast';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../../../ui/navigation/menu/menu-trigger';\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\nimport {message} from '../../../../i18n/message';\nimport {Trans} from '../../../../i18n/trans';\nimport {useNavigate} from '../../../../utils/hooks/use-navigate';\nimport {useFieldArray, useFormContext} from 'react-hook-form';\nimport {useParams} from 'react-router-dom';\n\nexport function ThemeMoreOptionsButton() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const {setValue, getValues} = useFormContext<AppearanceValues>();\n  const {fields, remove} = useFieldArray<AppearanceValues>({\n    name: 'appearance.themes.all',\n  });\n\n  const deleteTheme = () => {\n    if (fields.length <= 1) {\n      toast.danger(message('At least one theme is required'));\n      return;\n    }\n    if (themeIndex) {\n      navigate('/admin/appearance/themes');\n      remove(+themeIndex);\n      setValue('appearance.themes.selectedThemeId', null);\n    }\n  };\n\n  return (\n    <Fragment>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'delete') {\n            setConfirmDialogOpen(true);\n          } else if (key === 'reset') {\n            const path =\n              `appearance.themes.all.${+themeIndex!}` as 'appearance.themes.all.0';\n            const defaultColors = getValues(`${path}.is_dark`)\n              ? appearanceState().defaults!.appearance.themes.dark\n              : appearanceState().defaults!.appearance.themes.light;\n\n            Object.entries(defaultColors).forEach(([colorName, themeValue]) => {\n              appearanceState().preview.setThemeValue(colorName, themeValue);\n            });\n            appearanceState().preview.setThemeFont(null);\n\n            setValue(`${path}.values`, defaultColors, {\n              shouldDirty: true,\n            });\n            setValue(`${path}.font`, undefined, {\n              shouldDirty: true,\n            });\n          }\n        }}\n      >\n        <IconButton size=\"md\" className=\"text-muted\">\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"reset\" startIcon={<RestartAltIcon />}>\n            <Trans message=\"Reset colors\" />\n          </MenuItem>\n          <MenuItem value=\"delete\" startIcon={<DeleteIcon />}>\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={confirmDialogOpen}\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteTheme();\n          }\n          setConfirmDialogOpen(false);\n        }}\n      >\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete theme\" />}\n          body={<Trans message=\"Are you sure you want to delete this theme?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {message} from '@common/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {useFormContext} from 'react-hook-form';\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport clsx from 'clsx';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\n\nconst navbarColorMap = [\n  {\n    label: message('Accent'),\n    value: 'primary',\n    bgColor: 'bg-primary',\n    previewBgColor: 'text-primary',\n  },\n  {\n    label: message('Background'),\n    value: 'bg',\n    bgColor: 'bg-background',\n    previewBgColor: 'text-background',\n  },\n  {\n    label: message('Background alt'),\n    value: 'bg-alt',\n    bgColor: 'bg-alt',\n    previewBgColor: 'text-background-alt',\n  },\n  {\n    label: message('Transparent'),\n    value: 'transparent',\n    bgColor: 'bg-transparent',\n    previewBgColor: 'text-transparent',\n  },\n];\n\nexport function NavbarColorPicker() {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceValues>();\n  const key =\n    `appearance.themes.all.${themeIndex!}.values.--be-navbar-color` as 'appearance.themes.all.1.values.--be-navbar-color';\n  const selectedValue = watch(key);\n  const previewColor = navbarColorMap.find(({value}) => value === selectedValue)\n    ?.previewBgColor;\n  return (\n    <MenuTrigger\n      placement=\"right\"\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={value => {\n        setValue(key, value as string, {shouldDirty: true});\n      }}\n    >\n      <AppearanceButton\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className={clsx('icon-lg', previewColor)}\n          />\n        }\n      >\n        <Trans message=\"Navbar\" />\n      </AppearanceButton>\n      <Menu>\n        {navbarColorMap.map(({label, value, bgColor}) => (\n          <Item\n            key={value}\n            value={value}\n            startIcon={\n              <div className={clsx('h-20 w-20 rounded border', bgColor)} />\n            }\n          >\n            <Trans {...label} />\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {Link, useNavigate, useParams} from 'react-router-dom';\nimport {Fragment, ReactNode, useEffect, useState} from 'react';\nimport {\n  appearanceState,\n  AppearanceValues,\n} from '@common/admin/appearance/appearance-store';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {CssTheme} from '@common/ui/themes/css-theme';\nimport {colorToThemeValue} from '@common/ui/themes/utils/color-to-theme-value';\nimport {ThemeSettingsDialogTrigger} from '@common/admin/appearance/sections/themes/theme-settings-dialog-trigger';\nimport {ThemeMoreOptionsButton} from '@common/admin/appearance/sections/themes/theme-more-options-button';\nimport {ColorPickerDialog} from '@common/ui/color-picker/color-picker-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {useFormContext} from 'react-hook-form';\nimport {Trans} from '@common/i18n/trans';\nimport {NavbarColorPicker} from '@common/admin/appearance/sections/themes/navbar-color-picker';\nimport {message} from '@common/i18n/message';\n\nconst colorList = [\n  {\n    label: message('Background'),\n    key: '--be-background',\n  },\n  {\n    label: message('Background alt'),\n    key: '--be-background-alt',\n  },\n  {\n    label: message('Foreground'),\n    key: '--be-foreground-base',\n  },\n  {\n    label: message('Accent light'),\n    key: '--be-primary-light',\n  },\n  {\n    label: message('Accent'),\n    key: '--be-primary',\n  },\n  {\n    label: message('Accent dark'),\n    key: '--be-primary-dark',\n  },\n  {\n    label: message('Text on accent'),\n    key: '--be-on-primary',\n  },\n  {\n    label: message('Chip'),\n    key: '--be-background-chip',\n  },\n];\n\nexport function ThemeEditor() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const {getValues, watch} = useFormContext<AppearanceValues>();\n\n  const theme = getValues(`appearance.themes.all.${+themeIndex!}`);\n  const selectedFont = watch(\n    `appearance.themes.all.${+themeIndex!}.font.family`,\n  );\n\n  // go to theme list, if theme can't be found\n  useEffect(() => {\n    if (!theme) {\n      navigate('/admin/appearance/themes');\n    }\n  }, [navigate, theme]);\n\n  // select theme in preview on initial render\n  useEffect(() => {\n    if (theme?.id) {\n      appearanceState().preview.setActiveTheme(theme.id);\n    }\n  }, [theme?.id]);\n\n  if (!theme) return null;\n\n  return (\n    <Fragment>\n      <div className=\"mb-20 flex items-center justify-between gap-10\">\n        <ThemeSettingsDialogTrigger />\n        <ThemeMoreOptionsButton />\n      </div>\n      <div>\n        <AppearanceButton\n          elementType={Link}\n          to=\"font\"\n          description={selectedFont ? selectedFont : <Trans message=\"System\" />}\n        >\n          <Trans message=\"Font\" />\n        </AppearanceButton>\n        <AppearanceButton elementType={Link} to=\"radius\">\n          <Trans message=\"Rounding\" />\n        </AppearanceButton>\n        <div className=\"mb-6 mt-22 text-sm font-semibold\">\n          <Trans message=\"Colors\" />\n        </div>\n        <NavbarColorPicker />\n        {colorList.map(color => (\n          <ColorPickerTrigger\n            key={color.key}\n            colorName={color.key}\n            label={<Trans {...color.label} />}\n            initialThemeValue={theme.values[color.key]}\n            theme={theme}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  label: ReactNode;\n  theme: CssTheme;\n  colorName: string;\n  initialThemeValue: string;\n}\nfunction ColorPickerTrigger({\n  label,\n  theme,\n  colorName,\n  initialThemeValue,\n}: ColorPickerTriggerProps) {\n  const {setValue} = useFormContext<AppearanceValues>();\n  const {themeIndex} = useParams();\n  const [selectedThemeValue, setSelectedThemeValue] =\n    useState<string>(initialThemeValue);\n\n  // set color as css variable in preview and on button preview, but not in appearance values\n  // this way color change can be canceled when color picker is closed and applied explicitly via apply button\n  const selectThemeValue = (themeValue: string) => {\n    setSelectedThemeValue(themeValue);\n    appearanceState().preview.setThemeValue(colorName, themeValue);\n  };\n\n  useEffect(() => {\n    // need to update the color here so changes via \"reset colors\" button are reflected\n    setSelectedThemeValue(initialThemeValue);\n  }, [initialThemeValue]);\n\n  return (\n    <DialogTrigger\n      value={selectedThemeValue}\n      type=\"popover\"\n      placement=\"right\"\n      offset={10}\n      onValueChange={newColor => {\n        selectThemeValue(colorToThemeValue(newColor));\n      }}\n      onClose={(newColor, {valueChanged, initialValue}) => {\n        if (newColor && valueChanged) {\n          setValue(\n            `appearance.themes.all.${+themeIndex!}.values.${colorName}`,\n            newColor,\n            {shouldDirty: true},\n          );\n          setValue('appearance.themes.selectedThemeId', theme.id);\n        } else {\n          // reset to initial value, if apply button was not clicked\n          selectThemeValue(initialValue);\n        }\n      }}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: `rgb(${selectedThemeValue})`}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","import {SettingsPanel} from '@common/admin/settings/settings-panel';\nimport {FormRadioGroup} from '@common/ui/forms/radio-group/radio-group';\nimport {FormRadio} from '@common/ui/forms/radio-group/radio';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {Trans} from '@common/i18n/trans';\n\nexport function DriveSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Drive\" />}\n      description={\n        <Trans message=\"Configure defaults for drive user dashboard.\" />\n      }\n    >\n      <FormRadioGroup\n        required\n        className=\"mb-30\"\n        size=\"md\"\n        name=\"client.drive.default_view\"\n        orientation=\"vertical\"\n        label={<Trans message=\"Default view mode\" />}\n        description={\n          <Trans message=\"Which view mode should user drive use by default.\" />\n        }\n      >\n        <FormRadio value=\"list\">\n          <Trans message=\"List\" />\n        </FormRadio>\n        <FormRadio value=\"grid\">\n          <Trans message=\"Grid\" />\n        </FormRadio>\n      </FormRadioGroup>\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.drive.send_share_notification\"\n        description={\n          <Trans message=\"Send a notification to user when a file or folder is shared with them.\" />\n        }\n      >\n        <Trans message=\"Share notifications\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.share.suggest_emails\"\n        description={\n          <Trans message=\"Suggest email address of existing users when sharing a file or folder.\" />\n        }\n      >\n        <Trans message=\"Suggest emails\" />\n      </FormSwitch>\n    </SettingsPanel>\n  );\n}\n","import {RouteObject} from 'react-router-dom';\nimport {DriveSettings} from './drive-settings';\n\nexport const AppSettingsRoutes: RouteObject[] = [\n  {path: 'drive', element: <DriveSettings />},\n];\n","import {ReactNode, useEffect, useRef} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: (isInvalid: boolean) => ReactNode;\n  name: string;\n  separatorBottom?: boolean;\n  separatorTop?: boolean;\n}\nexport function SettingsErrorGroup({\n  children,\n  name,\n  separatorBottom = true,\n  separatorTop = true,\n}: Props) {\n  const {\n    formState: {errors},\n  } = useFormContext<Record<string, string>>();\n\n  const ref = useRef<HTMLDivElement>(null);\n  const error = errors[name];\n\n  useEffect(() => {\n    if (error) {\n      ref.current?.scrollIntoView({behavior: 'smooth'});\n    }\n  }, [error]);\n\n  return (\n    <div\n      className={clsx(\n        separatorBottom && 'border-b mb-20 pb-20',\n        separatorTop && 'border-t mt-20 pt-20',\n        error && 'border-y-error'\n      )}\n      ref={ref}\n    >\n      {children(!!error)}\n      {error && (\n        <div\n          className=\"text-danger text-sm mt-20\"\n          dangerouslySetInnerHTML={{__html: error.message!}}\n        />\n      )}\n    </div>\n  );\n}\n","import {useController} from 'react-hook-form';\nimport React, {useMemo} from 'react';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ChipField,\n  ChipValue,\n} from '../../ui/forms/input-field/chip-field/chip-field';\nimport {FormChipFieldProps} from '../../ui/forms/input-field/chip-field/form-chip-field';\n\nexport function JsonChipField({children, ...props}: FormChipFieldProps<any>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const arrayValue = useMemo(() => {\n    const mixedValue = value as string | string[];\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\n  }, [value]);\n\n  const formProps: Partial<FormChipFieldProps<ChipValue>> = {\n    onChange: newValue => {\n      const jsonValue = JSON.stringify(newValue.map(chip => chip.name));\n      onChange(jsonValue);\n    },\n    onBlur,\n    value: arrayValue,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return <ChipField ref={ref} {...mergeProps(formProps, props)} />;\n}\n","import React, {RefObject} from 'react';\n\nexport interface TabsContext {\n  selectedTab: number;\n  setSelectedTab: (newTab: number) => void;\n  tabsRef: RefObject<HTMLElement[]>;\n  size: 'sm' | 'md';\n  isLazy?: boolean;\n  id: string;\n}\n\nexport const TabContext = React.createContext<TabsContext>(null!);\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useControlledState} from '@react-stately/utils';\nimport {TabContext, TabsContext} from './tabs-context';\nimport {TabListProps} from './tab-list';\nimport {TabPanelsProps} from './tab-panels';\n\nexport interface TabsProps {\n  children: [ReactElement<TabListProps>, ReactElement<TabPanelsProps>];\n  size?: 'sm' | 'md';\n  className?: string;\n  selectedTab?: number;\n  defaultSelectedTab?: number;\n  onTabChange?: (newTab: number) => void;\n  isLazy?: boolean;\n  overflow?: string;\n}\n\nexport function Tabs(props: TabsProps) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden',\n  } = props;\n\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\n  const id = useId();\n\n  const [selectedTab, setSelectedTab] = useControlledState(\n    props.selectedTab,\n    props.defaultSelectedTab || 0,\n    props.onTabChange\n  );\n\n  const ContextValue: TabsContext = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id,\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n\n  return (\n    <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {TabContext} from './tabs-context';\n\ninterface TabLineStyle {\n  width?: string;\n  transform?: string;\n  className?: string;\n}\n\nexport function TabLine() {\n  const {tabsRef, selectedTab} = useContext(TabContext);\n  const [style, setStyle] = useState<TabLineStyle>({\n    width: undefined,\n    transform: undefined,\n    className: undefined,\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all',\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n\n  return (\n    <div\n      className={clsx(\n        'absolute bottom-0 left-0 h-2 bg-primary',\n        style.className\n      )}\n      role=\"presentation\"\n      style={{width: style.width, transform: style.transform}}\n    />\n  );\n}\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FocusScope} from '@react-aria/focus';\nimport {TabProps} from './tab';\nimport {TabLine} from './tab-line';\n\nexport interface TabListProps {\n  children: ReactNode;\n  // center tabs within tablist\n  center?: boolean;\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\n  expand?: boolean;\n  className?: string;\n}\nexport function TabList({children, center, expand, className}: TabListProps) {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <FocusScope>\n      <div\n        className={clsx(\n          // hide scrollbar completely on mobile, show compact one on desktop\n          'flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar',\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation=\"horizontal\"\n      >\n        {childrenArray.map((child, index) => {\n          if (isValidElement<TabProps>(child)) {\n            return cloneElement<TabProps>(child, {\n              index,\n              className: clsx(\n                child.props.className,\n                expand && 'flex-auto',\n                center && index === 0 && 'ml-auto',\n                center && index === childrenArray.length - 1 && 'mr-auto'\n              ),\n            });\n          }\n          return null;\n        })}\n        <TabLine />\n      </div>\n    </FocusScope>\n  );\n}\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\nimport {LinkProps} from 'react-router-dom';\n\nexport interface TabProps {\n  className?: string;\n  index?: number;\n  children: ReactNode;\n  isDisabled?: boolean;\n  padding?: string;\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  to?: LinkProps['to'];\n  relative?: LinkProps['relative'];\n  replace?: LinkProps['replace'];\n  width?: string;\n}\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n}: TabProps) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id,\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n\n  const mergedClassname = clsx(\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\n    width,\n    textColor({isDisabled, isSelected}),\n    className,\n    size === 'md' && `${padding} h-48`,\n    size === 'sm' && `${padding} h-32`,\n    isDisabled && 'pointer-events-none',\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n\n  return (\n    <Element\n      disabled={isDisabled}\n      id={`${id}-${index}-tab`}\n      aria-controls={`${id}-${index}-tabpanel`}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isSelected}\n      tabIndex={isDisabled ? undefined : tabIndex}\n      onKeyDown={onKeyDown}\n      onClick={() => {\n        setSelectedTab(index!);\n      }}\n      to={to}\n      relative={relative}\n      className={mergedClassname}\n      ref={(el: HTMLElement) => {\n        if (tabsRef.current && el) {\n          tabsRef.current[index!] = el;\n        }\n      }}\n    >\n      {children}\n    </Element>\n  );\n}\n\ninterface TextColorProps {\n  isDisabled?: boolean;\n  isSelected: boolean;\n}\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}\n","import React, {\n  Children,\n  cloneElement,\n  ComponentPropsWithoutRef,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport clsx from 'clsx';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\n\nexport interface TabPanelsProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function TabPanels({children, className}: TabPanelsProps) {\n  const {selectedTab, isLazy} = useContext(TabContext);\n\n  // filter out falsy values, in case of conditional rendering\n  const panelArray = Children.toArray(children).filter(p => !!p);\n\n  let rendered: ReactNode;\n  if (isLazy) {\n    const el = panelArray[selectedTab] as ReactElement;\n    rendered = isValidElement(el)\n      ? cloneElement<TabPanelProps>(panelArray[selectedTab] as ReactElement, {\n          index: selectedTab,\n        })\n      : null;\n  } else {\n    rendered = panelArray.map((panel, index) => {\n      if (isValidElement<TabPanelsProps>(panel)) {\n        const isSelected = index === selectedTab;\n        return cloneElement<TabPanelProps>(panel, {\n          index,\n          'aria-hidden': !isSelected,\n          className: !isSelected\n            ? clsx(panel.props.className, 'hidden')\n            : panel.props.className,\n        });\n      }\n      return null;\n    });\n  }\n\n  return <div className={className}>{rendered}</div>;\n}\n\ninterface TabPanelProps extends ComponentPropsWithoutRef<'div'> {\n  className?: string;\n  children: ReactNode;\n  index?: number;\n}\nexport function TabPanel({\n  className,\n  children,\n  index,\n  ...domProps\n}: TabPanelProps) {\n  const {id} = useContext(TabContext);\n\n  const [tabIndex, setTabIndex] = useState<number | undefined>(0);\n  const ref = useRef<HTMLDivElement>(null);\n\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  useLayoutEffect(() => {\n    if (ref?.current) {\n      const update = () => {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        const walker = getFocusableTreeWalker(ref.current!, {tabbable: true});\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      const observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled'],\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n\n  return (\n    <div\n      tabIndex={tabIndex}\n      ref={ref}\n      id={`${id}-${index}-tabpanel`}\n      aria-labelledby={`${id}-${index}-tab`}\n      className={clsx(className, 'focus-visible:outline-primary-light')}\n      role=\"tabpanel\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {SettingsPanel} from '../settings-panel';\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\nimport {SettingsSeparator} from '../settings-separator';\nimport {LearnMoreLink} from '../learn-more-link';\nimport {AdminSettings} from '../admin-settings';\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\nimport {SettingsErrorGroup} from '../settings-error-group';\nimport {JsonChipField} from '../json-chip-field';\nimport {Tabs} from '../../../ui/tabs/tabs';\nimport {TabList} from '../../../ui/tabs/tab-list';\nimport {Tab} from '../../../ui/tabs/tab';\nimport {TabPanel, TabPanels} from '../../../ui/tabs/tab-panels';\nimport {Trans} from '../../../i18n/trans';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {Fragment} from 'react';\n\nexport function SubscriptionSettings() {\n  const {trans} = useTrans();\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Subscriptions\" />}\n      description={\n        <Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />\n      }\n    >\n      <Tabs>\n        <TabList>\n          <Tab>\n            <Trans message=\"General\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Invoices\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-30\">\n          <TabPanel>\n            <FormSwitch\n              name=\"client.billing.enable\"\n              description={\n                <Trans message=\"Enable or disable all subscription related functionality across the site.\" />\n              }\n            >\n              <Trans message=\"Enable subscriptions\" />\n            </FormSwitch>\n            <SettingsSeparator />\n            <PaypalSection />\n            <StripeSection />\n            <SettingsSeparator />\n            <JsonChipField\n              label={<Trans message=\"Accepted cards\" />}\n              name=\"client.billing.accepted_cards\"\n              placeholder={trans({message: 'Add new card...'})}\n            />\n          </TabPanel>\n          <TabPanel>\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice address\" />}\n              name=\"client.billing.invoice.address\"\n              className=\"mb-30\"\n            />\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice notes\" />}\n              description={\n                <Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />\n              }\n              name=\"client.billing.invoice.notes\"\n            />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </SettingsPanel>\n  );\n}\n\nfunction PaypalSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\n  return (\n    <div className=\"mb-30\">\n      <FormSwitch\n        name=\"client.billing.paypal.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://support.vebto.com/help-center/articles/147/configuring-paypal\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"PayPal gateway\" />\n      </FormSwitch>\n      {paypalIsEnabled ? (\n        <SettingsErrorGroup name=\"paypal_group\">\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.paypal_client_id\"\n                label={<Trans message=\"PayPal Client ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_secret\"\n                label={<Trans message=\"PayPal Secret\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_webhook_id\"\n                label={<Trans message=\"PayPal Webhook ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormSwitch\n                name=\"client.billing.paypal_test_mode\"\n                invalid={isInvalid}\n                description={\n                  <div>\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\n                  </div>\n                }\n              >\n                <Trans message=\"PayPal test mode\" />\n              </FormSwitch>\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </div>\n  );\n}\n\nfunction StripeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const stripeEnabled = watch('client.billing.stripe.enable');\n  return (\n    <Fragment>\n      <FormSwitch\n        name=\"client.billing.stripe.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://support.vebto.com/help-center/articles/148/configuring-stripe\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"Stripe gateway\" />\n      </FormSwitch>\n      {stripeEnabled ? (\n        <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.stripe_key\"\n                label={<Trans message=\"Stripe publishable key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_secret\"\n                label={<Trans message=\"Stripe secret key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_webhook_secret\"\n                label={<Trans message=\"Stripe webhook signing secret\" />}\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </Fragment>\n  );\n}\n","import {FormSelect, Option} from '../../../ui/forms/select/select';\nimport {SettingsPanel} from '../settings-panel';\nimport {useValueLists} from '../../../http/value-lists';\nimport {Section} from '../../../ui/forms/listbox/section';\nimport {FormRadio} from '../../../ui/forms/radio-group/radio';\nimport {FormRadioGroup} from '../../../ui/forms/radio-group/radio-group';\nimport {DateFormatPresets, FormattedDate} from '../../../i18n/formatted-date';\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\nimport {Trans} from '../../../i18n/trans';\nimport {useCurrentDateTime} from '../../../i18n/use-current-date-time';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\n\nexport function LocalizationSettings() {\n  const {data} = useValueLists(['timezones', 'localizations']);\n  const today = useCurrentDateTime();\n  const {trans} = useTrans();\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Localization\" />}\n      description={\n        <Trans message=\"Configure global date, time and language settings.\" />\n      }\n    >\n      <FormSelect\n        className=\"mb-30\"\n        required\n        name=\"client.dates.default_timezone\"\n        showSearchField\n        selectionMode=\"single\"\n        label={<Trans message=\"Default timezone\" />}\n        searchPlaceholder={trans(message('Search timezones'))}\n        description={\n          <Trans message=\"Which timezone should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {Object.entries(data?.timezones || {}).map(([groupName, timezones]) => (\n          <Section key={groupName} label={groupName}>\n            {timezones.map(timezone => (\n              <Option key={timezone.value} value={timezone.value}>\n                {timezone.text}\n              </Option>\n            ))}\n          </Section>\n        ))}\n      </FormSelect>\n      <FormSelect\n        name=\"client.locale.default\"\n        className=\"mb-30\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default language\" />}\n        description={\n          <Trans message=\"Which localization should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {(data?.localizations || []).map(locale => (\n          <Option key={locale.language} value={locale.language} capitalizeFirst>\n            {locale.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormRadioGroup\n        required\n        className=\"mb-30\"\n        size=\"sm\"\n        name=\"client.dates.format\"\n        orientation=\"vertical\"\n        label={<Trans message=\"Date verbosity\" />}\n        description={\n          <Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />\n        }\n      >\n        <FormRadio key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </FormRadio>\n        {Object.entries(DateFormatPresets).map(([format, options]) => (\n          <FormRadio key={format} value={format}>\n            <FormattedDate date={today} options={options} />\n          </FormRadio>\n        ))}\n      </FormRadioGroup>\n      <FormSwitch\n        name=\"client.i18n.enable\"\n        description={\n          <Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />\n        }\n      >\n        <Trans message=\"Enable translations\" />\n      </FormSwitch>\n    </SettingsPanel>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {SettingsPanel} from '@common/admin/settings/settings-panel';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SettingsErrorGroup} from '@common/admin/settings/settings-error-group';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {SettingsSeparator} from '@common/admin/settings/settings-separator';\nimport {Button} from '@common/ui/buttons/button';\n\nexport function AuthenticationSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Authentication\" />}\n      description={\n        <Trans message=\"Configure registration, social login and related 3rd party integrations.\" />\n      }\n    >\n      <EmailConfirmationSection />\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.registration.disable\"\n        description={\n          <Trans message=\"All registration related functionality (including social login) will be disabled.\" />\n        }\n      >\n        <Trans message=\"Disable registration\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.single_device_login\"\n        description={\n          <Trans message=\"Only allow one device to be logged into user account at the same time.\" />\n        }\n      >\n        <Trans message=\"Single device login\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.social.compact_buttons\"\n        description={\n          <Trans message=\"Use compact design for social login buttons.\" />\n        }\n      >\n        <Trans message=\"Compact buttons\" />\n      </FormSwitch>\n      <EnvatoSection />\n      <GoogleSection />\n      <FacebookSection />\n      <TwitterSection />\n      <SettingsSeparator />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={3}\n        className=\"mt-24\"\n        name=\"client.auth.domain_blacklist\"\n        label={<Trans message=\"Domain blacklist\" />}\n        description={\n          <Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />\n        }\n      />\n    </SettingsPanel>\n  );\n}\n\nexport function MailNotSetupWarning() {\n  const {watch} = useFormContext<AdminSettings>();\n  const mailSetup = watch('server.mail_setup');\n  if (mailSetup) return null;\n\n  return (\n    <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\n      <Trans\n        message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\"\n        values={{\n          a: text => (\n            <Button\n              elementType={Link}\n              variant=\"outline\"\n              size=\"xs\"\n              display=\"flex\"\n              className=\"mt-10 max-w-max\"\n              to=\"/admin/settings/outgoing-email\"\n            >\n              {text}\n            </Button>\n          ),\n        }}\n      />\n    </p>\n  );\n}\n\nfunction EmailConfirmationSection() {\n  return (\n    <FormSwitch\n      className=\"mb-30\"\n      name=\"client.require_email_confirmation\"\n      description={\n        <Fragment>\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\n          <MailNotSetupWarning />\n        </Fragment>\n      }\n    >\n      <Trans message=\"Require email confirmation\" />\n    </FormSwitch>\n  );\n}\n\nfunction EnvatoSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const settings = useSettings();\n  const envatoLoginEnabled = watch('client.social.envato.enable');\n\n  if (!(settings as any).envato?.enable) return null;\n\n  return (\n    <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.envato.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via envato.\" />\n            }\n          >\n            <Trans message=\"Envato login\" />\n          </FormSwitch>\n          {!!envatoLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_id\"\n                label={<Trans message=\"Envato ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_secret\"\n                label={<Trans message=\"Envato secret\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_personal_token\"\n                label={<Trans message=\"Envato personal token\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction GoogleSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const googleLoginEnabled = watch('client.social.google.enable');\n\n  return (\n    <SettingsErrorGroup name=\"google_group\">\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.google.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via google.\" />\n            }\n          >\n            <Trans message=\"Google login\" />\n          </FormSwitch>\n          {!!googleLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.google_id\"\n                label={<Trans message=\"Google client ID\" />}\n                required\n              />\n              <FormTextField\n                className=\"mt-30\"\n                name=\"server.google_secret\"\n                label={<Trans message=\"Google client secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction FacebookSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\n\n  return (\n    <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.facebook.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via facebook.\" />\n            }\n          >\n            <Trans message=\"Facebook login\" />\n          </FormSwitch>\n          {!!facebookLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.facebook_id\"\n                label={<Trans message=\"Facebook app ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.facebook_secret\"\n                label={<Trans message=\"Facebook app secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction TwitterSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\n\n  return (\n    <SettingsErrorGroup\n      name=\"twitter_group\"\n      separatorTop={false}\n      separatorBottom={false}\n    >\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.twitter.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via twitter.\" />\n            }\n          >\n            <Trans message=\"Twitter login\" />\n          </FormSwitch>\n          {!!twitterLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.twitter_id\"\n                label={<Trans message=\"Twitter ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.twitter_secret\"\n                label={<Trans message=\"Twitter secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface SectionHelperProps {\n  title?: ReactNode;\n  description?: ReactNode;\n  actions?: ReactNode;\n  color?: 'positive' | 'danger' | 'warning' | 'primary' | 'neutral';\n  className?: string;\n}\nexport function SectionHelper({\n  title,\n  description,\n  actions,\n  color = 'primary',\n  className,\n}: SectionHelperProps) {\n  return (\n    <div\n      className={clsx(\n        className,\n        'p-10 rounded',\n        color === 'positive' &&\n          'bg-positive/focus border-l-positive border-l-4',\n        color === 'warning' && 'bg-warning/focus border-l-warning border-l-4',\n        color === 'danger' && 'bg-danger/focus border-l-danger border-l-4',\n        color === 'primary' && 'bg-primary/focus border-l-primary border-l-4',\n        color === 'neutral' && 'bg-paper border'\n      )}\n    >\n      {title && <div className=\"text-sm mb-4 font-medium\">{title}</div>}\n      {description && <div className=\"text-sm\">{description}</div>}\n      {actions && <div className=\"mt-14\">{actions}</div>}\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchMaxServerUploadSizeResponse extends BackendResponse {\n  maxSize: string;\n}\n\nfunction fetchMaxServerUploadSize(): Promise<FetchMaxServerUploadSizeResponse> {\n  return apiClient\n    .get('uploads/server-max-file-size')\n    .then(response => response.data);\n}\n\nexport function useMaxServerUploadSize() {\n  return useQuery({\n    queryKey: ['MaxServerUploadSize'],\n    queryFn: () => fetchMaxServerUploadSize(),\n  });\n}\n","export const spaceUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\n","export type SpaceUnit = 'KB' | 'MB' | 'GB' | 'TB' | 'PB';\n\nexport function convertToBytes(value: number, unit: SpaceUnit): number {\n  if (value == null) return 0;\n  switch (unit) {\n    case 'KB':\n      return value * 1024;\n    case 'MB':\n      return value * 1024 ** 2;\n    case 'GB':\n      return value * 1024 ** 3;\n    case 'TB':\n      return value * 1024 ** 4;\n    case 'PB':\n      return value * 1024 ** 5;\n    default:\n      return value;\n  }\n}\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useEffect, useState} from 'react';\nimport memoize from 'nano-memoize';\nimport {\n  FormTextFieldProps,\n  TextField,\n  TextFieldProps,\n} from './text-field/text-field';\nimport {prettyBytes} from '../../../uploads/utils/pretty-bytes';\nimport {Option, Select} from '../select/select';\nimport {spaceUnits} from '../../../uploads/utils/space-units';\nimport {\n  convertToBytes,\n  SpaceUnit,\n} from '../../../uploads/utils/convert-to-bytes';\n\n// 99TB\nconst MaxValue = 108851651149824;\n\nexport const FormFileSizeField = React.forwardRef<\n  HTMLDivElement,\n  FormTextFieldProps\n>(({name, ...props}, ref) => {\n  const {\n    field: {\n      onChange: setByteValue,\n      onBlur,\n      value: byteValue = '',\n      ref: inputRef,\n    },\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [liveValue, setLiveValue] = useState<number | string>('');\n  const [unit, setUnit] = useState<SpaceUnit | string>('MB');\n\n  useEffect(() => {\n    if (byteValue == null || byteValue === '') {\n      setLiveValue('');\n      return;\n    }\n    const {amount, unit: newUnit} = fromBytes({\n      bytes: Math.min(byteValue, MaxValue),\n    });\n    setUnit(newUnit || 'MB');\n    setLiveValue(Number.isNaN(amount) ? '' : amount);\n  }, [byteValue, unit]);\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      const value = parseInt(e.target.value);\n      if (Number.isNaN(value)) {\n        setByteValue(value);\n      } else {\n        const newBytes = convertToBytes(\n          parseInt(e.target.value),\n          unit as SpaceUnit\n        );\n        setByteValue(newBytes);\n      }\n    },\n    onBlur,\n    value: liveValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef,\n  };\n\n  const unitSelect = (\n    <Select\n      minWidth=\"min-w-80\"\n      selectionMode=\"single\"\n      selectedValue={unit}\n      disabled={!byteValue}\n      onSelectionChange={newUnit => {\n        const newBytes = convertToBytes(\n          (liveValue || 0) as number,\n          newUnit as SpaceUnit\n        );\n        setByteValue(newBytes);\n      }}\n    >\n      {spaceUnits.slice(0, 5).map(u => (\n        <Option value={u} key={u}>\n          {u === 'B' ? 'Bytes' : u}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <TextField\n      {...mergeProps(formProps, props)}\n      type=\"number\"\n      ref={ref}\n      endAppend={unitSelect}\n    />\n  );\n});\n\nconst fromBytes = memoize(\n  ({bytes}: {bytes: number}): {amount: number | string; unit: SpaceUnit} => {\n    const pretty = prettyBytes(bytes);\n    if (!pretty) return {amount: '', unit: 'MB'};\n    let amount = parseInt(pretty.split(' ')[0]);\n    // get rid of any punctuation\n    amount = Math.round(amount);\n    return {amount, unit: pretty.split(' ')[1] as SpaceUnit};\n  }\n);\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../../http/query-client';\nimport {useTrans} from '../../../../i18n/use-trans';\nimport {BackendResponse} from '../../../../http/backend-response/backend-response';\nimport {showHttpErrorToast} from '../../../../utils/http/show-http-error-toast';\nimport {message} from '../../../../i18n/message';\nimport {toast} from '../../../../ui/toast/toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUploadS3Cors() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => uploadCors(),\n    onSuccess: () => {\n      toast(trans(message('CORS file updated')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction uploadCors(): Promise<Response> {\n  return apiClient.post('s3/cors/upload').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../../../http/query-client';\nimport {BackendResponse} from '../../../../../http/backend-response/backend-response';\nimport {showHttpErrorToast} from '../../../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  refreshToken: string;\n}\n\ninterface Payload {\n  app_key: string;\n  app_secret: string;\n  access_code: string;\n}\n\nexport function useGenerateDropboxRefreshToken() {\n  return useMutation({\n    mutationFn: (props: Payload) => generateToken(props),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction generateToken(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('settings/uploading/dropbox-refresh-token', payload)\n    .then(r => r.data);\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '../../../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../../../i18n/trans';\nimport {CredentialFormProps} from '../uploading-settings';\nimport {Button} from '../../../../../ui/buttons/button';\nimport {Dialog} from '../../../../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../../../ui/overlays/dialog/dialog-body';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {Form} from '../../../../../ui/forms/form';\nimport {DialogTrigger} from '../../../../../ui/overlays/dialog/dialog-trigger';\nimport {AdminSettings} from '../../../admin-settings';\nimport {DialogFooter} from '../../../../../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../../../../../ui/overlays/dialog/dialog-context';\nimport {useGenerateDropboxRefreshToken} from './use-generate-dropbox-refresh-token';\n\nexport function DropboxForm({isInvalid}: CredentialFormProps) {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const appKey = watch('server.storage_dropbox_app_key');\n  const appSecret = watch('server.storage_dropbox_app_secret');\n\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_key\"\n        label={<Trans message=\"Dropbox application key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_secret\"\n        label={<Trans message=\"Dropbox application secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_refresh_token\"\n        label={<Trans message=\"Dropbox refresh token\" />}\n        required\n      />\n      <DialogTrigger\n        type=\"modal\"\n        onClose={refreshToken => {\n          if (refreshToken) {\n            setValue('server.storage_dropbox_refresh_token', refreshToken);\n          }\n        }}\n      >\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          disabled={!appKey || !appSecret}\n        >\n          <Trans message=\"Get dropbox refresh token\" />\n        </Button>\n        <DropboxRefreshTokenDialog appKey={appKey!} appSecret={appSecret!} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface DropboxRefreshTokenDialogProps {\n  appKey: string;\n  appSecret: string;\n}\nfunction DropboxRefreshTokenDialog({\n  appKey,\n  appSecret,\n}: DropboxRefreshTokenDialogProps) {\n  const form = useForm<{accessCode: string}>();\n  const {formId, close} = useDialogContext();\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Connected dropbox account\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={data => {\n            generateRefreshToken.mutate(\n              {\n                app_key: appKey,\n                app_secret: appSecret,\n                access_code: data.accessCode,\n              },\n              {\n                onSuccess: response => {\n                  close(response.refreshToken);\n                },\n              },\n            );\n          }}\n        >\n          <div className=\"mb-20 pb-20 border-b\">\n            <div className=\"text-muted text-sm mb-10\">\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\n            </div>\n            <Button\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n              elementType=\"a\"\n              target=\"_blank\"\n              href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}\n            >\n              <Trans message=\"Get access code\" />\n            </Button>\n          </div>\n          <FormTextField\n            name=\"accessCode\"\n            label={<Trans message=\"Dropbox access code\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          form={formId}\n          type=\"submit\"\n          disabled={!appKey || !appSecret || generateRefreshToken.isPending}\n        >\n          <Trans message=\"Connect\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {SettingsPanel} from '../../settings-panel';\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\nimport {AdminSettings} from '../../admin-settings';\nimport {SettingsErrorGroup} from '../../settings-error-group';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {FormRadioGroup} from '@common/ui/forms/radio-group/radio-group';\nimport {FormRadio} from '@common/ui/forms/radio-group/radio';\nimport {SectionHelper} from '@common/ui/section-helper';\nimport {useMaxServerUploadSize} from './max-server-upload-size';\nimport {SettingsSeparator} from '../../settings-separator';\nimport {JsonChipField} from '../../json-chip-field';\nimport {FormFileSizeField} from '@common/ui/forms/input-field/file-size-field';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment} from 'react';\nimport {useUploadS3Cors} from './use-upload-s3-cors';\nimport {Button} from '@common/ui/buttons/button';\nimport {DropboxForm} from './dropbox-form/dropbox-form';\nimport {useAdminSettings} from '../../requests/use-admin-settings';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\n\nexport function UploadingSettings() {\n  const {trans} = useTrans();\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Uploading\" />}\n      description={\n        <Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />\n      }\n    >\n      <PrivateUploadSection />\n      <PublicUploadSection />\n      <CredentialsSection />\n      <SettingsErrorGroup name=\"static_delivery_group\">\n        {isInvalid => (\n          <FormRadioGroup\n            invalid={isInvalid}\n            size=\"sm\"\n            name=\"server.static_file_delivery\"\n            orientation=\"vertical\"\n            label={<Trans message=\"File delivery optimization\" />}\n            description={\n              <Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />\n            }\n          >\n            <FormRadio value=\"\">\n              <Trans message=\"None\" />\n            </FormRadio>\n            <FormRadio value=\"xsendfile\">\n              <Trans message=\"X-Sendfile (Apache)\" />\n            </FormRadio>\n            <FormRadio value=\"xaccel\">\n              <Trans message=\"X-Accel (Nginx)\" />\n            </FormRadio>\n          </FormRadioGroup>\n        )}\n      </SettingsErrorGroup>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"client.uploads.chunk_size\"\n        min={1}\n        label={<Trans message=\"Chunk size\" />}\n        placeholder=\"Infinity\"\n        description={\n          <Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />\n        }\n      />\n      <MaxUploadSizeSection />\n      <SettingsSeparator />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.max_size\"\n        className=\"mb-30\"\n        label={<Trans message=\"Maximum file size\" />}\n        description={\n          <Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />\n        }\n      />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.available_space\"\n        className=\"mb-30\"\n        label={<Trans message=\"Available space\" />}\n        description={\n          <Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.allowed_extensions\"\n        className=\"mb-30\"\n        label={<Trans message=\"Allowed extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.blocked_extensions\"\n        label={<Trans message=\"Blocked extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />\n        }\n      />\n    </SettingsPanel>\n  );\n}\n\nfunction MaxUploadSizeSection() {\n  const {data} = useMaxServerUploadSize();\n  return (\n    <SectionHelper\n      color=\"warning\"\n      description={\n        <Trans\n          message=\"Maximum upload size on your server currently is set to <b>:size</b>\"\n          values={{size: data?.maxSize, b: chunks => <b>{chunks}</b>}}\n        />\n      }\n    />\n  );\n}\n\nfunction PrivateUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.uploads_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      className=\"mb-30\"\n      selectionMode=\"single\"\n      name=\"server.uploads_disk_driver\"\n      label={<Trans message=\"User Uploads Storage Method\" />}\n      description={\n        <Trans message=\"Where should user private file uploads be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Option value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Option>\n      <Option value=\"ftp\">FTP</Option>\n      <Option value=\"digitalocean_s3\">DigitalOcean Spaces</Option>\n      <Option value=\"backblaze_s3\">Backblaze</Option>\n      <Option value=\"s3\">Amazon S3 (Or compatible service)</Option>\n      <Option value=\"dropbox\">Dropbox</Option>\n      <Option value=\"rackspace\">Rackspace</Option>\n    </FormSelect>\n  );\n}\n\nfunction PublicUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.public_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      label={<Trans message=\"Public Uploads Storage Method\" />}\n      selectionMode=\"single\"\n      name=\"server.public_disk_driver\"\n      description={\n        <Trans message=\"Where should user public uploads (like avatars) be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Option value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Option>\n      <Option value=\"s3\">Amazon S3</Option>\n      <Option value=\"ftp\">FTP</Option>\n      <Option value=\"digitalocean_s3\">DigitalOcean Spaces</Option>\n      <Option value=\"backblaze_s3\">Backblaze</Option>\n    </FormSelect>\n  );\n}\n\nfunction CredentialsSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const drives = [\n    watch('server.uploads_disk_driver'),\n    watch('server.public_disk_driver'),\n  ];\n\n  if (drives[0] === 'local' && drives[1] === 'local') {\n    return null;\n  }\n\n  return (\n    <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\n      {isInvalid => {\n        if (drives.includes('s3')) {\n          return <S3Form isInvalid={isInvalid} />;\n        }\n        if (drives.includes('ftp')) {\n          return <FtpForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('dropbox')) {\n          return <DropboxForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('digitalocean_s3')) {\n          return <DigitalOceanForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('backblaze_s3')) {\n          return <BackblazeForm isInvalid={isInvalid} />;\n        }\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\nexport interface CredentialFormProps {\n  isInvalid: boolean;\n}\nfunction S3Form({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_key\"\n        label={<Trans message=\"Amazon S3 key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_secret\"\n        label={<Trans message=\"Amazon S3 secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_region\"\n        label={<Trans message=\"Amazon S3 region\" />}\n        pattern=\"[a-z1-9\\-]+\"\n        placeholder=\"us-east-1\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_bucket\"\n        label={<Trans message=\"Amazon S3 bucket\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.storage_s3_endpoint\"\n        label={<Trans message=\"Amazon S3 endpoint\" />}\n        description={\n          <Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />\n        }\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction DigitalOceanForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_key\"\n        label={<Trans message=\"DigitalOcean key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_secret\"\n        label={<Trans message=\"DigitalOcean secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_region\"\n        label={<Trans message=\"DigitalOcean region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-east-1\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_bucket\"\n        label={<Trans message=\"DigitalOcean bucket\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction BackblazeForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_key\"\n        label={<Trans message=\"Backblaze KeyID\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_secret\"\n        label={<Trans message=\"Backblaze applicationKey\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_region\"\n        label={<Trans message=\"Backblaze Region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-west-002\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_bucket\"\n        label={<Trans message=\"Backblaze bucket name\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\ninterface S3DirectUploadFieldProps {\n  invalid: boolean;\n}\nfunction S3DirectUploadField({invalid}: S3DirectUploadFieldProps) {\n  const uploadCors = useUploadS3Cors();\n  const {data: defaultSettings} = useAdminSettings();\n\n  const s3DriverEnabled =\n    defaultSettings?.server.uploads_disk_driver?.endsWith('s3') ||\n    defaultSettings?.server.public_disk_driver?.endsWith('s3');\n\n  return (\n    <Fragment>\n      <FormSwitch\n        className=\"mt-30\"\n        invalid={invalid}\n        name=\"client.uploads.s3_direct_upload\"\n        description={\n          <div>\n            <p>\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\n            </p>\n            <p className=\"mt-10\">\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\n            </p>\n          </div>\n        }\n      >\n        <Trans message=\"Direct upload\" />\n      </FormSwitch>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        className=\"mt-20\"\n        onClick={() => {\n          uploadCors.mutate();\n        }}\n        disabled={!s3DriverEnabled || uploadCors.isPending}\n      >\n        <Trans message=\"Configure CORS\" />\n      </Button>\n    </Fragment>\n  );\n}\n\nfunction FtpForm({isInvalid}: CredentialFormProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_host\"\n        label={<Trans message=\"FTP hostname\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_username\"\n        label={<Trans message=\"FTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_password\"\n        label={<Trans message=\"FTP password\" />}\n        type=\"password\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_root\"\n        label={<Trans message=\"FTP directory\" />}\n        placeholder=\"/\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_port\"\n        label={<Trans message=\"FTP port\" />}\n        type=\"number\"\n        min={0}\n        placeholder=\"21\"\n      />\n      <FormSwitch\n        invalid={isInvalid}\n        name=\"server.storage_ftp_passive\"\n        className=\"mb-30\"\n      >\n        <Trans message=\"Passive\" />\n      </FormSwitch>\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\n        <Trans message=\"SSL\" />\n      </FormSwitch>\n    </>\n  );\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../../i18n/trans';\n\nexport interface MailgunCredentialsProps {\n  isInvalid: boolean;\n}\nexport function MailgunCredentials({isInvalid}: MailgunCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_domain\"\n        label={<Trans message=\"Mailgun domain\" />}\n        description={\n          <Trans message=\"Usually the domain of your site (site.com)\" />\n        }\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_secret\"\n        label={<Trans message=\"Mailgun API key\" />}\n        description={<Trans message=\"Should start with `key-`\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.mailgun_endpoint\"\n        label={<Trans message=\"Mailgun endpoint\" />}\n        description={\n          <Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />\n        }\n        placeholder=\"api.eu.mailgun.net\"\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../../i18n/trans';\n\nexport interface SmtpCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SmtpCredentials({isInvalid}: SmtpCredentialsProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_host\"\n        label={<Trans message=\"SMTP host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_username\"\n        label={<Trans message=\"SMTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"password\"\n        name=\"server.mail_password\"\n        label={<Trans message=\"SMTP password\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"number\"\n        name=\"server.mail_port\"\n        label={<Trans message=\"SMTP port\" />}\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_encryption\"\n        label={<Trans message=\"SMTP encryption\" />}\n      />\n    </>\n  );\n}\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../../i18n/trans';\nimport {Fragment} from 'react';\n\nexport interface SesCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SesCredentials({isInvalid}: SesCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_key\"\n        label={<Trans message=\"SES key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_secret\"\n        label={<Trans message=\"SES secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.ses_region\"\n        label={<Trans message=\"SES region\" />}\n        placeholder=\"us-east-1\"\n        required\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../../i18n/trans';\n\nexport interface PostmarkCredentialsProps {\n  isInvalid: boolean;\n}\nexport function PostmarkCredentials({isInvalid}: PostmarkCredentialsProps) {\n  return (\n    <FormTextField\n      invalid={isInvalid}\n      name=\"server.postmark_token\"\n      label={<Trans message=\"Postmark token\" />}\n      required\n    />\n  );\n}\n","import {createSvgIcon} from '../../../../icons/create-svg-icon';\n\nexport const GmailIcon = createSvgIcon(\n  [\n    <path\n      key=\"0\"\n      fill=\"#4caf50\"\n      d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\n    />,\n    <path\n      key=\"1\"\n      fill=\"#1e88e5\"\n      d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\n    />,\n    <polygon\n      key=\"2\"\n      fill=\"#e53935\"\n      points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\n    />,\n    <path\n      key=\"3\"\n      fill=\"#c62828\"\n      d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\n    />,\n    <path\n      key=\"4\"\n      fill=\"#fbc02d\"\n      d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\n    />,\n  ],\n  'Gmail',\n  '0 0 48 48'\n);\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../../admin-settings';\nimport {useSocialLogin} from '../../../../auth/requests/use-social-login';\nimport {toast} from '../../../../ui/toast/toast';\nimport {message} from '../../../../i18n/message';\nimport {Button} from '../../../../ui/buttons/button';\nimport {GmailIcon} from './gmail-icon';\nimport {Trans} from '../../../../i18n/trans';\nimport {Fragment} from 'react';\n\nexport function ConnectGmailPanel() {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const {connectSocial} = useSocialLogin();\n  const connectedEmail = watch('server.connectedGmailAccount');\n\n  const handleGmailConnect = async () => {\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\n    if (e?.status === 'SUCCESS') {\n      const email = (e.callbackData as any).profile.email;\n      setValue('server.connectedGmailAccount', email);\n      toast(message('Connected gmail account: :email', {values: {email}}));\n    }\n  };\n\n  const connectButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      startIcon={<GmailIcon />}\n      onClick={() => {\n        handleGmailConnect();\n      }}\n    >\n      <Trans message=\"Connect gmail account\" />\n    </Button>\n  );\n\n  const reconnectPanel = (\n    <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\n      <GmailIcon size=\"lg\" />\n      {connectedEmail}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        className=\"ml-auto\"\n        onClick={() => {\n          handleGmailConnect();\n        }}\n      >\n        <Trans message=\"Reconnect\" />\n      </Button>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Gmail account\" />\n      </div>\n      {connectedEmail ? reconnectPanel : connectButton}\n    </Fragment>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../../admin-settings';\nimport {ComponentType, Fragment} from 'react';\nimport {MailgunCredentials} from './mailgun-credentials';\nimport {SmtpCredentials} from './smtp-credentials';\nimport {SesCredentials} from './ses-credentials';\nimport {PostmarkCredentials} from './postmark-credentials';\nimport {ConnectGmailPanel} from './connect-gmail-panel';\nimport {SettingsErrorGroup} from '../../settings-error-group';\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\nimport {Trans} from '../../../../i18n/trans';\nimport {LearnMoreLink} from '../../learn-more-link';\n\nexport function OutgoingMailGroup() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n\n  const selectedDriver = watch('server.mail_driver');\n  const credentialForms: ComponentType<{isInvalid: boolean}>[] = [];\n\n  if (selectedDriver === 'mailgun') {\n    credentialForms.push(MailgunCredentials);\n  }\n  if (selectedDriver === 'smtp') {\n    credentialForms.push(SmtpCredentials);\n  }\n  if (selectedDriver === 'ses') {\n    credentialForms.push(SesCredentials);\n  }\n  if (selectedDriver === 'postmark') {\n    credentialForms.push(PostmarkCredentials);\n  }\n  if (selectedDriver === 'gmailApi') {\n    credentialForms.push(ConnectGmailPanel);\n  }\n\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"mail_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            onSelectionChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            selectionMode=\"single\"\n            name=\"server.mail_driver\"\n            label={<Trans message=\"Outgoing mail method\" />}\n            description={\n              <div>\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\n                <LearnMoreLink\n                  className=\"mt-8\"\n                  link=\"https://support.vebto.com/help-center/articles/42/44/155/incoming-emails\"\n                />\n              </div>\n            }\n          >\n            <Option value=\"mailgun\">Mailgun</Option>\n            <Option value=\"gmailApi\">Gmail Api</Option>\n            <Option value=\"smtp\">SMTP</Option>\n            <Option value=\"postmark\">Postmark</Option>\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\n            <Option value=\"sendmail\">SendMail</Option>\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\n          </FormSelect>\n          {credentialForms.length ? (\n            <div className=\"mt-30\">\n              {credentialForms.map((CredentialsForm, index) => (\n                <CredentialsForm key={index} isInvalid={isInvalid} />\n              ))}\n            </div>\n          ) : null}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {SettingsPanel} from '../../settings-panel';\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {ExternalLink} from '../../../../ui/buttons/external-link';\nimport {SectionHelper} from '../../../../ui/section-helper';\nimport {SettingsSeparator} from '../../settings-separator';\nimport {Trans} from '../../../../i18n/trans';\nimport {OutgoingMailGroup} from './outgoing-mail-group';\nimport {useSettings} from '../../../../core/settings/use-settings';\n\nexport function OutgoingEmailSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Outgoing email settings\" />}\n      description={\n        <Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />\n      }\n    >\n      <FormTextField\n        id=\"outgoing-emails\"\n        className=\"mb-30\"\n        type=\"email\"\n        name=\"server.mail_from_address\"\n        label={<Trans message=\"From address\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent from this email address.\" />\n        }\n        required\n      />\n      <ContactAddressSection />\n      <FormTextField\n        className=\"mb-30\"\n        name=\"server.mail_from_name\"\n        label={<Trans message=\"From name\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent using this name.\" />\n        }\n        required\n      />\n      <SectionHelper\n        color=\"warning\"\n        description={\n          <Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />\n        }\n      />\n      <SettingsSeparator />\n      <OutgoingMailGroup />\n    </SettingsPanel>\n  );\n}\n\nfunction ContactAddressSection() {\n  const {base_url} = useSettings();\n  const contactPageUrl = `${base_url}/contact`;\n  const link = (\n    <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>\n  );\n  return (\n    <FormTextField\n      className=\"mb-30\"\n      type=\"email\"\n      name=\"client.mail.contact_page_address\"\n      label={<Trans message=\"Contact page address\" />}\n      description={\n        <Trans\n          values={{\n            contactPageUrl: link,\n          }}\n          message=\"Where emails from :contactPageUrl page should be sent to.\"\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '../../../../ui/toast/toast';\nimport {BackendResponse} from '../../../../http/backend-response/backend-response';\nimport {message} from '../../../../i18n/message';\nimport {apiClient} from '../../../../http/query-client';\nimport {showHttpErrorToast} from '../../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nfunction clearCache(): Promise<Response> {\n  return apiClient.post('cache/flush').then(r => r.data);\n}\n\nexport function useClearCache() {\n  return useMutation({\n    mutationFn: () => clearCache(),\n    onSuccess: () => {\n      toast(message('Cache cleared'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useFormContext} from 'react-hook-form';\nimport {ComponentType} from 'react';\nimport {SettingsPanel} from '../../settings-panel';\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\nimport {SettingsErrorGroup} from '../../settings-error-group';\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\nimport {AdminSettings} from '../../admin-settings';\nimport {useClearCache} from './clear-cache';\nimport {Button} from '../../../../ui/buttons/button';\nimport {SectionHelper} from '../../../../ui/section-helper';\nimport {Trans} from '../../../../i18n/trans';\n\nexport function CacheSettings() {\n  const clearCache = useClearCache();\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Cache settings\" />}\n      description={\n        <Trans message=\"Select cache provider and manually clear cache.\" />\n      }\n    >\n      <CacheSelect />\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={clearCache.isPending}\n        onClick={() => {\n          clearCache.mutate();\n        }}\n      >\n        <Trans message=\"Clear cache\" />\n      </Button>\n      <SectionHelper\n        color=\"warning\"\n        className=\"mt-30\"\n        description={\n          <Trans\n            message={\n              '\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'\n            }\n          />\n        }\n      />\n    </SettingsPanel>\n  );\n}\n\nfunction CacheSelect() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const cacheDriver = watch('server.cache_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (cacheDriver === 'memcached') {\n    CredentialSection = MemcachedCredentials;\n  }\n\n  return (\n    <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => {\n                clearErrors();\n              }}\n              selectionMode=\"single\"\n              name=\"server.cache_driver\"\n              label={<Trans message=\"Cache method\" />}\n              description={\n                <Trans message=\"Which method should be used for storing and retrieving cached items.\" />\n              }\n            >\n              <Option value=\"file\">\n                <Trans message=\"File (Default)\" />\n              </Option>\n              <Option value=\"array\">\n                <Trans message=\"None\" />\n              </Option>\n              <Option value=\"apc\">APC</Option>\n              <Option value=\"memcached\">Memcached</Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction MemcachedCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.memcached_host\"\n        label={<Trans message=\"Memcached host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        type=\"number\"\n        name=\"server.memcached_port\"\n        label={<Trans message=\"Memcached port\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {SettingsPanel} from '@common/admin/settings/settings-panel';\nimport {SettingsErrorGroup} from '@common/admin/settings/settings-error-group';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SectionHelper} from '@common/ui/section-helper';\nimport {ExternalLink} from '@common/ui/buttons/external-link';\nimport {Trans} from '@common/i18n/trans';\n\nexport function LoggingSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Error logging\" />}\n      description={\n        <Trans message=\"Configure site error logging and related 3rd party integrations.\" />\n      }\n    >\n      <SentrySection />\n      <SectionHelper\n        className=\"mt-30\"\n        color=\"positive\"\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\n              ),\n            }}\n            message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\"\n          />\n        }\n      />\n    </SettingsPanel>\n  );\n}\n\nfunction SentrySection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"logging_group\"\n    >\n      {isInvalid => {\n        return (\n          <FormTextField\n            onChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            name=\"server.sentry_dsn\"\n            type=\"url\"\n            minLength={30}\n            label={<Trans message=\"Sentry DSN\" />}\n          />\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {ComponentType} from 'react';\nimport {SettingsPanel} from '../settings-panel';\nimport {SettingsErrorGroup} from '../settings-error-group';\nimport {SectionHelper} from '../../../ui/section-helper';\nimport {AdminSettings} from '../admin-settings';\nimport {FormSelect, Option} from '../../../ui/forms/select/select';\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../i18n/trans';\n\nexport function QueueSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Queue\" />}\n      description={\n        <Trans message=\"Select active queue method and enter related 3rd party API keys.\" />\n      }\n    >\n      <SectionHelper\n        color=\"positive\"\n        className=\"mb-30\"\n        description={\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. Deferring these tasks can speed up web requests to the application.\" />\n        }\n      />\n      <SectionHelper\n        color=\"warning\"\n        className=\"mb-30\"\n        description={\n          <Trans message=\"All methods except sync require additional setup, which should be performed before changing the queue method. Consult documentation for more information.\" />\n        }\n      />\n      <DriverSection />\n    </SettingsPanel>\n  );\n}\n\nfunction DriverSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const queueDriver = watch('server.queue_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (queueDriver === 'sqs') {\n    CredentialSection = SqsCredentials;\n  }\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"queue_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => {\n                clearErrors();\n              }}\n              selectionMode=\"single\"\n              name=\"server.queue_driver\"\n              label={<Trans message=\"Queue method\" />}\n              required\n            >\n              <Option value=\"sync\">\n                <Trans message=\"Sync (Default)\" />\n              </Option>\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\n              <Option value=\"database\">\n                <Trans message=\"Database\" />\n              </Option>\n              <Option value=\"sqs\">\n                <Trans message=\"SQS (Amazon simple queue service)\" />\n              </Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction SqsCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_key\"\n        label={<Trans message=\"SQS queue key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_secret\"\n        label={<Trans message=\"SQS queue secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_prefix\"\n        label={<Trans message=\"SQS queue prefix\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_name\"\n        label={<Trans message=\"SQS queue name\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_region\"\n        label={<Trans message=\"SQS queue region\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {useContext} from 'react';\nimport {SettingsPanel} from '../settings-panel';\nimport {SettingsErrorGroup} from '../settings-error-group';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Trans} from '@common/i18n/trans';\n\nexport function RecaptchaSettings() {\n  const {settings} = useContext(SiteConfigContext);\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Recaptcha\" />}\n      description={\n        <Trans message=\"Configure google recaptcha integration and credentials.\" />\n      }\n    >\n      {settings?.showRecaptchaLinkSwitch && (\n        <FormSwitch\n          className=\"mb-30\"\n          name=\"client.recaptcha.enable.link_creation\"\n          description={\n            <Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />\n          }\n        >\n          <Trans message=\"Link creation\" />\n        </FormSwitch>\n      )}\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.contact\"\n        description={\n          <Trans\n            message={'Enable recaptcha integration for \"contact us\" page.'}\n          />\n        }\n      >\n        <Trans message=\"Contact page\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.register\"\n        description={\n          <Trans message=\"Enable recaptcha integration for registration page.\" />\n        }\n      >\n        <Trans message=\"Registration page\" />\n      </FormSwitch>\n      <RecaptchaSection />\n    </SettingsPanel>\n  );\n}\n\nfunction RecaptchaSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"recaptcha_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormTextField\n              className=\"mb-30\"\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.site_key\"\n              label={<Trans message=\"Recaptcha v3 site key\" />}\n            />\n            <FormTextField\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.secret_key\"\n              label={<Trans message=\"Recaptcha v3 secret key\" />}\n            />\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import React, {ChangeEventHandler} from 'react';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {useController} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {BaseFieldProps} from './base-field-props';\nimport {useField} from './use-field';\nimport {getInputFieldClassNames} from './get-input-field-class-names';\nimport {Field} from './field';\nimport {TextFieldProps} from './text-field/text-field';\n\nexport interface FileFieldProps\n  extends Omit<BaseFieldProps, 'type'> {\n  onChange?: ChangeEventHandler<'input'>;\n  accept?: string;\n}\nexport const FileField = React.forwardRef<HTMLInputElement, FileFieldProps>(\n  (props, ref) => {\n    const inputRef = useObjectRef(ref);\n\n    const {fieldProps, inputProps} = useField({...props, focusRef: inputRef});\n\n    const inputFieldClassNames = getInputFieldClassNames(props);\n\n    return (\n      <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\n        <input\n          type=\"file\"\n          ref={inputRef}\n          {...inputProps as any}\n          className={clsx(\n            inputFieldClassNames.input,\n            'py-8',\n            'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10'\n          )}\n        />\n      </Field>\n    );\n  }\n);\n\nexport interface FormFileFieldProps extends FileFieldProps {\n  name: string;\n}\nexport function FormFileField({name, ...props}: FormFileFieldProps) {\n  const {\n    field: {onChange, onBlur, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [value, setValue] = React.useState('');\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      onChange(e.target.files?.[0]);\n      setValue(e.target.value);\n    },\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\n}\n","import {useFormContext} from 'react-hook-form';\nimport {SettingsPanel} from '../settings-panel';\nimport {SettingsErrorGroup} from '../settings-error-group';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormFileField} from '@common/ui/forms/input-field/file-field';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment} from 'react';\n\nexport function ReportsSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"Analytics\" />}\n      description={\n        <Trans message=\"Configure google analytics integration and credentials.\" />\n      }\n    >\n      <AnalyticsSection />\n    </SettingsPanel>\n  );\n}\n\nfunction AnalyticsSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"analytics_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormFileField\n            className=\"mb-30\"\n            onChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            name=\"files.certificate\"\n            accept=\".json\"\n            label={<Trans message=\"Google service account key file (.json)\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            name=\"server.analytics_property_id\"\n            type=\"number\"\n            label={<Trans message=\"Google analytics property ID\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            name=\"client.analytics.tracking_code\"\n            placeholder=\"G-******\"\n            min=\"1\"\n            max=\"20\"\n            description={\n              <Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />\n            }\n            label={<Trans message=\"Google tag manager measurement ID\" />}\n          />\n          <FormTextField\n            name=\"client.analytics.gchart_api_key\"\n            label={<Trans message=\"Google maps javascript API key\" />}\n            description={\n              <Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />\n            }\n          />\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@common/auth/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface UpdateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n  id: number;\n}\n\nexport function useUpdateUser(form: UseFormReturn<UpdateUserPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (props: UpdateUserPayload) => updateUser(props),\n    onSuccess: (response, props) => {\n      toast(message('User updated'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateUser({id, ...other}: UpdateUserPayload): Promise<Response> {\n  if (other.roles) {\n    other.roles = other.roles.map(r => r.id) as any;\n  }\n  return apiClient.put(`users/${id}`, other).then(r => r.data);\n}\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]}\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {ReactNode} from 'react';\nimport {useStickySentinel} from '../utils/hooks/sticky-sentinel';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {Trans} from '../i18n/trans';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n    >\n      <div ref={sentinelRef} />\n      <div\n        className={clsx(\n          'sticky top-0 z-10 my-12 transition-shadow md:my-24',\n          isSticky && 'bg-paper shadow'\n        )}\n      >\n        <div\n          className={clsx(\n            'flex items-center gap-24 py-14 md:items-start',\n            wrapInContainer && 'container mx-auto px-24'\n          )}\n        >\n          {backButton}\n          <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\n            <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n              {title}\n            </h1>\n            {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n          </div>\n          <div className=\"mr-auto\"></div>\n          {actions}\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={isLoading || !isDirty}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </div>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n    </Form>\n  );\n}\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {ReactNode} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '../../ui/forms/toggle/switch';\nimport {FormFileSizeField} from '../../ui/forms/input-field/file-size-field';\nimport {LinkStyle} from '../../ui/buttons/external-link';\nimport {FormPermissionSelector} from '../../auth/ui/permission-selector';\nimport {Trans} from '../../i18n/trans';\nimport {FormChipField} from '../../ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '../../ui/forms/listbox/item';\nimport {CrupdateResourceLayout} from '../crupdate-resource-layout';\nimport {useSettings} from '../../core/settings/use-settings';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  avatarManager: ReactNode;\n  resendEmailButton?: ReactNode;\n  children?: ReactNode;\n}\nexport function CrupdateUserForm<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  isLoading,\n  avatarManager,\n  resendEmailButton,\n  children,\n}: Props<T>) {\n  const {require_email_confirmation} = useSettings();\n  const {data: valueLists} = useValueLists(['roles', 'permissions']);\n\n  return (\n    <CrupdateResourceLayout\n      onSubmit={onSubmit}\n      form={form}\n      title={title}\n      subTitle={subTitle}\n      isLoading={isLoading}\n    >\n      <div className=\"mb-40 flex items-start gap-40 md:gap-80\">\n        {avatarManager}\n        <div className=\"flex-auto\">\n          {children}\n          <FormTextField\n            className=\"mb-30\"\n            name=\"first_name\"\n            label={<Trans message=\"First name\" />}\n          />\n          <FormTextField\n            name=\"last_name\"\n            label={<Trans message=\"Last name\" />}\n          />\n        </div>\n      </div>\n\n      <div className=\"mb-30 border-b border-t pb-30 pt-30\">\n        <FormSwitch\n          className={clsx(resendEmailButton && 'mb-30')}\n          disabled={!require_email_confirmation}\n          name=\"email_verified_at\"\n          description={\n            <Trans message=\"Whether email address has been confirmed. User will not be able to login until address is confirmed, unless confirmation is disabled from settings page.\" />\n          }\n        >\n          <Trans message=\"Email confirmed\" />\n        </FormSwitch>\n        {resendEmailButton}\n      </div>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up. If left empty, this value will be inherited from any roles or subscriptions user has, or from 'Available space' setting in <a>Uploading</a> settings page.\"\n          />\n        }\n      />\n      <FormChipField\n        className=\"mb-30\"\n        name=\"roles\"\n        label={<Trans message=\"Roles\" />}\n        suggestions={valueLists?.roles}\n      >\n        {chip => (\n          <Item key={chip.id} value={chip.id}>\n            {chip.name}\n          </Item>\n        )}\n      </FormChipField>\n      <div className=\"mt-30 border-t pt-30\">\n        <div className=\"mb-10 text-sm\">\n          <Trans message=\"Permissions\" />\n        </div>\n        <FormPermissionSelector name=\"permissions\" />\n      </div>\n    </CrupdateResourceLayout>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ReportIcon = createSvgIcon(\n  [<path d=\"M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM19 14.9 14.9 19H9.1L5 14.9V9.1L9.1 5h5.8L19 9.1v5.8z\" key=\"0\" />,<circle cx=\"12\" cy=\"16\" r=\"1\" key=\"1\" />,<path d=\"M11 7h2v7h-2z\" key=\"2\" />,]\n, 'ReportOutlined');\n","import {useForm} from 'react-hook-form';\nimport {useParams} from 'react-router-dom';\nimport React, {useEffect} from 'react';\nimport {useUser} from '../../auth/ui/use-user';\nimport {UpdateUserPayload, useUpdateUser} from './requests/update-user';\nimport {Button} from '../../ui/buttons/button';\nimport {useResendVerificationEmail} from '../../auth/requests/use-resend-verification-email';\nimport {useUploadAvatar} from '../../auth/ui/account-settings/avatar/upload-avatar';\nimport {useRemoveAvatar} from '../../auth/ui/account-settings/avatar/remove-avatar';\nimport {CrupdateUserForm} from './crupdate-user-form';\nimport {User} from '../../auth/user';\nimport {Trans} from '../../i18n/trans';\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\nimport {useSettings} from '../../core/settings/use-settings';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {queryClient} from '@common/http/query-client';\nimport {ReportIcon} from '@common/icons/material/Report';\n\nexport function UpdateUserPage() {\n  const form = useForm<UpdateUserPayload>();\n  const {require_email_confirmation} = useSettings();\n  const {userId} = useParams();\n  const updateUser = useUpdateUser(form);\n  const resendConfirmationEmail = useResendVerificationEmail();\n  const {data, isLoading} = useUser(userId!, {\n    with: ['subscriptions', 'roles', 'permissions', 'bans'],\n  });\n  const banReason = data?.user.bans?.[0]?.comment;\n\n  useEffect(() => {\n    if (data?.user && !form.getValues().id) {\n      form.reset({\n        first_name: data.user.first_name,\n        last_name: data.user.last_name,\n        roles: data.user.roles,\n        permissions: data.user.permissions,\n        id: data.user.id,\n        email_verified_at: Boolean(data.user.email_verified_at),\n        available_space: data.user.available_space,\n        avatar: data.user.avatar,\n      });\n    }\n  }, [data?.user, form]);\n\n  if (isLoading) {\n    return <FullPageLoader />;\n  }\n\n  const resendEmailButton = (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      color=\"primary\"\n      disabled={\n        !require_email_confirmation ||\n        resendConfirmationEmail.isPending ||\n        data?.user?.email_verified_at != null\n      }\n      onClick={() => {\n        resendConfirmationEmail.mutate({email: data!.user.email});\n      }}\n    >\n      <Trans message=\"Resend email\" />\n    </Button>\n  );\n\n  return (\n    <CrupdateUserForm\n      onSubmit={newValues => {\n        updateUser.mutate(newValues);\n      }}\n      form={form}\n      title={\n        <Trans values={{email: data?.user.email}} message=\"Edit “:email“\" />\n      }\n      subTitle={\n        banReason && (\n          <div className=\"flex items-center gap-4 text-sm text-danger\">\n            <ReportIcon />\n            <div>\n              <Trans\n                message=\"Suspended: :reason\"\n                values={{reason: banReason}}\n              />\n            </div>\n          </div>\n        )\n      }\n      isLoading={updateUser.isPending}\n      avatarManager={\n        <AvatarSection\n          user={data!.user}\n          onChange={() => {\n            queryClient.invalidateQueries({queryKey: ['users']});\n          }}\n        />\n      }\n      resendEmailButton={resendEmailButton}\n    >\n      <FormTextField\n        className=\"mb-30\"\n        name=\"password\"\n        type=\"password\"\n        label={<Trans message=\"New password\" />}\n      />\n    </CrupdateUserForm>\n  );\n}\n\ninterface AvatarSectionProps {\n  user: User;\n  onChange: () => void;\n}\nfunction AvatarSection({user, onChange}: AvatarSectionProps) {\n  const uploadAvatar = useUploadAvatar({user});\n  const removeAvatar = useRemoveAvatar({user});\n  return (\n    <FileUploadProvider>\n      <FormImageSelector\n        name=\"avatar\"\n        diskPrefix=\"avatars\"\n        variant=\"avatar\"\n        stretchPreview\n        label={<Trans message=\"Profile image\" />}\n        previewSize=\"w-90 h-90\"\n        showRemoveButton\n        onChange={url => {\n          if (url) {\n            uploadAvatar.mutate({url});\n          } else {\n            removeAvatar.mutate();\n          }\n          onChange();\n        }}\n      />\n    </FileUploadProvider>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '../../../auth/user';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\nimport {message} from '../../../i18n/message';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface CreateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n}\n\nexport function useCreateUser(form: UseFormReturn<CreateUserPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (props: CreateUserPayload) => createUser(props),\n    onSuccess: () => {\n      toast(message('User created'));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('users')});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createUser(payload: CreateUserPayload): Promise<Response> {\n  if (payload.roles) {\n    payload.roles = payload.roles.map(r => r.id) as any;\n  }\n  return apiClient.post('users', payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {CreateUserPayload, useCreateUser} from './requests/create-user';\nimport {CrupdateUserForm} from './crupdate-user-form';\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\nimport {Trans} from '../../i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\n\nexport function CreateUserPage() {\n  const form = useForm<CreateUserPayload>();\n  const createUser = useCreateUser(form);\n\n  const avatarManager = (\n    <FileUploadProvider>\n      <FormImageSelector\n        name=\"avatar\"\n        diskPrefix=\"avatars\"\n        variant=\"avatar\"\n        stretchPreview\n        label={<Trans message=\"Profile image\" />}\n        previewSize=\"w-90 h-90\"\n        showRemoveButton\n      />\n    </FileUploadProvider>\n  );\n\n  return (\n    <CrupdateUserForm\n      onSubmit={newValues => {\n        createUser.mutate(newValues);\n      }}\n      form={form}\n      title={<Trans message=\"Add new user\" />}\n      isLoading={createUser.isPending}\n      avatarManager={avatarManager}\n    >\n      <FormTextField\n        className=\"mb-30\"\n        name=\"email\"\n        type=\"email\"\n        label={<Trans message=\"Email\" />}\n      />\n      <FormTextField\n        className=\"mb-30\"\n        name=\"password\"\n        type=\"password\"\n        label={<Trans message=\"Password\" />}\n      />\n    </CrupdateUserForm>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TranslateIcon = createSvgIcon(\n  <path d=\"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\" />\n, 'TranslateOutlined');\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {Localization} from '../../i18n/localization';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchLocaleWithLinesResponse extends BackendResponse {\n  localization: Localization;\n}\n\nexport const getLocalWithLinesQueryKey = (localeId?: number | string) => {\n  const key: (string | number)[] = ['getLocaleWithLines'];\n  if (localeId != null) {\n    key.push(localeId);\n  }\n  return key;\n};\n\nexport function useLocaleWithLines(localeId: number | string) {\n  return useQuery({\n    queryKey: getLocalWithLinesQueryKey(localeId),\n    queryFn: () => fetchLocaleWithLines(localeId),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchLocaleWithLines(\n  localeId: number | string,\n): Promise<FetchLocaleWithLinesResponse> {\n  return apiClient\n    .get(`localizations/${localeId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '../../ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {message} from '../../i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Localization} from '../../i18n/localization';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nfunction UpdateLocalization({\n  id,\n  ...other\n}: Partial<Localization>): Promise<Response> {\n  return apiClient.put(`localizations/${id}`, other).then(r => r.data);\n}\n\nexport function useUpdateLocalization(\n  form?: UseFormReturn<Partial<Localization>>,\n) {\n  return useMutation({\n    mutationFn: (props: Partial<Localization>) => UpdateLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization updated'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n      queryClient.invalidateQueries({queryKey: getLocalWithLinesQueryKey()});\n    },\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Form} from '../../ui/forms/form';\nimport {Localization} from '../../i18n/localization';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '../../ui/forms/select/select';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {useUpdateLocalization} from './update-localization';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\ninterface UpdateLocalizationDialogProps {\n  localization: Localization;\n}\nexport function UpdateLocalizationDialog({\n  localization,\n}: UpdateLocalizationDialogProps) {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<Partial<Localization>>({\n    defaultValues: {\n      id: localization.id,\n      name: localization.name,\n      language: localization.language,\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const updateLocalization = useUpdateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            updateLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '../../ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\nimport {message} from '../../i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {Localization} from '../../i18n/localization';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nexport interface CreateLocalizationPayload {\n  name: string;\n  language: string;\n}\n\nfunction createLocalization(\n  payload: CreateLocalizationPayload,\n): Promise<Response> {\n  return apiClient.post(`localizations`, payload).then(r => r.data);\n}\n\nexport function useCreateLocalization(\n  form: UseFormReturn<CreateLocalizationPayload>,\n) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (props: CreateLocalizationPayload) => createLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization created'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '../../ui/forms/select/select';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {\n  CreateLocalizationPayload,\n  useCreateLocalization,\n} from './create-localization';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\nexport function CreateLocationDialog() {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<CreateLocalizationPayload>({\n    defaultValues: {\n      language: 'en',\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const createLocalization = useCreateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            createLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            autoFocus\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export default \"__VITE_ASSET__5bb85b7d__\"","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {Localization} from '../../i18n/localization';\nimport {TranslateIcon} from '../../icons/material/Translate';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {UpdateLocalizationDialog} from './update-localization-dialog';\nimport {Tooltip} from '../../ui/tooltip/tooltip';\nimport {CreateLocationDialog} from './create-localization-dialog';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport aroundTheWorldSvg from './around-the-world.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\n\nconst columnConfig: ColumnConfig<Localization>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'name',\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: locale => locale.name,\n  },\n  {\n    key: 'language',\n    allowsSorting: true,\n    sortingKey: 'language',\n    header: () => <Trans message=\"Language code\" />,\n    body: locale => locale.language,\n  },\n  {\n    key: 'updatedAt',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: locale => <FormattedDate date={locale.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: locale => {\n      return (\n        <div className=\"text-muted\">\n          <Link to={`${locale.id}/translate`}>\n            <Tooltip label={<Trans message=\"Translate\" />}>\n              <IconButton size=\"md\">\n                <TranslateIcon />\n              </IconButton>\n            </Tooltip>\n          </Link>\n          <DialogTrigger type=\"modal\">\n            <Tooltip label={<Trans message=\"Edit\" />}>\n              <IconButton>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <UpdateLocalizationDialog localization={locale} />\n          </DialogTrigger>\n        </div>\n      );\n    },\n  },\n];\n\nexport function LocalizationIndex() {\n  return (\n    <DataTablePage\n      endpoint=\"localizations\"\n      title={<Trans message=\"Localizations\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={aroundTheWorldSvg}\n          title={<Trans message=\"No localizations have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching localizations\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new localization\" />\n        </DataTableAddItemButton>\n        <CreateLocationDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {SectionHelper} from '../../ui/section-helper';\n\ninterface FormValue {\n  key: string;\n  value: string;\n}\n\nexport function NewTranslationDialog() {\n  const {formId, close} = useDialogContext();\n  const form = useForm<FormValue>();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add translation\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <SectionHelper\n            className=\"mb-30\"\n            title={\n              <Trans message=\"Add a new translation, if it does not exist already.\" />\n            }\n            description={\n              <Trans message=\"This should only need to be done for things like custom menu items.\" />\n            }\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            autoFocus\n            name=\"key\"\n            label={<Trans message=\"Translation key\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            name=\"value\"\n            label={<Trans message=\"Translation value\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useMemo, useRef, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useLocaleWithLines} from './use-locale-with-lines';\nimport {Trans} from '../../i18n/trans';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {Button} from '../../ui/buttons/button';\nimport {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\nimport {TextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '../../i18n/use-trans';\nimport {SearchIcon} from '../../icons/material/Search';\nimport {CloseIcon} from '../../icons/material/Close';\nimport {AddIcon} from '../../icons/material/Add';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {NewTranslationDialog} from './new-translation-dialog';\nimport {useUpdateLocalization} from './update-localization';\nimport {Localization} from '../../i18n/localization';\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\n\ntype Lines = Record<string, string>;\n\nexport function TranslationManagementPage() {\n  const {localeId} = useParams();\n\n  const {data, isLoading} = useLocaleWithLines(localeId!);\n  const localization = data?.localization;\n\n  if (isLoading || !localization) {\n    return <FullPageLoader />;\n  }\n\n  return <Form localization={localization} />;\n}\n\ninterface FormProps {\n  localization: Localization;\n}\nfunction Form({localization}: FormProps) {\n  const [lines, setLines] = useState<Lines>(localization.lines || {});\n\n  const navigate = useNavigate();\n  const updateLocalization = useUpdateLocalization();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  return (\n    <form\n      className=\"p-14 md:p-24 flex flex-col h-full\"\n      onSubmit={e => {\n        e.preventDefault();\n        updateLocalization.mutate(\n          {id: localization.id, lines},\n          {\n            onSuccess: () => {\n              navigate('/admin/localizations');\n            },\n          },\n        );\n      }}\n    >\n      <Header\n        localization={localization}\n        setLines={setLines}\n        lines={lines}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        isLoading={updateLocalization.isPending}\n      />\n      <LinesList lines={lines} setLines={setLines} searchQuery={searchQuery} />\n    </form>\n  );\n}\n\ninterface HeaderProps {\n  localization: Localization;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n  searchQuery: string;\n  setSearchQuery: (value: string) => void;\n  isLoading: boolean;\n}\nfunction Header({\n  localization,\n  searchQuery,\n  setSearchQuery,\n  isLoading,\n  lines,\n  setLines,\n}: HeaderProps) {\n  const navigate = useNavigate();\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n\n  return (\n    <div className=\"flex-shrink-0\">\n      <Breadcrumb size=\"lg\" className=\"mb-16\">\n        <BreadcrumbItem\n          onSelected={() => {\n            navigate('/admin/localizations');\n          }}\n        >\n          <Trans message=\"Localizations\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans\n            message=\":locale translations\"\n            values={{locale: localization.name}}\n          />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <div className=\"mb-24 flex items-center gap-32 md:gap-12\">\n        <div className=\"max-w-440 flex-auto\">\n          <TextField\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            startAdornment={<SearchIcon />}\n            placeholder={trans({message: 'Type to search...'})}\n          />\n        </div>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTranslation => {\n            if (newTranslation) {\n              const newLines = {...lines};\n              newLines[newTranslation.key] = newTranslation.value;\n              setLines(newLines);\n            }\n          }}\n        >\n          {!isMobile && (\n            <Button\n              className=\"ml-auto\"\n              variant=\"outline\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n            >\n              <Trans message=\"Add new\" />\n            </Button>\n          )}\n          <NewTranslationDialog />\n        </DialogTrigger>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          {isMobile ? (\n            <Trans message=\"Save\" />\n          ) : (\n            <Trans message=\"Save translations\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface LinesListProps {\n  searchQuery?: string;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n}\nfunction LinesList({searchQuery, lines, setLines}: LinesListProps) {\n  const filteredLines = useMemo(() => {\n    return Object.entries(lines).filter(([id, translation]) => {\n      const lowerCaseQuery = searchQuery?.toLowerCase();\n      return (\n        !lowerCaseQuery ||\n        id?.toLowerCase().includes(lowerCaseQuery) ||\n        translation?.toLowerCase().includes(lowerCaseQuery)\n      );\n    });\n  }, [lines, searchQuery]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: filteredLines.length,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 123,\n  });\n\n  return (\n    <div className=\"flex-auto overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${rowVirtualizer.getTotalSize()}px`,\n        }}\n      >\n        {rowVirtualizer.getVirtualItems().map(virtualItem => {\n          const [id, translation] = filteredLines[virtualItem.index];\n          return (\n            <div\n              key={id}\n              className=\"w-full absolute top-0 left-0\"\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n            >\n              <div className=\"rounded border mb-10 md:mr-10\">\n                <div className=\"flex items-center gap-24 justify-between px-10 py-2 border-b\">\n                  <label\n                    className=\"text-xs font-semibold flex-auto\"\n                    htmlFor={id}\n                  >\n                    {id}\n                  </label>\n                  <IconButton\n                    size=\"xs\"\n                    className=\"text-muted\"\n                    onClick={() => {\n                      const newLines = {...lines};\n                      delete newLines[id];\n                      setLines(newLines);\n                    }}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n                <div>\n                  <textarea\n                    id={id}\n                    name={id}\n                    defaultValue={translation}\n                    className=\"w-full bg-inherit block rounded resize-none outline-none focus-visible:ring-2 p-10 text-sm\"\n                    rows={2}\n                    onChange={e => {\n                      const newLines = {...lines};\n                      newLines[id] = e.target.value;\n                      setLines(newLines);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {useDialogContext} from './dialog-context';\nimport {Dialog} from './dialog';\nimport {DialogBody} from './dialog-body';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {useControlledState} from '@react-stately/utils';\n\ninterface Props {\n  image?: string;\n  images?: string[];\n  activeIndex?: number;\n  onActiveIndexChange?: (index: number) => void;\n  defaultActiveIndex?: number;\n}\nexport function ImageZoomDialog(props: Props) {\n  const {close} = useDialogContext();\n  const {image, images} = props;\n  const [activeIndex, setActiveIndex] = useControlledState(\n    props.activeIndex,\n    props.defaultActiveIndex,\n    props.onActiveIndexChange,\n  );\n  const src = image || images?.[activeIndex];\n\n  return (\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\n        <IconButton\n          size=\"lg\"\n          color=\"paper\"\n          className=\"absolute right-0 top-0 z-20 text-white\"\n          onClick={() => {\n            close();\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\n              disabled={activeIndex < 1}\n              onClick={() => {\n                setActiveIndex(activeIndex - 1);\n              }}\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n          ) : null}\n          <img\n            src={src}\n            alt=\"\"\n            className=\"max-h-full w-auto object-contain shadow\"\n          />\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\n              disabled={activeIndex + 1 === images?.length}\n              onClick={() => {\n                setActiveIndex(activeIndex + 1);\n              }}\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {useContext} from 'react';\nimport {\n  AdConfig,\n  SiteConfigContext,\n} from '../../core/settings/site-config-context';\nimport {Form} from '../../ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../i18n/trans';\nimport {Button} from '../../ui/buttons/button';\nimport {FormSwitch} from '../../ui/forms/toggle/switch';\nimport {useAdminSettings} from '../settings/requests/use-admin-settings';\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\nimport {Settings} from '../../core/settings/settings';\nimport {\n  AdminSettingsWithFiles,\n  useUpdateAdminSettings,\n} from '../settings/requests/update-admin-settings';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {ImageZoomDialog} from '../../ui/overlays/dialog/image-zoom-dialog';\nimport {StaticPageTitle} from '../../seo/static-page-title';\n\nexport function AdsPage() {\n  const query = useAdminSettings();\n\n  return (\n    <div className=\"container mx-auto p-12 md:p-24\">\n      <StaticPageTitle>\n        <Trans message=\"Ads\" />\n      </StaticPageTitle>\n      <h1 className=\"mb-20 text-2xl font-light md:mb-40 md:text-3xl\">\n        <Trans message=\"Predefined Ad slots\" />\n      </h1>\n      {query.isLoading ? (\n        <ProgressCircle isIndeterminate />\n      ) : (\n        <AdsForm defaultValues={query.data?.client.ads || {}} />\n      )}\n    </div>\n  );\n}\n\ninterface AdsFormProps {\n  defaultValues: Settings['ads'];\n}\nfunction AdsForm({defaultValues}: AdsFormProps) {\n  const {\n    admin: {ads},\n  } = useContext(SiteConfigContext);\n\n  const form = useForm<AdminSettingsWithFiles>({\n    defaultValues: {client: {ads: defaultValues}},\n  });\n  const updateSettings = useUpdateAdminSettings(form);\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        updateSettings.mutate(value);\n      }}\n    >\n      {ads.map(ad => {\n        return <AdSection key={ad.slot} adConfig={ad} />;\n      })}\n      <FormSwitch\n        name=\"client.ads.disable\"\n        className=\"mb-30\"\n        description={\n          <Trans message=\"Disable all add related functionality across the site.\" />\n        }\n      >\n        <Trans message=\"Disable ads\" />\n      </FormSwitch>\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={updateSettings.isPending}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </Form>\n  );\n}\n\ninterface AdSectionProps {\n  adConfig: AdConfig;\n}\nfunction AdSection({adConfig}: AdSectionProps) {\n  return (\n    <div className=\"flex items-center gap-24\">\n      <FormTextField\n        className=\"mb-30 flex-auto\"\n        name={`client.${adConfig.slot}`}\n        inputElementType=\"textarea\"\n        rows={8}\n        label={<Trans {...adConfig.description} />}\n      />\n      <DialogTrigger type=\"modal\">\n        <button\n          type=\"button\"\n          className=\"cursor-zoom-in overflow-hidden rounded outline-none transition hover:scale-105 focus-visible:ring max-md:hidden\"\n        >\n          <img\n            src={adConfig.image}\n            className=\"h-[186px] w-auto border\"\n            alt=\"Ad slot example\"\n          />\n        </button>\n        <ImageZoomDialog image={adConfig.image} />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import {NavLink} from 'react-router-dom';\nimport {AppearanceButton} from './appearance-button';\nimport {useAppearanceStore} from './appearance-store';\nimport {Trans} from '../../i18n/trans';\nimport {Fragment, useMemo} from 'react';\n\nexport function SectionList() {\n  const sections = useAppearanceStore(s => s.config?.sections);\n  const sortedSection = useMemo(() => {\n    if (!sections) return [];\n    return Object.entries(sections || [])\n      .map(([key, value]) => {\n        return {\n          ...value,\n          key,\n        };\n      })\n      .sort((a, b) => (a?.position || 1) - (b?.position || 1));\n  }, [sections]);\n\n  return (\n    <Fragment>\n      {sortedSection.map(section => {\n        return (\n          <AppearanceButton\n            key={section.key}\n            to={section.key}\n            elementType={NavLink}\n          >\n            <Trans {...section.label} />\n          </AppearanceButton>\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '../../i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const RoleIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'type',\n    label: message('Type'),\n    description: message('Type of the role'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Sitewide'),\n          value: 'sitewide',\n        },\n        {\n          key: '02',\n          label: message('Workspace'),\n          value: 'workspace',\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date role was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date role was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {Role} from '../../auth/role';\nimport teamSvg from './team.svg';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {RoleIndexPageFilters} from './role-index-page-filters';\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Role>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Role\" />,\n    body: role => (\n      <div>\n        <div>\n          <Trans message={role.name} />\n        </div>\n        <div className=\"text-muted text-xs overflow-x-hidden overflow-ellipsis\">\n          {role.description ? <Trans message={role.description} /> : undefined}\n        </div>\n      </div>\n    ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: role => <Trans message={role.type} />,\n  },\n  {\n    key: 'updated_at',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last updated\" />,\n    body: role => <FormattedDate date={role.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    body: role => {\n      return (\n        <Link to={`${role.id}/edit`}>\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n        </Link>\n      );\n    },\n  },\n];\n\nexport function RolesIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"roles\"\n      title={<Trans message=\"Roles\" />}\n      columns={columnConfig}\n      filters={RoleIndexPageFilters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"No roles have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching roles\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"roles/csv/export\" />\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new role\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {Role} from '@common/auth/role';\nimport {useParams} from 'react-router-dom';\n\nconst Endpoint = (id: number | string) => `roles/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  role: Role;\n}\n\nexport function useRole() {\n  const {roleId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(roleId!)],\n    queryFn: () => fetchRole(roleId!),\n  });\n}\n\nfunction fetchRole(roleId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(roleId)).then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {Role} from '../../../auth/role';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {message} from '../../../i18n/message';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\ninterface Payload extends Partial<Role> {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `roles/${id}`;\n\nexport function useUpdateRole() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateRole(payload),\n    onSuccess: response => {\n      toast(trans(message('Role updated')));\n      queryClient.invalidateQueries({queryKey: [Endpoint(response.role.id)]});\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n      navigate('/admin/roles');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateRole({id, ...payload}: Payload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {Role} from '../../../auth/role';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../i18n/trans';\nimport {message} from '../../../i18n/message';\nimport {FormSelect} from '../../../ui/forms/select/select';\nimport {Item} from '../../../ui/forms/listbox/item';\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\nimport {FormPermissionSelector} from '../../../auth/ui/permission-selector';\nimport {useSettings} from '../../../core/settings/use-settings';\n\ninterface CrupdateRolePageSettingsPanelProps {\n  isInternal?: boolean;\n}\nexport function CrupdateRolePageSettingsPanel({\n  isInternal = false,\n}: CrupdateRolePageSettingsPanelProps) {\n  const {trans} = useTrans();\n  const {workspaces} = useSettings();\n  const {watch} = useFormContext<Role>();\n  const watchedType = watch('type');\n\n  return (\n    <>\n      <FormTextField\n        label={<Trans message=\"Name\" />}\n        name=\"name\"\n        className=\"mb-20\"\n        required\n      />\n      <FormTextField\n        label={<Trans message=\"Description\" />}\n        name=\"description\"\n        inputElementType=\"textarea\"\n        placeholder={trans(message('Role description...'))}\n        rows={4}\n        className=\"mb-20\"\n      />\n      {workspaces.integrated && (\n        <FormSelect\n          label={<Trans message=\"Type\" />}\n          name=\"type\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          description={\n            <Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />\n          }\n        >\n          <Item value=\"sitewide\">\n            <Trans message=\"Sitewide\" />\n          </Item>\n          <Item value=\"workspace\">\n            <Trans message=\"Workspace\" />\n          </Item>\n        </FormSelect>\n      )}\n      {!isInternal && (\n        <>\n          <FormSwitch\n            name=\"default\"\n            className=\"mb-20\"\n            description={\n              <Trans message=\"Assign this role to new users automatically.\" />\n            }\n          >\n            <Trans message=\"Default\" />\n          </FormSwitch>\n          {watchedType === 'sitewide' && (\n            <FormSwitch\n              name=\"guests\"\n              description={\n                <Trans message=\"Assign this role to guests (not logged in users).\" />\n              }\n            >\n              <Trans message=\"Guests\" />\n            </FormSwitch>\n          )}\n        </>\n      )}\n      <h2 className=\"mb-10 mt-30 text-lg\">\n        <Trans message=\"Permissions\" />\n      </h2>\n      <FormPermissionSelector\n        name=\"permissions\"\n        valueListKey={\n          watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'\n        }\n      />\n    </>\n  );\n}\n","import {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../i18n/trans';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '../icons/material/Search';\nimport {useState} from 'react';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {Avatar} from '../ui/images/avatar';\nimport {NormalizedModel} from '../datatable/filters/normalized-model';\nimport {IllustratedMessage} from '../ui/images/illustrated-message';\nimport {SvgImage} from '../ui/images/svg-image/svg-image';\nimport teamSvg from '../admin/roles/team.svg';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {useNormalizedModels} from './queries/use-normalized-models';\n\ninterface SelectUserDialogProps {\n  onUserSelected: (user: NormalizedModel) => void;\n}\n\nexport function SelectUserDialog({onUserSelected}: SelectUserDialogProps) {\n  const {close} = useDialogContext();\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const {trans} = useTrans();\n  const query = useNormalizedModels('normalized-models/user', {\n    query: searchTerm,\n    perPage: 14,\n  });\n  const users = query.data?.results || [];\n\n  const emptyStateMessage = (\n    <IllustratedMessage\n      className=\"pt-20\"\n      size=\"sm\"\n      title={<Trans message=\"No matching users\" />}\n      description={<Trans message=\"Try another search query\" />}\n      image={<SvgImage src={teamSvg} />}\n    />\n  );\n\n  const selectUser = (user: NormalizedModel) => {\n    close();\n    onUserSelected(user);\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Select a user\" />\n      </DialogHeader>\n      <DialogBody>\n        <TextField\n          autoFocus\n          className=\"mb-20\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search for user by name or email'))}\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n          }}\n        />\n        {!query.isLoading && !users.length && emptyStateMessage}\n        <div className=\"grid grid-cols-2 gap-x-10\">\n          {users.map(user => (\n            <UserListItem\n              key={user.id}\n              user={user}\n              onUserSelected={selectUser}\n            />\n          ))}\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface UserListItemProps {\n  user: NormalizedModel;\n  onUserSelected: (user: NormalizedModel) => void;\n}\nfunction UserListItem({user, onUserSelected}: UserListItemProps) {\n  return (\n    <div\n      key={user.id}\n      className=\"flex items-center gap-10 rounded p-10 outline-none ring-offset-4 hover:bg-hover focus-visible:ring\"\n      role=\"button\"\n      tabIndex={0}\n      onClick={() => {\n        onUserSelected(user);\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          onUserSelected(user);\n        }\n      }}\n    >\n      <Avatar src={user.image} />\n      <div className=\"overflow-hidden\">\n        <div className=\"overflow-hidden text-ellipsis\">{user.name}</div>\n        <div className=\"overflow-hidden text-ellipsis text-muted\">\n          {user.description}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {Role} from '../../../auth/role';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useRemoveUsersFromRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      removeUsersFromRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Removed [one 1 user|other :count users] from “{role}“', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction removeUsersFromRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/remove-users`, {userIds})\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {Role} from '../../../auth/role';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useAddUsersToRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      addUsersToRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Assigned [one 1 user|other :count users] to {role}', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction addUsersToRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/add-users`, {userIds})\n    .then(r => r.data);\n}\n","import {Role} from '../../../auth/role';\nimport {ColumnConfig} from '../../../datatable/column-config';\nimport {User} from '../../../auth/user';\nimport {Trans} from '../../../i18n/trans';\nimport {NameWithAvatar} from '../../../datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '../../../i18n/formatted-date';\nimport React from 'react';\nimport teamSvg from '../team.svg';\nimport {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\nimport {Button} from '../../../ui/buttons/button';\nimport {SelectUserDialog} from '../../../users/select-user-dialog';\nimport {queryClient} from '../../../http/query-client';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {DataTableEmptyStateMessage} from '../../../datatable/page/data-table-emty-state-message';\nimport {useDataTable} from '../../../datatable/page/data-table-context';\nimport {ConfirmationDialog} from '../../../ui/overlays/dialog/confirmation-dialog';\nimport {useRemoveUsersFromRole} from '../requests/use-remove-users-from-role';\nimport {useAddUsersToRole} from '../requests/use-add-users-to-role';\nimport {DataTable} from '../../../datatable/data-table';\nimport {useIsMobileMediaQuery} from '../../../utils/hooks/is-mobile-media-query';\n\nconst userColumn: ColumnConfig<User> = {\n  key: 'name',\n  allowsSorting: true,\n  sortingKey: 'email',\n  header: () => <Trans message=\"User\" />,\n  body: user => (\n    <NameWithAvatar\n      image={user.avatar}\n      label={user.display_name}\n      description={user.email}\n    />\n  ),\n  width: 'col-w-3',\n};\n\nconst desktopColumns: ColumnConfig<User>[] = [\n  userColumn,\n  {\n    key: 'first_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"First name\" />,\n    body: user => user.first_name,\n  },\n  {\n    key: 'last_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last name\" />,\n    body: user => user.last_name,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Assigned at\" />,\n    body: user => <FormattedDate date={user.created_at} />,\n  },\n];\n\nconst mobileColumns: ColumnConfig<User>[] = [userColumn];\n\ninterface CrupdateRolePageUsersPanelProps {\n  role: Role;\n}\nexport function EditRolePageUsersPanel({\n  role,\n}: CrupdateRolePageUsersPanelProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (role.guests || role.type === 'workspace') {\n    return (\n      <div className=\"pt-30 pb-10\">\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"Users can't be assigned to this role\" />}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <DataTable\n      endpoint=\"users\"\n      columns={isMobile ? mobileColumns : desktopColumns}\n      queryParams={{roleId: `${role.id}`}}\n      actions={<AssignUserAction role={role} />}\n      selectedActions={<RemoveUsersAction role={role} />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={\n            <Trans message=\"No users have been assigned to this role yet\" />\n          }\n          filteringTitle={<Trans message=\"No matching users\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface AssignUserActionProps {\n  role: Role;\n}\nfunction AssignUserAction({role}: AssignUserActionProps) {\n  const addUsers = useAddUsersToRole(role);\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"primary\" disabled={addUsers.isPending}>\n        <Trans message=\"Assign user\" />\n      </Button>\n      <SelectUserDialog\n        onUserSelected={user => {\n          addUsers.mutate(\n            {userIds: [user.id as number]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n\ntype RemoveUsersActionProps = {\n  role: Role;\n};\nexport function RemoveUsersAction({role}: RemoveUsersActionProps) {\n  const removeUsers = useRemoveUsersFromRole(role);\n  const {selectedRows} = useDataTable();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeUsers.mutate(\n            {userIds: selectedRows as number[]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button variant=\"flat\" color=\"danger\" disabled={removeUsers.isPending}>\n        <Trans message=\"Remove users\" />\n      </Button>\n      <ConfirmationDialog\n        title={\n          <Trans\n            message=\"Remove [one 1 user|other :count users] from “:name“ role?\"\n            values={{count: selectedRows.length, name: role.name}}\n          />\n        }\n        body={<Trans message=\"This will permanently remove the users.\" />}\n        confirm={<Trans message=\"Remove\" />}\n        isDanger\n      />\n    </DialogTrigger>\n  );\n}\n","import {useRole} from '../requests/use-role';\nimport {FullPageLoader} from '../../../ui/progress/full-page-loader';\nimport {Role} from '../../../auth/role';\nimport {Trans} from '../../../i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {Tabs} from '../../../ui/tabs/tabs';\nimport {Tab} from '../../../ui/tabs/tab';\nimport {TabList} from '../../../ui/tabs/tab-list';\nimport {TabPanel, TabPanels} from '../../../ui/tabs/tab-panels';\nimport {useUpdateRole} from '../requests/use-update-role';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {EditRolePageUsersPanel} from './edit-role-page-users-panel';\n\nexport function EditRolePage() {\n  const query = useRole();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent role={query.data.role} />;\n}\n\ninterface PageContentProps {\n  role: Role;\n}\nfunction PageContent({role}: PageContentProps) {\n  const form = useForm<Role>({defaultValues: role});\n  const updateRole = useUpdateRole();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateRole.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ role\" values={{name: role.name}} />}\n      isLoading={updateRole.isPending}\n    >\n      <Tabs isLazy>\n        <TabList>\n          <Tab>\n            <Trans message=\"Settings\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Users\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-20\">\n          <TabPanel>\n            <CrupdateRolePageSettingsPanel isInternal={role.internal} />\n          </TabPanel>\n          <TabPanel>\n            <EditRolePageUsersPanel role={role} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {Role} from '../../../auth/role';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {message} from '../../../i18n/message';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\nexport interface CreateRolePayload extends Partial<Role> {}\n\nconst Endpoint = 'roles';\n\nexport function useCreateRole(form: UseFormReturn<CreateRolePayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateRolePayload) => createRole(payload),\n    onSuccess: () => {\n      toast(trans(message('Created new role')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createRole({id, ...payload}: CreateRolePayload): Promise<Response> {\n  return apiClient.post(Endpoint, payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '../../../i18n/trans';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {CreateRolePayload, useCreateRole} from '../requests/user-create-role';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\n\nexport function CreateRolePage() {\n  const form = useForm<CreateRolePayload>({defaultValues: {type: 'sitewide'}});\n  const createRole = useCreateRole(form);\n  const navigate = useNavigate();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createRole.mutate(values, {\n          onSuccess: response => {\n            navigate(`/admin/roles/${response.role.id}/edit`);\n          },\n        });\n      }}\n      title={<Trans message=\"Add new role\" />}\n      isLoading={createRole.isPending}\n    >\n      <CrupdateRolePageSettingsPanel />\n    </CrupdateResourceLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '../../i18n/message';\nimport {TagType} from '../../core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const TagIndexPageFilters = (types: TagType[]): BackendFilter[] => {\n  return [\n    {\n      key: 'type',\n      label: message('Type'),\n      description: message('Type of the tag'),\n      defaultOperator: FilterOperator.ne,\n      control: {\n        type: FilterControlType.Select,\n        defaultValue: types[0].name,\n        options: types.map(type => ({\n          key: type.name,\n          label: message(type.name),\n          value: type.name,\n        })),\n      },\n    },\n    createdAtFilter({\n      description: message('Date tag was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date tag was last updated'),\n    }),\n  ];\n};\n","export default \"__VITE_ASSET__8de61ea9__\"","import {Tag} from '../../tags/tag';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '../../ui/forms/select/select';\nimport {Trans} from '../../i18n/trans';\nimport {Item} from '../../ui/forms/listbox/item';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\n\ninterface CrupdateTagFormProps {\n  onSubmit: (values: Partial<Tag>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Tag>>;\n}\nexport function CrupdateTagForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateTagFormProps) {\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const watchedType = form.watch('type');\n  const isSystem = !!types.find(t => t.name === watchedType && t.system);\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        description={<Trans message=\"Unique tag identifier.\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"display_name\"\n        label={<Trans message=\"Display name\" />}\n        description={<Trans message=\"User friendly tag name.\" />}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        label={<Trans message=\"Type\" />}\n        name=\"type\"\n        selectionMode=\"single\"\n        disabled={isSystem}\n      >\n        {types\n          .filter(t => !t.system)\n          .map(type => (\n            <Item key={type.name} value={type.name}>\n              <Trans message={type.name} />\n            </Item>\n          ))}\n      </FormSelect>\n    </Form>\n  );\n}\n","import slugify from 'slugify';\n\nexport function slugifyString(\n  text: string,\n  replacement = '-',\n  strict = false,\n): string {\n  if (!text) return text;\n  let slugified = slugify(text, {\n    lower: true,\n    replacement,\n    strict,\n    remove: /[*+~.()'\"!:@?\\|/\\\\#]/g,\n  });\n  // some chinese text might not get slugified properly,\n  // just replace whitespace with dash in that case\n  if (!slugified) {\n    slugified = text.replace(/\\s+/g, '-').toLowerCase();\n  }\n  return slugified;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@common/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Tag> {}\n\nexport function useCreateNewTag(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag created')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewTag(payload: Payload): Promise<Response> {\n  payload.name = slugifyString(payload.name!);\n  return apiClient.post('tags', payload).then(r => r.data);\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {useCreateNewTag} from './requests/use-create-new-tag';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\n\nexport function CreateTagDialog() {\n  const {close, formId} = useDialogContext();\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const form = useForm<Partial<Tag>>({\n    defaultValues: {\n      type: types[0].name,\n    },\n  });\n  const createNewTag = useCreateNewTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new tag\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createNewTag.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createNewTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@common/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\nexport interface UpdateTagPayload extends Partial<Tag> {\n  id: number;\n}\n\nexport function useUpdateTag(form: UseFormReturn<UpdateTagPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateTagPayload) => updateTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag updated')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateTag({id, ...payload}: UpdateTagPayload): Promise<Response> {\n  if (payload.name) {\n    payload.name = slugifyString(payload.name!);\n  }\n  return apiClient.put(`tags/${id}`, payload).then(r => r.data);\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\nimport {UpdateTagPayload, useUpdateTag} from './requests/use-update-tag';\n\ninterface UpdateTagDialogProps {\n  tag: Tag;\n}\nexport function UpdateTagDialog({tag}: UpdateTagDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateTagPayload>({\n    defaultValues: {\n      id: tag.id,\n      name: tag.name,\n      display_name: tag.display_name,\n      type: tag.type,\n    },\n  });\n  const updateTag = useUpdateTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update “:name“ tag\" values={{name: tag.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateTag.mutate(values as UpdateTagPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {Tag} from '../../tags/tag';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {TagIndexPageFilters} from './tag-index-page-filters';\nimport softwareEngineerSvg from './software-engineer.svg';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {CreateTagDialog} from './create-tag-dialog';\nimport {UpdateTagDialog} from './update-tag-dialog';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Tag>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: tag => tag.name,\n  },\n  {\n    key: 'type',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: tag => tag.type,\n  },\n  {\n    key: 'display_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Display name\" />,\n    body: tag => tag.display_name,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: tag => <FormattedDate date={tag.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: tag => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdateTagDialog tag={tag} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function TagIndexPage() {\n  const {tags} = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return TagIndexPageFilters(tags.types);\n  }, [tags.types]);\n\n  return (\n    <DataTablePage\n      endpoint=\"tags\"\n      title={<Trans message=\"Tags\" />}\n      columns={columnConfig}\n      filters={filters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No tags have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching tags\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new tag\" />\n        </DataTableAddItemButton>\n        <CreateTagDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n","import {Fragment, memo} from 'react';\nimport {prettyBytes} from './utils/pretty-bytes';\n\ninterface FormattedBytesProps {\n  bytes?: number;\n}\nexport const FormattedBytes = memo(({bytes}: FormattedBytesProps) => {\n  return <Fragment>{prettyBytes(bytes)}</Fragment>;\n});\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const VisibilityIcon = createSvgIcon(\n  <path d=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\" />\n, 'VisibilityOutlined');\n","export default \"__VITE_ASSET__31048831__\"","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {FileEntry} from '../../uploads/file-entry';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {User} from '../../auth/user';\nimport {CheckIcon} from '../../icons/material/Check';\nimport {CloseIcon} from '../../icons/material/Close';\nimport {FormattedBytes} from '../../uploads/formatted-bytes';\nimport {VisibilityIcon} from '../../icons/material/Visibility';\nimport uploadSvg from './upload.svg';\nimport {FilePreviewDialog} from '../../uploads/preview/file-preview-dialog';\nimport {FILE_ENTRY_INDEX_FILTERS} from './file-entry-index-filters';\nimport {FileTypeIcon} from '../../uploads/file-type-icon/file-type-icon';\n\nconst columnConfig: ColumnConfig<FileEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: entry => (\n      <Fragment>\n        <div className=\"overflow-x-hidden overflow-ellipsis\">{entry.name}</div>\n        <div className=\"text-muted text-xs overflow-x-hidden overflow-ellipsis\">\n          {entry.file_name}\n        </div>\n      </Fragment>\n    ),\n  },\n  {\n    key: 'owner_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Uploader\" />,\n    body: entry => {\n      const user = entry.users?.[0] as User;\n      if (!user) return null;\n      return (\n        <NameWithAvatar\n          image={user.avatar}\n          label={user.display_name}\n          description={user.email}\n        />\n      );\n    },\n  },\n  {\n    key: 'type',\n    width: 'w-100 flex-shrink-0',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-12\">\n        <FileTypeIcon type={entry.type} className=\"w-24 h-24 overflow-hidden\" />\n        <div className=\"capitalize\">{entry.type}</div>\n      </div>\n    ),\n  },\n  {\n    key: 'public',\n    allowsSorting: true,\n    width: 'w-60 flex-shrink-0',\n    header: () => <Trans message=\"Public\" />,\n    body: entry =>\n      entry.public ? (\n        <CheckIcon className=\"icon-md text-positive\" />\n      ) : (\n        <CloseIcon className=\"icon-md text-danger\" />\n      ),\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"File size\" />,\n    body: entry => <FormattedBytes bytes={entry.file_size} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: entry => <FormattedDate date={entry.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: entry => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <VisibilityIcon />\n          </IconButton>\n          <FilePreviewDialog entries={[entry]} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function FileEntryIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"file-entries\"\n      title={<Trans message=\"Uploaded files and folders\" />}\n      columns={columnConfig}\n      filters={FILE_ENTRY_INDEX_FILTERS}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={uploadSvg}\n          title={<Trans message=\"Nothing has been uploaded yet\" />}\n          filteringTitle={<Trans message=\"No matching files or folders\" />}\n        />\n      }\n    />\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '../../i18n/message';\nimport {\n  createdAtFilter,\n  timestampFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\n\nexport const SubscriptionIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'ends_at',\n    label: message('Status'),\n    description: message('Whether subscription is active or cancelled'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'active',\n      options: [\n        {\n          key: 'active',\n          label: message('Active'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n        {\n          key: 'cancelled',\n          label: message('Cancelled'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n      ],\n    },\n  },\n  {\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'stripe',\n      options: [\n        {\n          key: 'stripe',\n          label: message('Stripe'),\n          value: 'stripe',\n        },\n        {\n          key: 'paypal',\n          label: message('PayPal'),\n          value: 'paypal',\n        },\n        {\n          key: 'none',\n          label: message('None'),\n          value: 'none',\n        },\n      ],\n    },\n    key: 'gateway_name',\n    label: message('Gateway'),\n    description: message(\n      'With which payment provider was subscription created'\n    ),\n    defaultOperator: FilterOperator.eq,\n  },\n  timestampFilter({\n    key: 'renews_at',\n    label: message('Renew date'),\n    description: message('Date subscription will renew'),\n  }),\n  createdAtFilter({\n    description: message('Date subscription was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date subscription was last updated'),\n  }),\n];\n","export default \"__VITE_ASSET__2e46d67b__\"","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '../../../billing/subscription';\n\ninterface Response extends BackendResponse {\n  subscription: Subscription;\n}\n\nexport interface UpdateSubscriptionPayload extends Partial<Subscription> {\n  id: number;\n}\n\nexport function useUpdateSubscription(\n  form: UseFormReturn<UpdateSubscriptionPayload>,\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateSubscriptionPayload) => updateSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/subscriptions'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateSubscription({\n  id,\n  ...payload\n}: UpdateSubscriptionPayload): Promise<Response> {\n  return apiClient\n    .put(`billing/subscriptions/${id}`, payload)\n    .then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '../../ui/forms/select/select';\nimport {Trans} from '../../i18n/trans';\nimport {Item} from '../../ui/forms/listbox/item';\nimport {Subscription} from '../../billing/subscription';\nimport {FormDatePicker} from '../../ui/forms/input-field/date/date-picker/date-picker';\nimport {useProducts} from '../../billing/pricing-table/use-products';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {FormNormalizedModelField} from '../../ui/forms/normalized-model-field';\n\ninterface CrupdateSubscriptionForm {\n  onSubmit: (values: Partial<Subscription>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Subscription>>;\n}\nexport function CrupdateSubscriptionForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateSubscriptionForm) {\n  const query = useProducts();\n  // @ts-ignore\n  const watchedProductId = form.watch('product_id');\n  const selectedProduct = query.data?.products.find(\n    p => p.id === watchedProductId,\n  );\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormNormalizedModelField\n        name=\"user_id\"\n        className=\"mb-20\"\n        endpoint=\"normalized-models/user\"\n        label={<Trans message=\"User\" />}\n      />\n      <FormSelect\n        name=\"product_id\"\n        selectionMode=\"single\"\n        className=\"mb-20\"\n        label={<Trans message=\"Plan\" />}\n      >\n        {query.data?.products\n          .filter(p => !p.free)\n          .map(product => (\n            <Item key={product.id} value={product.id}>\n              <Trans message={product.name} />\n            </Item>\n          ))}\n      </FormSelect>\n      {!selectedProduct?.free && (\n        <FormSelect\n          name=\"price_id\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          label={<Trans message=\"Price\" />}\n        >\n          {selectedProduct?.prices.map(price => (\n            <Item key={price.id} value={price.id}>\n              <FormattedPrice price={price} />\n            </Item>\n          ))}\n        </FormSelect>\n      )}\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={3}\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"renews_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Renews at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"ends_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Ends at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n    </Form>\n  );\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Subscription} from '../../billing/subscription';\nimport {\n  UpdateSubscriptionPayload,\n  useUpdateSubscription,\n} from './requests/use-update-subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\ninterface UpdateSubscriptionDialogProps {\n  subscription: Subscription;\n}\nexport function UpdateSubscriptionDialog({\n  subscription,\n}: UpdateSubscriptionDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateSubscriptionPayload>({\n    defaultValues: {\n      id: subscription.id,\n      product_id: subscription.product_id,\n      price_id: subscription.price_id,\n      description: subscription.description,\n      renews_at: subscription.renews_at,\n      ends_at: subscription.ends_at,\n      user_id: subscription.user_id,\n    },\n  });\n  const updateSubscription = useUpdateSubscription(form);\n\n  return (\n    <Dialog size=\"md\">\n      <DialogHeader>\n        <Trans message=\"Update subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateSubscription.mutate(values as UpdateSubscriptionPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {Tag} from '../../../tags/tag';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '../../../billing/subscription';\n\nconst endpoint = 'billing/subscriptions';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Subscription> {}\n\nexport function useCreateSubscription(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewSubscription(payload: Payload): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../i18n/trans';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {useCreateSubscription} from './requests/use-create-subscription';\nimport {Subscription} from '../../billing/subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\nexport function CreateSubscriptionDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<Partial<Subscription>>({});\n  const createSubscription = useCreateSubscription(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createSubscription.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PauseIcon = createSvgIcon(\n  <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n, 'PauseOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PlayArrowIcon = createSvgIcon(\n  <path d=\"M10 8.64 15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" />\n, 'PlayArrowOutlined');\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {SubscriptionIndexPageFilters} from './subscription-index-page-filters';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport subscriptionsSvg from './subscriptions.svg';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Subscription} from '../../billing/subscription';\nimport {CloseIcon} from '../../icons/material/Close';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {UpdateSubscriptionDialog} from './update-subscription-dialog';\nimport {CreateSubscriptionDialog} from './create-subscription-dialog';\nimport {useCancelSubscription} from '../../billing/billing-page/requests/use-cancel-subscription';\nimport {PauseIcon} from '../../icons/material/Pause';\nimport {queryClient} from '../../http/query-client';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Tooltip} from '../../ui/tooltip/tooltip';\nimport {useResumeSubscription} from '../../billing/billing-page/requests/use-resume-subscription';\nimport {PlayArrowIcon} from '../../icons/material/PlayArrow';\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\nimport {Chip} from '../../ui/forms/input-field/chip-field/chip';\n\nconst endpoint = 'billing/subscriptions';\n\nconst columnConfig: ColumnConfig<Subscription>[] = [\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Customer\" />,\n    body: subscription =>\n      subscription.user && (\n        <NameWithAvatar\n          image={subscription.user.avatar}\n          label={subscription.user.display_name}\n          description={subscription.user.email}\n        />\n      ),\n  },\n  {\n    key: 'status',\n    width: 'w-100 flex-shrink-0',\n    header: () => <Trans message=\"Status\" />,\n    body: subscription => {\n      if (subscription.valid) {\n        return (\n          <Chip size=\"xs\" color=\"positive\" radius=\"rounded\" className=\"w-max\">\n            <Trans message=\"Active\" />\n          </Chip>\n        );\n      }\n      return (\n        <Chip size=\"xs\" radius=\"rounded\" className=\"w-max\">\n          <Trans message=\"Cancelled\" />\n        </Chip>\n      );\n    },\n  },\n  {\n    key: 'product_id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plan\" />,\n    body: subscription => subscription.product?.name,\n  },\n  {\n    key: 'gateway_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Gateway\" />,\n    body: subscription => (\n      <span className=\"capitalize\">{subscription.gateway_name}</span>\n    ),\n  },\n  {\n    key: 'renews_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Renews at\" />,\n    body: subscription => <FormattedDate date={subscription.renews_at} />,\n  },\n  {\n    key: 'ends_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Ends at\" />,\n    body: subscription => <FormattedDate date={subscription.ends_at} />,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Created at\" />,\n    body: subscription => <FormattedDate date={subscription.created_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-128 flex-shrink-0',\n    body: subscription => {\n      return <SubscriptionActions subscription={subscription} />;\n    },\n  },\n];\n\nexport function SubscriptionsIndexPage() {\n  return (\n    <DataTablePage\n      endpoint={endpoint}\n      title={<Trans message=\"Subscriptions\" />}\n      columns={columnConfig}\n      filters={SubscriptionIndexPageFilters}\n      actions={<PageActions />}\n      enableSelection={false}\n      selectedActions={<DeleteSelectedItemsAction />}\n      queryParams={{with: 'product'}}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={subscriptionsSvg}\n          title={<Trans message=\"No subscriptions have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching subscriptions\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction PageActions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new subscription\" />\n        </DataTableAddItemButton>\n        <CreateSubscriptionDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n\ninterface SubscriptionActionsProps {\n  subscription: Subscription;\n}\nfunction SubscriptionActions({subscription}: SubscriptionActionsProps) {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <IconButton size=\"md\" className=\"text-muted\">\n          <EditIcon />\n        </IconButton>\n        <UpdateSubscriptionDialog subscription={subscription} />\n      </DialogTrigger>\n      {subscription.cancelled ? (\n        <ResumeSubscriptionButton subscription={subscription} />\n      ) : (\n        <SuspendSubscriptionButton subscription={subscription} />\n      )}\n      <CancelSubscriptionButton subscription={subscription} />\n    </Fragment>\n  );\n}\n\nfunction SuspendSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleSuspendSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleSuspendSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Cancel subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <PauseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Cancel subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to cancel this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on grace period until their next scheduled renewal date. Subscription can be renewed until that date by user or from admin area.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction ResumeSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const resumeSubscription = useResumeSubscription();\n  const handleResumeSubscription = () => {\n    resumeSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleResumeSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Renew subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          onClick={handleResumeSubscription}\n          disabled={resumeSubscription.isPending}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Resume subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to resume this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on their original plan and billing cycle.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction CancelSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleDeleteSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id, delete: true},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleDeleteSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to delete this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will permanently delete the subscription and immediately cancel it on billing gateway. Subscription will not be renewable anymore.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SyncIcon = createSvgIcon(\n  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\n, 'SyncOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useSyncProducts() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => syncPlans(),\n    onSuccess: () => {\n      toast(trans(message('Plans synced')));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not sync plans')),\n  });\n}\n\nfunction syncPlans(): Promise<Response> {\n  return apiClient.post('billing/products/sync').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {message} from '../../../i18n/message';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\nconst endpoint = (id: number) => `billing/products/${id}`;\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  productId: number;\n}\n\nexport function useDeleteProduct() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan deleted')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateProduct({productId}: Payload): Promise<Response> {\n  return apiClient.delete(endpoint(productId)).then(r => r.data);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '../../i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const PlansIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'subscriptions',\n    label: message('Subscriptions'),\n    description: message('Whether plan has any active subscriptions'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Has active subscriptions'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('Does not have active subscriptions'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date plan was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date plan was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {FormattedDate} from '../../i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '../../i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport softwareEngineerSvg from './../tags/software-engineer.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {Product} from '../../billing/product';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Link} from 'react-router-dom';\nimport {FormattedPrice} from '../../i18n/formatted-price';\nimport {SyncIcon} from '../../icons/material/Sync';\nimport {useSyncProducts} from './requests/use-sync-products';\nimport {Tooltip} from '../../ui/tooltip/tooltip';\nimport {useDeleteProduct} from './requests/use-delete-product';\nimport {DeleteIcon} from '../../icons/material/Delete';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\nimport {useNavigate} from '../../utils/hooks/use-navigate';\nimport {PlansIndexPageFilters} from './plans-index-page-filters';\n\nconst columnConfig: ColumnConfig<Product>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Name\" />,\n    body: product => {\n      const price = product.prices[0];\n      return (\n        <NameWithAvatar\n          label={product.name}\n          description={\n            product.free ? (\n              <Trans message=\"Free\" />\n            ) : (\n              <FormattedPrice price={price} />\n            )\n          }\n        />\n      );\n    },\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Created\" />,\n    body: product => <FormattedDate date={product.created_at} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: product => <FormattedDate date={product.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    maxWidth: 'max-w-84',\n    body: product => {\n      return (\n        <Fragment>\n          <IconButton\n            size=\"md\"\n            className=\"text-muted\"\n            elementType={Link}\n            to={`/admin/plans/${product.id}/edit`}\n          >\n            <EditIcon />\n          </IconButton>\n          <DeleteProductButton product={product} />\n        </Fragment>\n      );\n    },\n  },\n];\n\nexport function PlansIndexPage() {\n  const navigate = useNavigate();\n  return (\n    <DataTablePage\n      endpoint=\"billing/products\"\n      title={<Trans message=\"Subscription plans\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      enableSelection={false}\n      filters={PlansIndexPageFilters}\n      onRowAction={item => {\n        navigate(`/admin/plans/${item.id}/edit`);\n      }}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No plans have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching plans\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface DeleteProductButtonProps {\n  product: Product;\n}\nfunction DeleteProductButton({product}: DeleteProductButtonProps) {\n  const deleteProduct = useDeleteProduct();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          deleteProduct.mutate({productId: product.id});\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete plan\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={deleteProduct.isPending}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Delete plan\" />}\n        body={<Trans message=\"Are you sure you want to delete this plan?\" />}\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction Actions() {\n  const syncPlans = useSyncProducts();\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Sync plans with Stripe & PayPal\" />}>\n        <IconButton\n          color=\"primary\"\n          variant=\"outline\"\n          size=\"sm\"\n          disabled={syncPlans.isPending}\n          onClick={() => {\n            syncPlans.mutate();\n          }}\n        >\n          <SyncIcon />\n        </IconButton>\n      </Tooltip>\n      <DataTableAddItemButton elementType={Link} to=\"/admin/plans/new\">\n        <Trans message=\"Add new plan\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useParams} from 'react-router-dom';\nimport {Product} from '@common/billing/product';\n\nconst Endpoint = (id: number | string) => `billing/products/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  product: Product;\n}\n\nexport function useProduct() {\n  const {productId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(productId!)],\n    queryFn: () => fetchProduct(productId!),\n  });\n}\n\nfunction fetchProduct(productId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(productId)).then(response => response.data);\n}\n","import {message} from '../../../i18n/message';\n\nexport const BillingPeriodPresets = [\n  {\n    key: 'day1',\n    label: message('Daily'),\n    interval: 'day',\n    interval_count: 1,\n  },\n  {\n    key: 'week1',\n    label: message('Weekly'),\n    interval: 'week',\n    interval_count: 1,\n  },\n  {\n    key: 'month1',\n    label: message('Monthly'),\n    interval: 'month',\n    interval_count: 1,\n  },\n  {\n    key: 'month3',\n    label: message('Every 3 months'),\n    interval: 'month',\n    interval_count: 3,\n  },\n  {\n    key: 'month6',\n    label: message('Every 6 months'),\n    interval: 'month',\n    interval_count: 6,\n  },\n  {\n    key: 'year1',\n    label: message('Yearly'),\n    interval: 'year',\n    interval_count: 1,\n  },\n  {\n    key: 'custom',\n    label: message('Custom'),\n    interval: null,\n    interval_count: null,\n  },\n];\n","import {useFormContext} from 'react-hook-form';\nimport {Product} from '@common/billing/product';\nimport React, {Fragment, useMemo, useState} from 'react';\nimport {useValueLists} from '@common/http/value-lists';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {FormSelect, Select} from '@common/ui/forms/select/select';\nimport {Price} from '@common/billing/price';\nimport {BillingPeriodPresets} from '@common/admin/plans/crupdate-plan-page/billing-period-presets';\nimport {Button} from '@common/ui/buttons/button';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\ninterface PriceFormProps {\n  index: number;\n  onRemovePrice: () => void;\n}\nexport function PriceForm({index, onRemovePrice}: PriceFormProps) {\n  const {trans} = useTrans();\n  const query = useValueLists(['currencies']);\n  const currencies = useMemo(() => {\n    return query.data?.currencies ? Object.values(query.data.currencies) : [];\n  }, [query.data]);\n  const {watch, getValues} = useFormContext<Product>();\n  const isNewProduct = !watch('id');\n  const isNewPrice = watch(`prices.${index}.id`) == null;\n  const subscriberCount = watch(`prices.${index}.subscriptions_count`) || 0;\n\n  // select billing period preset based on price \"interval\" and \"interval_count\"\n  const [billingPeriodPreset, setBillingPeriodPreset] = useState(() => {\n    const interval = getValues(`prices.${index}.interval`);\n    const intervalCount = getValues(`prices.${index}.interval_count`);\n    const preset = BillingPeriodPresets.find(\n      p => p.key === `${interval}${intervalCount}`\n    );\n    return preset ? preset.key : 'custom';\n  });\n\n  const allowPriceChanges = isNewProduct || isNewPrice || !subscriberCount;\n\n  return (\n    <Fragment>\n      {!allowPriceChanges && (\n        <p className=\"text-muted text-sm max-w-500 mb-20\">\n          <Trans\n            message=\"This price can't modified or deleted, because it has [one 1 subscriber|other :count subscribers]. You can instead add a new price.\"\n            values={{count: subscriberCount}}\n          />\n        </p>\n      )}\n\n      <FormTextField\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Amount\" />}\n        type=\"number\"\n        min={0.1}\n        step={0.01}\n        name={`prices.${index}.amount`}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Currency\" />}\n        name={`prices.${index}.currency`}\n        items={currencies}\n        showSearchField\n        searchPlaceholder={trans(message('Search currencies'))}\n        selectionMode=\"single\"\n        className=\"mb-20\"\n      >\n        {item => (\n          <Item\n            value={item.code}\n            key={item.code}\n          >{`${item.code}: ${item.name}`}</Item>\n        )}\n      </FormSelect>\n      <BillingPeriodSelect\n        disabled={!allowPriceChanges}\n        index={index}\n        value={billingPeriodPreset}\n        onValueChange={setBillingPeriodPreset}\n      />\n      {billingPeriodPreset === 'custom' && (\n        <CustomBillingPeriodField disabled={!allowPriceChanges} index={index} />\n      )}\n      <div className=\"text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"danger\"\n          disabled={!allowPriceChanges}\n          onClick={() => {\n            onRemovePrice();\n          }}\n        >\n          <Trans message=\"Delete price\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface BillingPeriodSelectProps {\n  index: number;\n  value: string;\n  onValueChange: (value: string) => void;\n  disabled: boolean;\n}\nfunction BillingPeriodSelect({\n  index,\n  value,\n  onValueChange,\n  disabled,\n}: BillingPeriodSelectProps) {\n  const {setValue: setFormValue} = useFormContext<Product>();\n\n  return (\n    <Select\n      label={<Trans message=\"Billing period\" />}\n      disabled={disabled}\n      className=\"mb-20\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={value => {\n        onValueChange(value as string);\n        if (value === 'custom') {\n        } else {\n          const preset = BillingPeriodPresets.find(p => p.key === value);\n          if (preset) {\n            setFormValue(\n              `prices.${index}.interval`,\n              preset.interval as Price['interval']\n            );\n            setFormValue(\n              `prices.${index}.interval_count`,\n              preset.interval_count as number\n            );\n          }\n        }\n      }}\n    >\n      {BillingPeriodPresets.map(preset => (\n        <Item key={preset.key} value={preset.key}>\n          <Trans {...preset.label} />\n        </Item>\n      ))}\n    </Select>\n  );\n}\n\ninterface CustomBillingPeriodFieldProps {\n  index: number;\n  disabled: boolean;\n}\nfunction CustomBillingPeriodField({\n  index,\n  disabled,\n}: CustomBillingPeriodFieldProps) {\n  const {watch} = useFormContext<Product>();\n  const interval = watch(`prices.${index}.interval`);\n  let maxIntervalCount: number;\n\n  if (interval === 'day') {\n    maxIntervalCount = 365;\n  } else if (interval === 'week') {\n    maxIntervalCount = 52;\n  } else {\n    maxIntervalCount = 12;\n  }\n\n  return (\n    <div className=\"flex border rounded w-min\">\n      <div className=\"px-18 flex items-center text-sm\">\n        <Trans message=\"Every\" />\n      </div>\n      <FormTextField\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        className=\"border-l border-r w-80\"\n        name={`prices.${index}.interval_count`}\n        type=\"number\"\n        min={1}\n        max={maxIntervalCount}\n        disabled={disabled}\n        required\n      />\n      <FormSelect\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        name={`prices.${index}.interval`}\n        selectionMode=\"single\"\n        disabled={disabled}\n      >\n        <Item value=\"day\">\n          <Trans message=\"Days\" />\n        </Item>\n        <Item value=\"week\">\n          <Trans message=\"Weeks\" />\n        </Item>\n        <Item value=\"month\">\n          <Trans message=\"Months\" />\n        </Item>\n      </FormSelect>\n    </div>\n  );\n}\n","import {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\nimport {Trans} from '../../../i18n/trans';\nimport React, {Fragment, ReactNode} from 'react';\nimport {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '../../../ui/accordion/accordion';\nimport {FormattedPrice} from '../../../i18n/formatted-price';\nimport {FormPermissionSelector} from '../../../auth/ui/permission-selector';\nimport {PriceForm} from './price-form';\nimport {Button} from '../../../ui/buttons/button';\nimport {AddIcon} from '../../../icons/material/Add';\nimport {IconButton} from '../../../ui/buttons/icon-button';\nimport {CloseIcon} from '../../../icons/material/Close';\nimport {CreateProductPayload} from '../requests/use-create-product';\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\nimport {FormSelect} from '../../../ui/forms/select/select';\nimport {Item} from '../../../ui/forms/listbox/item';\nimport {FormFileSizeField} from '../../../ui/forms/input-field/file-size-field';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '../../../ui/buttons/external-link';\n\nexport function CrupdatePlanForm() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n      />\n      <FormSelect\n        name=\"position\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Position in pricing table\" />}\n        className=\"mb-20\"\n      >\n        <Item value={0}>\n          <Trans message=\"First\" />\n        </Item>\n        <Item value={1}>\n          <Trans message=\"Second\" />\n        </Item>\n        <Item value={2}>\n          <Trans message=\"Third\" />\n        </Item>\n        <Item value={3}>\n          <Trans message=\"Fourth\" />\n        </Item>\n        <Item value={4}>\n          <Trans message=\"Fifth\" />\n        </Item>\n      </FormSelect>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up.\"\n          />\n        }\n      />\n      <FormSwitch\n        name=\"recommended\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will be displayed more prominently on pricing page.\" />\n        }\n      >\n        <Trans message=\"Recommend\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"hidden\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will not be shown on pricing or upgrade pages.\" />\n        }\n      >\n        <Trans message=\"Hidden\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"free\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Will be assigned to all users, if they are not subscribed already.\" />\n        }\n      >\n        <Trans message=\"Free\" />\n      </FormSwitch>\n      <Header>\n        <Trans message=\"Feature list\" />\n      </Header>\n      <FeatureListForm />\n      <PricingListForm />\n      <Header>\n        <Trans message=\"Permissions\" />\n      </Header>\n      <FormPermissionSelector name=\"permissions\" />\n    </Fragment>\n  );\n}\n\ninterface HeaderProps {\n  children: ReactNode;\n}\nfunction Header({children}: HeaderProps) {\n  return <h2 className=\"mt-40 mb-20 text-base font-semibold\">{children}</h2>;\n}\n\nfunction FeatureListForm() {\n  const {fields, append, remove} = useFieldArray<CreateProductPayload>({\n    name: 'feature_list',\n  });\n  return (\n    <div>\n      {fields.map((field, index) => {\n        return (\n          <div key={field.id} className=\"flex gap-10 mb-10\">\n            <FormTextField\n              name={`feature_list.${index}.value`}\n              size=\"sm\"\n              className=\"flex-auto\"\n            />\n            <IconButton\n              size=\"sm\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              onClick={() => {\n                remove(index);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        );\n      })}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({value: ''});\n        }}\n      >\n        <Trans message=\"Add another line\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction PricingListForm() {\n  const {\n    watch,\n    formState: {errors},\n  } = useFormContext<CreateProductPayload>();\n  const {fields, append, remove} = useFieldArray<\n    CreateProductPayload,\n    'prices',\n    'key'\n  >({\n    name: 'prices',\n    keyName: 'key',\n  });\n\n  // if plan is marked as free, hide pricing form\n  if (watch('free')) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Header>\n        <Trans message=\"Pricing\" />\n      </Header>\n      {errors.prices?.message && (\n        <div className=\"text-sm text-danger mb-20\">{errors.prices.message}</div>\n      )}\n      <Accordion variant=\"outline\" className=\"mb-10\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            label={<FormattedPrice price={field} />}\n            key={field.key}\n          >\n            <PriceForm\n              index={index}\n              onRemovePrice={() => {\n                remove(index);\n              }}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({\n            currency: 'USD',\n            amount: 1,\n            interval_count: 1,\n            interval: 'month',\n          });\n        }}\n      >\n        <Trans message=\"Add another price\" />\n      </Button>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {message} from '../../../i18n/message';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {Product} from '../../../billing/product';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\nimport {CreateProductPayload} from './use-create-product';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  product: Product;\n}\n\nexport interface UpdateProductPayload extends CreateProductPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `billing/products/${id}`;\n\nexport function useUpdateProduct(form: UseFormReturn<UpdateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateProductPayload) => updateProduct(payload),\n    onSuccess: response => {\n      toast(trans(message('Plan updated')));\n      queryClient.invalidateQueries({\n        queryKey: [Endpoint(response.product.id)],\n      });\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateProduct({\n  id,\n  ...payload\n}: UpdateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.put(Endpoint(id), backendPayload).then(r => r.data);\n}\n","import {FullPageLoader} from '../../../ui/progress/full-page-loader';\nimport {Trans} from '../../../i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {useProduct} from '../requests/use-product';\nimport {Product} from '../../../billing/product';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  UpdateProductPayload,\n  useUpdateProduct,\n} from '../requests/use-update-product';\n\nexport function EditPlanPage() {\n  const query = useProduct();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent product={query.data.product} />;\n}\n\ninterface PageContentProps {\n  product: Product;\n}\nfunction PageContent({product}: PageContentProps) {\n  const form = useForm<UpdateProductPayload>({\n    defaultValues: {\n      ...product,\n      feature_list: product.feature_list.map(f => ({value: f})),\n    },\n  });\n  const updateProduct = useUpdateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateProduct.mutate(values);\n      }}\n      title={\n        <Trans message=\"Edit “:name“ plan\" values={{name: product.name}} />\n      }\n      isLoading={updateProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {Product} from '../../../billing/product';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {apiClient, queryClient} from '../../../http/query-client';\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\nimport {Price} from '../../../billing/price';\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\nconst endpoint = 'billing/products';\n\nexport interface CreateProductPayload\n  extends Omit<Partial<Product>, 'feature_list' | 'prices'> {\n  feature_list: {value: string}[];\n  prices: Omit<Price, 'id'>[];\n}\n\nexport function useCreateProduct(form: UseFormReturn<CreateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: CreateProductPayload) => createProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan created')));\n      queryClient.invalidateQueries({queryKey: [endpoint]});\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createProduct(payload: CreateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.post(endpoint, backendPayload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '../../../i18n/trans';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  CreateProductPayload,\n  useCreateProduct,\n} from '../requests/use-create-product';\n\nexport function CreatePlanPage() {\n  const form = useForm<CreateProductPayload>({\n    defaultValues: {\n      free: false,\n      recommended: false,\n    },\n  });\n  const createProduct = useCreateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createProduct.mutate(values);\n      }}\n      title={<Trans message=\"Create new plan\" />}\n      isLoading={createProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {SettingsPanel} from '../settings-panel';\nimport {SettingsSeparator} from '../settings-separator';\nimport {Trans} from '../../../i18n/trans';\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\nimport {useFieldArray, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../admin-settings';\nimport React, {Fragment} from 'react';\nimport {FormSelect} from '../../../ui/forms/select/select';\nimport {Item} from '../../../ui/forms/listbox/item';\nimport {MenuItemForm} from '../../menus/menu-item-form';\nimport {Button} from '../../../ui/buttons/button';\nimport {AddIcon} from '../../../icons/material/Add';\nimport {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\nimport {AddMenuItemDialog} from '../../appearance/sections/menus/add-menu-item-dialog';\nimport {Accordion, AccordionItem} from '../../../ui/accordion/accordion';\nimport {IconButton} from '../../../ui/buttons/icon-button';\nimport {CloseIcon} from '../../../icons/material/Close';\n\nexport function GdprSettings() {\n  return (\n    <SettingsPanel\n      title={<Trans message=\"GDPR\" />}\n      description={\n        <Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />\n      }\n    >\n      <CookieNoticeSection />\n      <SettingsSeparator />\n      <RegistrationPoliciesSection />\n    </SettingsPanel>\n  );\n}\n\nfunction CookieNoticeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const noticeEnabled = watch('client.cookie_notice.enable');\n\n  return (\n    <div>\n      <FormSwitch\n        name=\"client.cookie_notice.enable\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />\n        }\n      >\n        <Trans message=\"Enable cookie notice\" />\n      </FormSwitch>\n      {noticeEnabled && (\n        <Fragment>\n          <div className=\"mb-20 border-b pb-6\">\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\n              <Trans message=\"Information button\" />\n            </div>\n            <MenuItemForm\n              hideRoleAndPermissionFields\n              formPathPrefix=\"client.cookie_notice.button\"\n            />\n          </div>\n          <FormSelect\n            name=\"client.cookie_notice.position\"\n            selectionMode=\"single\"\n            label={<Trans message=\"Cookie notice position\" />}\n            className=\"mb-20\"\n          >\n            <Item value=\"top\">\n              <Trans message=\"Top\" />\n            </Item>\n            <Item value=\"bottom\">\n              <Trans message=\"Bottom\" />\n            </Item>\n          </FormSelect>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction RegistrationPoliciesSection() {\n  const {fields, append, remove} = useFieldArray<\n    AdminSettings,\n    'client.registration.policies'\n  >({\n    name: 'client.registration.policies',\n  });\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Registration policies\" />\n      </div>\n      <div className=\"text-xs text-muted\">\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\n      </div>\n      <Accordion className=\"mt-16\" variant=\"outline\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            key={field.id}\n            label={field.label}\n            chevronPosition=\"left\"\n            endAppend={\n              <IconButton\n                variant=\"text\"\n                color=\"danger\"\n                size=\"sm\"\n                onClick={() => {\n                  remove(index);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            }\n          >\n            <MenuItemForm\n              hideRoleAndPermissionFields\n              formPathPrefix={`client.register_policies.${index}`}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={value => {\n          if (value) {\n            append(value);\n          }\n        }}\n      >\n        <Button\n          className=\"mt-12\"\n          variant=\"link\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n        >\n          <Trans message=\"Add another policy\" />\n        </Button>\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {RouteObject} from 'react-router-dom';\n\nexport const AppAdminRoutes: RouteObject[] = [];\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport function useUpdateCustomPage(endpoint?: string) {\n  const {pageId} = useParams();\n  const finalEndpoint = `${endpoint || 'custom-pages'}/${pageId}`;\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      updatePage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page updated'));\n    },\n  });\n}\n\nfunction updatePage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.put(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {useState} from 'react';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\nexport function ArticleEditorTitle() {\n  const [editingTitle, setEditingTitle] = useState(false);\n  const {trans} = useTrans();\n  const form = useFormContext<CreateCustomPagePayload>();\n  const watchedTitle = form.watch('title');\n\n  const titlePlaceholder = trans({message: 'Title'});\n\n  if (editingTitle) {\n    return (\n      <FormTextField\n        placeholder={titlePlaceholder}\n        autoFocus\n        className=\"mb-30\"\n        onBlur={() => {\n          setEditingTitle(false);\n        }}\n        name=\"title\"\n        required\n      />\n    );\n  }\n  return (\n    <h1\n      tabIndex={0}\n      onClick={() => {\n        setEditingTitle(true);\n      }}\n      onFocus={() => {\n        setEditingTitle(true);\n      }}\n      className={clsx(\n        'hover:bg-primary/focus rounded cursor-pointer',\n        !watchedTitle && 'text-muted'\n      )}\n    >\n      {watchedTitle || titlePlaceholder}\n      <EditIcon className=\"icon-sm mx-8 mt-8 align-top text-muted\" />\n    </h1>\n  );\n}\n","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport {RefCallBack} from 'react-hook-form';\nimport {Button} from './buttons/button';\nimport {LinkIcon} from '../icons/material/Link';\nimport {TextField} from './forms/input-field/text-field/text-field';\nimport {Trans} from '../i18n/trans';\nimport {useSettings} from '../core/settings/use-settings';\nimport {slugifyString} from '@common/utils/string/slugify-string';\n\nexport interface SlugEditorProps {\n  prefix?: string;\n  suffix?: string;\n  host?: string;\n  value?: string | null;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  className?: string;\n  inputRef?: RefCallBack;\n  onInputBlur?: () => void;\n  showLinkIcon?: boolean;\n  pattern?: string;\n  minLength?: number;\n  maxLength?: number;\n  hideButton?: boolean;\n}\nexport function SlugEditor({\n  host,\n  value: initialValue = '',\n  placeholder,\n  onChange,\n  className,\n  inputRef,\n  onInputBlur,\n  showLinkIcon = true,\n  pattern,\n  minLength,\n  maxLength,\n  hideButton,\n  ...props\n}: SlugEditorProps) {\n  const {base_url} = useSettings();\n  const prefix = props.prefix ? `/${props.prefix}` : '';\n  const suffix = props.suffix ? `/${props.suffix}` : '';\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  host = host || base_url;\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleSubmit = () => {\n    if (!isEditing) {\n      setIsEditing(true);\n    } else {\n      setIsEditing(false);\n      if (value) {\n        onChange?.(value);\n      }\n    }\n  };\n\n  let preview: string = '';\n  if (value) {\n    preview = value;\n  } else if (placeholder) {\n    preview = slugifyString(placeholder);\n  }\n\n  return (\n    // can't use <form/> here as component might be used inside another form\n    <div className={clsx('flex items-center', className)}>\n      {showLinkIcon && <LinkIcon className=\"icon-md text-muted\" />}\n      <div className=\"text-primary ml-6 mr-14\">\n        {host}\n        {prefix}\n        {!isEditing && preview && (\n          <Fragment>\n            <span>/</span>\n            <span className=\"font-medium\">{preview}</span>\n          </Fragment>\n        )}\n        {!isEditing ? suffix : null}\n      </div>\n      {isEditing && (\n        <TextField\n          pattern={pattern}\n          minLength={minLength}\n          maxLength={maxLength}\n          onKeyDown={e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n            }\n          }}\n          ref={inputRef}\n          aria-label=\"slug\"\n          autoFocus\n          className=\"mr-14\"\n          size=\"2xs\"\n          value={value as string}\n          onBlur={onInputBlur}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n        />\n      )}\n      {!hideButton && (\n        <Button\n          type=\"button\"\n          color=\"chip\"\n          variant=\"outline\"\n          size=\"2xs\"\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          {isEditing ? <Trans message=\"Save\" /> : <Trans message=\"Edit\" />}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const UndoIcon = createSvgIcon(\n  <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\n, 'UndoOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RedoIcon = createSvgIcon(\n  <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\n, 'RedoOutlined');\n","import React from 'react';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {UndoIcon} from '../../icons/material/Undo';\nimport {RedoIcon} from '../../icons/material/Redo';\nimport {MenubarButtonProps} from './menubar-button-props';\n\nexport function HistoryButtons({editor}: MenubarButtonProps) {\n  return (\n    <span>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().undo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.undo();\n        }}\n      >\n        <UndoIcon />\n      </IconButton>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().redo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.redo();\n        }}\n      >\n        <RedoIcon />\n      </IconButton>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const CodeIcon = createSvgIcon(\n  <path d=\"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\" />\n, 'CodeOutlined');\n","import {Button} from '../../ui/buttons/button';\nimport {CodeIcon} from '../../icons/material/Code';\nimport {Trans} from '../../i18n/trans';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {AceDialog} from '../../ace-editor/ace-dialog';\nimport {Editor} from '@tiptap/react';\nimport React from 'react';\n\ninterface ModeButtonProps {\n  editor: Editor;\n}\nexport function ModeButton({editor}: ModeButtonProps) {\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          editor?.commands.setContent(newValue);\n        }\n      }}\n    >\n      <Button variant=\"text\" startIcon={<CodeIcon />}>\n        <Trans message=\"Source\" />\n      </Button>\n      <AceDialog\n        title={<Trans message=\"Source code\" />}\n        defaultValue={editor.getHTML()}\n      />\n    </DialogTrigger>\n  );\n}\n","export function Divider() {\n  return <div className=\"self-stretch mx-4 w-1 bg-divider flex-shrink-0\" />;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatBoldIcon = createSvgIcon(\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n, 'FormatBoldOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatItalicIcon = createSvgIcon(\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\" />\n, 'FormatItalicOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatUnderlinedIcon = createSvgIcon(\n  <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\n, 'FormatUnderlinedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {FormatBoldIcon} from '../../icons/material/FormatBold';\nimport {FormatItalicIcon} from '../../icons/material/FormatItalic';\nimport {FormatUnderlinedIcon} from '../../icons/material/FormatUnderlined';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nexport function FontStyleButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bold\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('bold') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBold();\n          }}\n        >\n          <FormatBoldIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Italic\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('italic') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleItalic();\n          }}\n        >\n          <FormatItalicIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Underline\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('underline') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleUnderline();\n          }}\n        >\n          <FormatUnderlinedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListBulletedIcon = createSvgIcon(\n  <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\n, 'FormatListBulletedOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListNumberedIcon = createSvgIcon(\n  <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\n, 'FormatListNumberedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {FormatListBulletedIcon} from '../../icons/material/FormatListBulleted';\nimport {FormatListNumberedIcon} from '../../icons/material/FormatListNumbered';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ListButtons({editor, size}: MenubarButtonProps) {\n  const bulletActive = editor.isActive('bulletList');\n  const orderedActive = editor.isActive('orderedList');\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bulleted list\" />}>\n        <IconButton\n          size={size}\n          color={bulletActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBulletList();\n          }}\n        >\n          <FormatListBulletedIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Numbered list\" />}>\n        <IconButton\n          size={size}\n          color={orderedActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleOrderedList();\n          }}\n        >\n          <FormatListNumberedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {Editor} from '@tiptap/react';\n\ninterface Props {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function insertLinkIntoTextEditor(\n  editor: Editor,\n  {text, target, href}: Props\n) {\n  // no selection, insert new link with specified text\n  if (editor.state.selection.empty && text) {\n    editor.commands.insertContent(\n      `<a href=\"${href}\" target=\"${target}\">${text}</a>`\n    );\n  } else if (!editor.state.selection.empty) {\n    // no href provided, remove link from selection\n    if (!href) {\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\n    } else {\n      // add link to selection\n      editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .setLink({href: href, target})\n        .run();\n    }\n  }\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport clsx from 'clsx';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {LinkIcon} from '../../icons/material/Link';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {FormSelect, Option} from '../../ui/forms/select/select';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../i18n/trans';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\n\ninterface FormValue {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function LinkButton({editor, size}: MenubarButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Insert link\" />}>\n        <IconButton size={size} className={clsx('flex-shrink-0')}>\n          <LinkIcon />\n        </IconButton>\n      </Tooltip>\n      <LinkDialog editor={editor} />\n    </DialogTrigger>\n  );\n}\n\nfunction LinkDialog({editor}: MenubarButtonProps) {\n  const previousUrl = editor.getAttributes('link').href;\n  const previousText = editor.state.doc.textBetween(\n    editor.state.selection.from,\n    editor.state.selection.to,\n    '',\n  );\n\n  const form = useForm<FormValue>({\n    defaultValues: {href: previousUrl, text: previousText, target: '_blank'},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            insertLinkIntoTextEditor(editor, value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"href\"\n            label={<Trans message=\"URL\" />}\n            autoFocus\n            type=\"url\"\n            className=\"mb-20\"\n          />\n          <FormTextField\n            name=\"text\"\n            label={<Trans message=\"Text to display\" />}\n            className=\"mb-20\"\n          />\n          <FormSelect\n            selectionMode=\"single\"\n            name=\"target\"\n            label={<Trans message=\"Open link in...\" />}\n          >\n            <Option value=\"_self\">\n              <Trans message=\"Current window\" />\n            </Option>\n            <Option value=\"_blank\">\n              <Trans message=\"New window\" />\n            </Option>\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\">\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ImageIcon = createSvgIcon(\n  <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z\" />\n, 'ImageOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {ImageIcon} from '../../icons/material/Image';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {useActiveUpload} from '../../uploads/uploader/use-active-upload';\nimport {UploadInputType} from '../../uploads/types/upload-input-config';\nimport {Disk} from '../../uploads/types/backend-metadata';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nconst TwoMB = 2097152;\n\ninterface Props extends MenubarButtonProps {\n  diskPrefix?: string;\n}\n\nexport function ImageButton({editor, size, diskPrefix = 'page_media'}: Props) {\n  const {selectAndUploadFile} = useActiveUpload();\n\n  const handleUpload = () => {\n    selectAndUploadFile({\n      showToastOnRestrictionFail: true,\n      restrictions: {\n        allowedFileTypes: [UploadInputType.image],\n        maxFileSize: TwoMB,\n      },\n      metadata: {\n        diskPrefix: diskPrefix,\n        disk: Disk.public,\n      },\n      onSuccess: entry => {\n        editor.commands.focus();\n        editor.commands.setImage({\n          src: entry.url,\n        });\n      },\n    });\n  };\n\n  return (\n    <Tooltip label={<Trans message=\"Insert image\" />}>\n      <IconButton\n        size={size}\n        onClick={handleUpload}\n        className={clsx('flex-shrink-0')}\n      >\n        <ImageIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatClearIcon = createSvgIcon(\n  <path d=\"M20 8V5H6.39l3 3h1.83l-.55 1.28 2.09 2.1L14.21 8zM3.41 4.86 2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21l1.41-1.41z\" />\n, 'FormatClearOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {FormatClearIcon} from '../../icons/material/FormatClear';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ClearFormatButton({editor, size}: MenubarButtonProps) {\n  return (\n    <Tooltip label={<Trans message=\"Clear formatting\" />}>\n      <IconButton\n        className={clsx('flex-shrink-0')}\n        size={size}\n        onClick={() => {\n          editor.chain().focus().clearNodes().unsetAllMarks().run();\n        }}\n      >\n        <FormatClearIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const HorizontalRuleIcon = createSvgIcon(\n  <path fillRule=\"evenodd\" d=\"M4 11h16v2H4z\" />\n, 'HorizontalRuleOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PriorityHighIcon = createSvgIcon(\n  [<circle cx=\"12\" cy=\"19\" r=\"2\" key=\"0\" />,<path d=\"M10 3h4v12h-4z\" key=\"1\" />,]\n, 'PriorityHighOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const NoteIcon = createSvgIcon(\n  <path d=\"M16 4H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99h16c1.1 0 2-.9 2-2v-8l-6-6zM4 18.01V6h11v5h5v7.01H4z\" />\n, 'NoteOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SmartDisplayIcon = createSvgIcon(\n  [<path d=\"M9.5 7.5v9l7-4.5z\" key=\"0\" />,<path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14.01H4V5.99h16v12.02z\" key=\"1\" />,]\n, 'SmartDisplayOutlined');\n","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {HorizontalRuleIcon} from '../../icons/material/HorizontalRule';\nimport {PriorityHighIcon} from '../../icons/material/PriorityHigh';\nimport {WarningIcon} from '../../icons/material/Warning';\nimport {NoteIcon} from '../../icons/material/Note';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {MoreVertIcon} from '../../icons/material/MoreVert';\nimport {SmartDisplayIcon} from '../../icons/material/SmartDisplay';\nimport {Form} from '../../ui/forms/form';\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../ui/buttons/button';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../ui/navigation/menu/menu-trigger';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../i18n/trans';\n\nexport function InsertMenuTrigger({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'embed' | false>(false);\n  return (\n    <>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'hr') {\n            editor.commands.focus();\n            editor.commands.setHorizontalRule();\n          } else if (key === 'embed') {\n            setDialog('embed');\n          } else {\n            editor.commands.focus();\n            editor.commands.addInfo({type: key as any});\n          }\n        }}\n      >\n        <IconButton\n          variant=\"text\"\n          size={size}\n          className={clsx('flex-shrink-0')}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"hr\" startIcon={<HorizontalRuleIcon />}>\n            <Trans message=\"Horizontal rule\" />\n          </MenuItem>\n          <MenuItem value=\"embed\" startIcon={<SmartDisplayIcon />}>\n            <Trans message=\"Embed\" />\n          </MenuItem>\n          <MenuItem value=\"important\" startIcon={<PriorityHighIcon />}>\n            <Trans message=\"Important\" />\n          </MenuItem>\n          <MenuItem value=\"warning\" startIcon={<WarningIcon />}>\n            <Trans message=\"Warning\" />\n          </MenuItem>\n          <MenuItem value=\"success\" startIcon={<NoteIcon />}>\n            <Trans message=\"Note\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={() => {\n          setDialog(false);\n        }}\n      >\n        <EmbedDialog editor={editor} />\n      </DialogTrigger>\n    </>\n  );\n}\n\nfunction EmbedDialog({editor}: MenubarButtonProps) {\n  const previousSrc = editor.getAttributes('embed').src;\n  const form = useForm<{src: string}>({\n    defaultValues: {src: previousSrc},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            editor.commands.setEmbed(value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"src\"\n            label={<Trans message=\"Embed URL\" />}\n            autoFocus\n            type=\"url\"\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isValid}\n          variant=\"flat\"\n          color=\"primary\"\n        >\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ReactNode} from 'react';\nimport {isMac} from '@react-aria/utils';\n\ninterface Props {\n  children: ReactNode;\n  modifier?: boolean;\n  separator?: string;\n}\nexport function Keyboard({children, modifier, separator = '+'}: Props) {\n  const modKey = isMac() ? (\n    <span className=\"text-base align-middle\">⌘</span>\n  ) : (\n    'Ctrl'\n  );\n  return (\n    <kbd className=\"text-xs text-muted\">\n      {modifier && (\n        <>\n          {modKey}\n          {separator}\n        </>\n      )}\n      {children}\n    </kbd>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Button} from '../../ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '../../icons/material/KeyboardArrowDown';\nimport {Keyboard} from '../../ui/keyboard/keyboard';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../ui/navigation/menu/menu-trigger';\nimport {Trans} from '../../i18n/trans';\n\ntype Level = 1 | 2 | 3 | 4;\n\nexport function FormatMenuTrigger({editor, size}: MenubarButtonProps) {\n  return (\n    <MenuTrigger\n      floatingMinWidth=\"w-256\"\n      onItemSelected={key => {\n        editor.commands.focus();\n        if (typeof key === 'string' && key.startsWith('h')) {\n          editor.commands.toggleHeading({\n            level: parseInt(key.replace('h', '')) as Level,\n          });\n        } else if (key === 'code') {\n          editor.commands.toggleCode();\n        } else if (key === 'strike') {\n          editor.commands.toggleStrike();\n        } else if (key === 'super') {\n          editor.commands.toggleSuperscript();\n        } else if (key === 'sub') {\n          editor.commands.toggleSubscript();\n        } else if (key === 'blockquote') {\n          editor.commands.toggleBlockquote();\n        } else if (key === 'paragraph') {\n          editor.commands.setParagraph();\n        }\n      }}\n    >\n      <Button\n        className={clsx('flex-shrink-0')}\n        variant=\"text\"\n        size={size}\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Format\" />\n      </Button>\n      <Menu>\n        <MenuItem value=\"h1\" endSection={<Keyboard modifier>Alt+1</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 1}} />\n        </MenuItem>\n        <MenuItem value=\"h2\" endSection={<Keyboard modifier>Alt+2</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 2}} />\n        </MenuItem>\n        <MenuItem value=\"h3\" endSection={<Keyboard modifier>Alt+3</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 3}} />\n        </MenuItem>\n        <MenuItem value=\"h4\" endSection={<Keyboard modifier>Alt+4</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 4}} />\n        </MenuItem>\n        <MenuItem value=\"code\" endSection={<Keyboard modifier>E</Keyboard>}>\n          <Trans message=\"Code\" />\n        </MenuItem>\n        <MenuItem\n          value=\"strike\"\n          endSection={<Keyboard modifier>Shift+X</Keyboard>}\n        >\n          <Trans message=\"Strikethrough\" />\n        </MenuItem>\n        <MenuItem\n          value=\"super\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              .\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Superscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"sub\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              ,\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Subscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"blockquote\"\n          endSection={<Keyboard modifier>Shift+B</Keyboard>}\n        >\n          <Trans message=\"Blockquote\" />\n        </MenuItem>\n        <MenuItem\n          value=\"paragraph\"\n          endSection={<Keyboard modifier>Alt+0</Keyboard>}\n        >\n          <Trans message=\"Paragraph\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorTextIcon = createSvgIcon(\n  <path d=\"M2 20h20v4H2v-4zm3.49-3h2.42l1.27-3.58h5.65L16.09 17h2.42L13.25 3h-2.5L5.49 17zm4.42-5.61 2.03-5.79h.12l2.03 5.79H9.91z\" />\n, 'FormatColorTextOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorFillIcon = createSvgIcon(\n  <path d=\"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\" />\n, 'FormatColorFillOutlined');\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {FormatColorTextIcon} from '../../icons/material/FormatColorText';\nimport {ColorPickerDialog} from '../../ui/color-picker/color-picker-dialog';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {FormatColorFillIcon} from '../../icons/material/FormatColorFill';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\n\nexport function ColorButtons({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'text' | 'bg' | false>(false);\n  const textActive = editor.getAttributes('textStyle').color;\n  const backgroundActive = editor.getAttributes('textStyle').backgroundColor;\n  return (\n    <Fragment>\n      <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n        <IconButton\n          size={size}\n          color={textActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('text');\n          }}\n        >\n          <FormatColorTextIcon />\n        </IconButton>\n        <IconButton\n          size={size}\n          color={backgroundActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('bg');\n          }}\n        >\n          <FormatColorFillIcon />\n        </IconButton>\n      </span>\n      <DialogTrigger\n        defaultValue={dialog === 'text' ? '#000000' : '#FFFFFF'}\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={newValue => {\n          if (newValue) {\n            if (dialog === 'text') {\n              editor.commands.setColor(newValue);\n            } else {\n              editor.commands.setBackgroundColor(newValue);\n            }\n          }\n          setDialog(false);\n        }}\n      >\n        <ColorPickerDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignLeftIcon = createSvgIcon(\n  <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignLeftOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignCenterIcon = createSvgIcon(\n  <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\n, 'FormatAlignCenterOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignRightIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignRightOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignJustifyIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\n, 'FormatAlignJustifyOutlined');\n","import clsx from 'clsx';\nimport {ComponentType} from 'react';\nimport {FormatAlignLeftIcon} from '../../icons/material/FormatAlignLeft';\nimport {FormatAlignCenterIcon} from '../../icons/material/FormatAlignCenter';\nimport {FormatAlignRightIcon} from '../../icons/material/FormatAlignRight';\nimport {FormatAlignJustifyIcon} from '../../icons/material/FormatAlignJustify';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../ui/navigation/menu/menu-trigger';\nimport {Trans} from '../../i18n/trans';\nimport {message} from '../../i18n/message';\n\nconst iconMap = {\n  left: {\n    icon: FormatAlignLeftIcon,\n    label: message('Align left'),\n  },\n  center: {\n    icon: FormatAlignCenterIcon,\n    label: message('Align center'),\n  },\n  right: {\n    icon: FormatAlignRightIcon,\n    label: message('Align right'),\n  },\n  justify: {\n    icon: FormatAlignJustifyIcon,\n    label: message('Justify'),\n  },\n};\n\nexport function AlignButtons({editor, size}: MenubarButtonProps) {\n  const activeKey = (Object.keys(iconMap).find(key => {\n    return editor.isActive({textAlign: key});\n  }) || 'left') as keyof typeof iconMap;\n  const ActiveIcon: ComponentType = activeKey\n    ? iconMap[activeKey].icon\n    : iconMap.left.icon;\n\n  return (\n    <MenuTrigger\n      floatingWidth=\"auto\"\n      selectionMode=\"single\"\n      selectedValue={activeKey}\n      onSelectionChange={key => {\n        editor.commands.focus();\n        editor.commands.setTextAlign(key as string);\n      }}\n    >\n      <IconButton\n        size={size}\n        color={activeKey ? 'primary' : null}\n        className={clsx('flex-shrink-0')}\n      >\n        <ActiveIcon />\n      </IconButton>\n      <Menu>\n        {Object.entries(iconMap).map(([name, config]) => {\n          const Icon = config.icon;\n          return (\n            <MenuItem\n              key={name}\n              value={name}\n              startIcon={<Icon size=\"md\" />}\n              capitalizeFirst\n            >\n              <Trans message={config.label.message} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentDecreaseIcon = createSvgIcon(\n  <path d=\"M11 17h10v-2H11v2zm-8-5 4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentDecreaseOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentIncreaseIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentIncreaseOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {FormatIndentDecreaseIcon} from '../../icons/material/FormatIndentDecrease';\nimport {FormatIndentIncreaseIcon} from '../../icons/material/FormatIndentIncrease';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nexport function IndentButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Decrease indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.outdent();\n          }}\n        >\n          <FormatIndentDecreaseIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Increase indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.indent();\n          }}\n        >\n          <FormatIndentIncreaseIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {CodeIcon} from '../../icons/material/Code';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../ui/navigation/menu/menu-trigger';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\n\nexport function CodeBlockMenuTrigger({editor, size}: MenubarButtonProps) {\n  const language = editor.getAttributes('codeBlock').language || '';\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={language}\n      onSelectionChange={key => {\n        editor.commands.toggleCodeBlock({language: key as string});\n      }}\n    >\n      <Tooltip label={<Trans message=\"Codeblock\" />}>\n        <IconButton\n          className={clsx('flex-shrink-0')}\n          size={size}\n          color={language ? 'primary' : null}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu>\n        <MenuItem value=\"html\">HTML</MenuItem>\n        <MenuItem value=\"javascript\">JavaScript</MenuItem>\n        <MenuItem value=\"css\">CSS</MenuItem>\n        <MenuItem value=\"php\">PHP</MenuItem>\n        <MenuItem value=\"shell\">Shell</MenuItem>\n        <MenuItem value=\"bash\">Bash</MenuItem>\n        <MenuItem value=\"ruby\">Ruby</MenuItem>\n        <MenuItem value=\"python\">Python</MenuItem>\n        <MenuItem value=\"java\">Java</MenuItem>\n        <MenuItem value=\"c++\">C++</MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const UnfoldLessIcon = createSvgIcon(\n  <path d=\"M7.41 18.59 8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z\" />\n, 'UnfoldLessOutlined');\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Divider} from '@common/text-editor/menubar/divider';\nimport {FontStyleButtons} from '@common/text-editor/menubar/font-style-buttons';\nimport {ListButtons} from '@common/text-editor/menubar/list-buttons';\nimport {LinkButton} from '@common/text-editor/menubar/link-button';\nimport {ImageButton} from '@common/text-editor/menubar/image-button';\nimport {ClearFormatButton} from '@common/text-editor/menubar/clear-format-button';\nimport {InsertMenuTrigger} from '@common/text-editor/menubar/insert-menu-trigger';\nimport {FormatMenuTrigger} from '@common/text-editor/menubar/format-menu-trigger';\nimport {ColorButtons} from '@common/text-editor/menubar/color-buttons';\nimport {AlignButtons} from '@common/text-editor/menubar/align-buttons';\nimport {IndentButtons} from '@common/text-editor/menubar/indent-buttons';\nimport {CodeBlockMenuTrigger} from '@common/text-editor/menubar/code-block-menu-trigger';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {UnfoldMoreIcon} from '@common/icons/material/UnfoldMore';\nimport {UnfoldLessIcon} from '@common/icons/material/UnfoldLess';\n\nconst MenubarRowClassName =\n  'flex items-center px-4 h-42 text-muted border-b overflow-hidden';\n\ninterface Props extends MenubarButtonProps {\n  justify?: string;\n  hideInsertButton?: boolean;\n  imageDiskPrefix?: string;\n}\nexport function ArticleBodyEditorMenubar({\n  editor,\n  size = 'md',\n  justify = 'justify-center',\n  hideInsertButton = false,\n  imageDiskPrefix,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const [extendedVisible, setExtendedVisible] = useState(false);\n  return (\n    <div className={clsx(extendedVisible ? 'h-84' : 'h-42')}>\n      <div className={clsx(MenubarRowClassName, justify, 'relative z-20')}>\n        <FormatMenuTrigger editor={editor} size={size} />\n        <Divider />\n        <FontStyleButtons editor={editor} size={size} />\n        <Divider />\n        <AlignButtons editor={editor} size={size} />\n        <IndentButtons editor={editor} size={size} />\n        <Divider />\n        {isMobile ? (\n          <IconButton\n            className=\"flex-shrink-0\"\n            color={extendedVisible ? 'primary' : null}\n            size={size}\n            onClick={() => {\n              setExtendedVisible(!extendedVisible);\n            }}\n          >\n            {extendedVisible ? <UnfoldLessIcon /> : <UnfoldMoreIcon />}\n          </IconButton>\n        ) : (\n          <ExtendedButtons\n            editor={editor}\n            size={size}\n            hideInsertButton={hideInsertButton}\n            imageDiskPrefix={imageDiskPrefix}\n          />\n        )}\n      </div>\n      <AnimatePresence>\n        {extendedVisible && (\n          <m.div\n            className={clsx(\n              MenubarRowClassName,\n              justify,\n              'absolute flex h-full w-full',\n            )}\n            initial={{y: '-100%'}}\n            animate={{y: 0}}\n            exit={{y: '-100%'}}\n          >\n            <ExtendedButtons\n              editor={editor}\n              size={size}\n              imageDiskPrefix={imageDiskPrefix}\n            />\n          </m.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nfunction ExtendedButtons({\n  editor,\n  size = 'md',\n  hideInsertButton,\n  imageDiskPrefix,\n}: Props) {\n  return (\n    <Fragment>\n      <ListButtons editor={editor} size={size} />\n      <Divider />\n      <LinkButton editor={editor} size={size} />\n      <ImageButton editor={editor} size={size} diskPrefix={imageDiskPrefix} />\n      {!hideInsertButton && <InsertMenuTrigger editor={editor} size={size} />}\n      <Divider />\n      <ColorButtons editor={editor} size={size} />\n      <Divider />\n      <CodeBlockMenuTrigger editor={editor} size={size} />\n      <ClearFormatButton editor={editor} size={size} />\n    </Fragment>\n  );\n}\n","import {SlugEditor, SlugEditorProps} from '@common/ui/slug-editor';\nimport {useController, useFormContext} from 'react-hook-form';\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useStickySentinel} from '@common/utils/hooks/sticky-sentinel';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {Button} from '@common/ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport {Trans} from '@common/i18n/trans';\nimport {HistoryButtons} from '@common/text-editor/menubar/history-buttons';\nimport {ModeButton} from '@common/text-editor/menubar/mode-button';\nimport {ArticleBodyEditorMenubar} from './article-body-editor-menubar';\nimport {Editor} from '@tiptap/react';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface StickyHeaderProps {\n  editor: Editor;\n  allowSlugEditing?: boolean;\n  onSave?: (editorContent: string) => void;\n  saveButton?: ReactNode;\n  backLink: string;\n  isLoading?: boolean;\n  slugPrefix?: string;\n  imageDiskPrefix?: string;\n}\nexport function ArticleEditorStickyHeader({\n  editor,\n  allowSlugEditing = true,\n  onSave,\n  saveButton,\n  isLoading = false,\n  backLink,\n  slugPrefix = 'pages',\n  imageDiskPrefix,\n}: StickyHeaderProps) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Fragment>\n      <div ref={sentinelRef} />\n      <div\n        className={clsx(\n          'sticky top-0 z-10 mb-20 bg-paper',\n          isSticky && 'shadow',\n        )}\n      >\n        <div className=\"flex items-center justify-between gap-20 border-b px-20 py-10 text-muted sm:justify-start\">\n          {!isMobile && (\n            <Fragment>\n              <Button\n                variant=\"text\"\n                size=\"sm\"\n                elementType={Link}\n                to={backLink}\n                relative=\"path\"\n                startIcon={<ArrowBackIcon />}\n              >\n                <Trans message=\"Back\" />\n              </Button>\n              <div className=\"mr-auto\">\n                {allowSlugEditing && (\n                  <FormSlugEditor\n                    name=\"slug\"\n                    showLinkIcon={false}\n                    prefix={slugPrefix}\n                  />\n                )}\n              </div>\n            </Fragment>\n          )}\n          {editor && <HistoryButtons editor={editor} />}\n          {!isMobile && <ModeButton editor={editor} />}\n          {onSave && (\n            <SaveButton\n              onSave={() => {\n                onSave(editor.getHTML());\n              }}\n              isLoading={isLoading}\n            />\n          )}\n          {saveButton}\n        </div>\n        <ArticleBodyEditorMenubar\n          editor={editor}\n          size=\"sm\"\n          imageDiskPrefix={imageDiskPrefix}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface SaveButtonProps {\n  onSave: () => void;\n  isLoading: boolean;\n}\nfunction SaveButton({onSave, isLoading}: SaveButtonProps) {\n  const form = useFormContext();\n  const title = form.watch('title');\n\n  return (\n    <Button\n      variant=\"flat\"\n      size=\"sm\"\n      color=\"primary\"\n      className=\"min-w-90\"\n      disabled={isLoading || !title}\n      onClick={() => onSave()}\n    >\n      <Trans message=\"Save\" />\n    </Button>\n  );\n}\n\ninterface FormSlugEditorProps extends SlugEditorProps {\n  name: string;\n}\nfunction FormSlugEditor({name, ...other}: FormSlugEditorProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n  const manuallyChanged = useRef(false);\n\n  const {watch, setValue} = useFormContext<CreateCustomPagePayload>();\n\n  useEffect(() => {\n    const subscription = watch((formVal, {name: fieldName}) => {\n      // if user has not changed slug manually, set it based on page title field changes\n      if (fieldName === 'title' && !manuallyChanged.current) {\n        setValue('slug', formVal.title);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [watch, setValue]);\n\n  return (\n    <SlugEditor\n      className={clsx(!value && 'invisible')}\n      onChange={e => {\n        manuallyChanged.current = true;\n        onChange(e);\n      }}\n      onInputBlur={onBlur}\n      value={value}\n      inputRef={ref}\n      {...other}\n    />\n  );\n}\n","import {useCustomPage} from '@common/custom-page/use-custom-page';\nimport React, {Fragment, Suspense} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {useUpdateCustomPage} from '@common/admin/custom-pages/requests/use-update-custom-page';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function EditCustomPage() {\n  const query = useCustomPage();\n\n  return query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent page={query.data.page} />\n    </Fragment>\n  ) : (\n    <div className=\"relative w-full h-full\">\n      <PageStatus query={query} />\n    </div>\n  );\n}\n\ninterface PageContentProps {\n  page: CustomPage;\n}\nfunction PageContent({page}: PageContentProps) {\n  const navigate = useNavigate();\n  const crupdatePage = useUpdateCustomPage();\n  const form = useForm<CreateCustomPagePayload>({\n    defaultValues: {\n      title: page.title,\n      slug: page.slug,\n      body: page.body,\n    },\n  });\n\n  const handleSave = (editorContent: string) => {\n    crupdatePage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../..', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor initialContent={page.body}>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                backLink=\"../..\"\n                isLoading={crupdatePage.isPending}\n                onSave={handleSave}\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport interface CreateCustomPagePayload {\n  title?: string;\n  body?: string;\n  slug?: string;\n  hide_nav?: boolean;\n}\n\nexport function useCreateCustomPage(endpoint?: string) {\n  const finalEndpoint = endpoint || 'custom-pages';\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      createPage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page created'));\n    },\n  });\n}\n\nfunction createPage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.post(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {Suspense} from 'react';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {\n  CreateCustomPagePayload,\n  useCreateCustomPage,\n} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function CreateCustomPage() {\n  const navigate = useNavigate();\n  const createPage = useCreateCustomPage();\n  const form = useForm<CreateCustomPagePayload>();\n\n  const handleSave = (editorContent: string) => {\n    createPage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                isLoading={createPage.isPending}\n                onSave={handleSave}\n                backLink=\"../\"\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","export default \"__VITE_ASSET__03cbd387__\"","import {useTrans} from '@common/i18n/use-trans';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {Select} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\nexport interface FontSelectorFilterValue {\n  query: string;\n  category: string;\n}\n\ninterface FiltersHeaderProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorFilters({\n  state: {filters, setFilters},\n}: FiltersHeaderProps) {\n  const {trans} = useTrans();\n  return (\n    <div className=\"mb-24 items-center gap-24 @xs:flex\">\n      <TextField\n        className=\"mb-12 flex-auto @xs:mb-0\"\n        value={filters.query}\n        onChange={e => {\n          setFilters({\n            ...filters,\n            query: e.target.value,\n          });\n        }}\n        startAdornment={<SearchIcon />}\n        placeholder={trans(message('Search fonts'))}\n      />\n      <Select\n        className=\"flex-auto\"\n        selectionMode=\"single\"\n        selectedValue={filters.category}\n        onSelectionChange={value => {\n          setFilters({\n            ...filters,\n            category: value as string,\n          });\n        }}\n      >\n        <Item value=\"\">\n          <Trans message=\"All categories\" />\n        </Item>\n        <Item value=\"serif\">\n          <Trans message=\"Serif\" />\n        </Item>\n        <Item value=\"sans-serif\">\n          <Trans message=\"Sans serif\" />\n        </Item>\n        <Item value=\"display\">\n          <Trans message=\"Display\" />\n        </Item>\n        <Item value=\"handwriting\">\n          <Trans message=\"Handwriting\" />\n        </Item>\n        <Item value=\"monospace\">\n          <Trans message=\"Monospace\" />\n        </Item>\n      </Select>\n    </div>\n  );\n}\n","import {useCollator} from './use-collator';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean;\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean;\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean;\n}\n\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  const collator = useCollator({\n    usage: 'search',\n    ...options,\n  });\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return (\n        collator.compare(string.slice(0, substring.length), substring) === 0\n      );\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      const sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        const slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import {FontConfig} from '@common/http/value-lists';\nimport {message} from '@common/i18n/message';\n\nexport const BrowserSafeFonts: FontConfig[] = [\n  {\n    label: message('System'),\n    family:\n      'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    category: 'sans-serif',\n  },\n  {family: 'Impact, Charcoal, sans-serif', category: 'sans-serif'},\n  {family: 'Arial, Helvetica Neue, Helvetica, sans-serif', category: 'serif'},\n  {family: '\"Comic Sans MS\", cursive, sans-serif', category: 'Handwriting'},\n  {family: 'Century Gothic, sans-serif', category: 'sans-serif'},\n  {family: '\"Courier New\", Courier, monospace', category: 'monospace'},\n  {\n    family: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\n    category: 'sans-serif',\n  },\n  {family: '\"Times New Roman\", Times, serif', category: 'serif'},\n  {family: '\"Lucida Console\", Monaco, monospace', category: 'monospace'},\n  {family: '\"Andele Mono\", monospace, sans-serif', category: 'sans-serif'},\n  {family: 'Verdana, Geneva, sans-serif', category: 'sans-serif'},\n  {\n    family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    category: 'sans-serif',\n  },\n];\n","import {useCallback, useEffect, useMemo, useState} from 'react';\nimport {FontSelectorFilterValue} from '@common/ui/font-selector/font-selector-filters';\nimport {FontConfig, useValueLists} from '@common/http/value-lists';\nimport {useFilter} from '@common/i18n/use-filter';\nimport {BrowserSafeFonts} from '@common/ui/font-picker/browser-safe-fonts';\nimport {chunkArray} from '@common/utils/array/chunk-array';\nimport {loadFonts} from '@common/ui/font-picker/load-fonts';\n\nexport interface FontSelectorState extends UseFontSelectorProps {\n  fonts: FontConfig[];\n  filteredFonts: FontConfig[];\n  pages: FontConfig[][];\n  isLoading: boolean;\n  filters: FontSelectorFilterValue;\n  setFilters: (filters: FontSelectorFilterValue) => void;\n  currentPage: number;\n  setCurrentPage: (page: number) => void;\n}\n\nexport interface UseFontSelectorProps {\n  value?: FontConfig;\n  onChange: (value: FontConfig) => void;\n}\nexport function useFontSelectorState({\n  value,\n  onChange,\n}: UseFontSelectorProps): FontSelectorState {\n  const {data, isLoading} = useValueLists(['googleFonts']);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const [filters, setFilterState] = useState<FontSelectorFilterValue>({\n    query: '',\n    category: value?.category ?? '',\n  });\n  const {contains} = useFilter({\n    sensitivity: 'base',\n  });\n\n  const setFilters = useCallback((filters: FontSelectorFilterValue) => {\n    setFilterState(filters);\n    // reset to first page when searching or changing category\n    setCurrentPage(0);\n  }, []);\n\n  const allFonts = useMemo(() => {\n    return BrowserSafeFonts.concat(data?.googleFonts ?? []);\n  }, [data?.googleFonts]);\n\n  const filteredFonts = useMemo(() => {\n    return allFonts.filter(font => {\n      return (\n        contains(font.family, filters.query) &&\n        (!filters.category ||\n          font.category?.toLowerCase() === filters.category.toLowerCase())\n      );\n    });\n  }, [allFonts, filters, contains]);\n\n  const pages = useMemo(() => {\n    return chunkArray(filteredFonts, 20);\n  }, [filteredFonts]);\n  const fonts = pages[currentPage];\n\n  useEffect(() => {\n    const id = 'font-selector';\n    if (fonts?.length) {\n      loadFonts(fonts, {id});\n    }\n  }, [fonts, currentPage]);\n\n  return {\n    fonts: fonts || [],\n    currentPage,\n    filteredFonts: filteredFonts || [],\n    setCurrentPage,\n    isLoading,\n    filters,\n    setFilters,\n    value,\n    onChange,\n    pages,\n  };\n}\n","import {Trans} from '@common/i18n/trans';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\ninterface FontSelectorPaginationProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorPagination({\n  state: {currentPage = 0, setCurrentPage, filteredFonts, pages},\n}: FontSelectorPaginationProps) {\n  const total = filteredFonts?.length || 0;\n\n  return (\n    <div className=\"flex items-center justify-end gap-24 text-sm mt-30 pt-14 border-t\">\n      {total > 0 && (\n        <div>\n          <Trans\n            message=\":from - :to of :total\"\n            values={{\n              from: currentPage * 20 + 1,\n              to: Math.min((currentPage + 1) * 20, total),\n              total,\n            }}\n          />\n        </div>\n      )}\n      <div className=\"text-muted\">\n        <IconButton\n          disabled={currentPage < 1}\n          onClick={() => {\n            setCurrentPage(Math.max(0, currentPage - 1));\n          }}\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <IconButton\n          disabled={currentPage >= pages.length - 1}\n          onClick={() => {\n            setCurrentPage(currentPage + 1);\n          }}\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport clsx from 'clsx';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport fontImage from './font.svg';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FontSelectorFilters} from '@common/ui/font-selector/font-selector-filters';\nimport {\n  FontSelectorState,\n  UseFontSelectorProps,\n  useFontSelectorState,\n} from '@common/ui/font-selector/font-selector-state';\nimport {FontSelectorPagination} from '@common/ui/font-selector/font-selector-pagination';\nimport {FontConfig} from '@common/http/value-lists';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\n\ninterface FontSelectorProps extends UseFontSelectorProps {\n  className?: string;\n}\nexport function FontSelector(props: FontSelectorProps) {\n  const state = useFontSelectorState(props);\n  return (\n    <div className={props.className}>\n      <FontSelectorFilters state={state} />\n      <AnimatePresence initial={false} mode=\"wait\">\n        <FontList state={state} />\n      </AnimatePresence>\n      <FontSelectorPagination state={state} />\n    </div>\n  );\n}\n\ninterface FontListProps {\n  state: FontSelectorState;\n}\nfunction FontList({state}: FontListProps) {\n  const {isLoading, fonts} = state;\n\n  const gridClassName =\n    'grid gap-24 grid-cols-[repeat(auto-fill,minmax(90px,1fr))] items-start';\n\n  if (isLoading) {\n    return <FontListSkeleton className={gridClassName} />;\n  }\n\n  if (!fonts?.length) {\n    return (\n      <IllustratedMessage\n        className=\"mt-60\"\n        size=\"sm\"\n        image={<SvgImage src={fontImage} />}\n        title={<Trans message=\"No matching fonts\" />}\n        description={\n          <Trans message=\"Try another search query or different category\" />\n        }\n      />\n    );\n  }\n\n  return (\n    <m.div key=\"font-list\" {...opacityAnimation} className={gridClassName}>\n      {fonts?.map(font => (\n        <FontButton key={font.family} font={font} state={state} />\n      ))}\n    </m.div>\n  );\n}\n\ninterface FontButtonProps {\n  font: FontConfig;\n  state: FontSelectorState;\n}\nfunction FontButton({font, state: {value, onChange}}: FontButtonProps) {\n  const isActive = value?.family === font.family;\n  const displayName = font.family.split(',')[0].replace(/\"/g, '');\n\n  return (\n    <ButtonBase\n      key={font.family}\n      display=\"block\"\n      onClick={() => {\n        onChange(font);\n      }}\n    >\n      <span\n        className={clsx(\n          'flex aspect-square items-center justify-center rounded-panel border text-4xl transition-bg-color hover:bg-hover md:text-5xl',\n          isActive && 'ring-2 ring-primary ring-offset-2',\n        )}\n      >\n        <span style={{fontFamily: font.family}}>Aa</span>\n      </span>\n      <span\n        className={clsx(\n          'mt-6 block overflow-hidden overflow-ellipsis whitespace-nowrap text-sm',\n          isActive && 'text-primary',\n        )}\n      >\n        {font.label ? <Trans {...font.label} /> : displayName}\n      </span>\n    </ButtonBase>\n  );\n}\n\ninterface FontListSkeletonProps {\n  className: string;\n}\nfunction FontListSkeleton({className}: FontListSkeletonProps) {\n  const items = Array.from(Array(20).keys());\n  return (\n    <m.div key=\"font-list-skeleton\" {...opacityAnimation} className={className}>\n      {items.map(index => (\n        <div key={index}>\n          <div className=\"aspect-square\">\n            <Skeleton display=\"block\" variant=\"rect\" />\n          </div>\n          <Skeleton className=\"mt-6 text-sm\" />\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {FontSelector} from '@common/ui/font-selector/font-selector';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceValues,\n} from '@common/admin/appearance/appearance-store';\nimport {useParams} from 'react-router-dom';\n\ntype Font = 'appearance.themes.all.1.font';\n\nexport function ThemeFontPanel() {\n  const {setValue, watch} = useFormContext<AppearanceValues>();\n  const {themeIndex} = useParams();\n  const key = `appearance.themes.all.${themeIndex}.font` as Font;\n  return (\n    <FontSelector\n      value={watch(key)}\n      onChange={font => {\n        setValue(key, font, {shouldDirty: true});\n        appearanceState().preview.setThemeFont(font);\n      }}\n    />\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {useFormContext} from 'react-hook-form';\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\nimport {message} from '@common/i18n/message';\nimport {useParams} from 'react-router-dom';\n\nconst radiusMap = {\n  'rounded-none': {\n    label: message('Square'),\n    value: '0px',\n  },\n  'rounded-sm': {\n    label: message('Small'),\n    value: '0.125rem',\n  },\n  'rounded-md': {\n    label: message('Medium'),\n    value: '0.25rem',\n  },\n  'rounded-lg': {\n    label: message('Large'),\n    value: '0.5rem',\n  },\n  'rounded-xl': {\n    label: message('Larger'),\n    value: '0.75rem',\n  },\n  'rounded-full': {\n    label: message('Pill'),\n    value: '9999px',\n  },\n};\n\nexport function ThemeRadiusPanel() {\n  return (\n    <div className=\"space-y-24\">\n      <RadiusSelector\n        label={<Trans message=\"Button rounding\" />}\n        name=\"button-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Input rounding\" />}\n        name=\"input-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Panel rounding\" />}\n        name=\"panel-radius\"\n        hidePill\n      />\n    </div>\n  );\n}\n\ninterface RadiusSelectorProps {\n  label: ReactNode;\n  name: string;\n  hidePill?: boolean;\n}\nfunction RadiusSelector({label, name, hidePill}: RadiusSelectorProps) {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceValues>();\n  const formKey =\n    `appearance.themes.all.${themeIndex}.values.--be-${name}` as 'appearance.themes.all.1.values.--be-button-radius';\n  const currentValue = watch(formKey);\n  return (\n    <div>\n      <div className=\"mb-10 text-sm font-semibold\">{label}</div>\n      <div className=\"grid grid-cols-3 gap-10 text-sm\">\n        {Object.entries(radiusMap)\n          .filter(([key]) => !hidePill || !key.includes('full'))\n          .map(([key, {label, value}]) => (\n            <PreviewButton\n              key={key}\n              radius={key}\n              isActive={value === currentValue}\n              onClick={() => {\n                setValue(formKey, value, {shouldDirty: true});\n              }}\n            >\n              <Trans {...label} />\n            </PreviewButton>\n          ))}\n      </div>\n    </div>\n  );\n}\n\ninterface PreviewButtonProps {\n  radius: string;\n  children: ReactNode;\n  isActive: boolean;\n  onClick: () => void;\n}\nfunction PreviewButton({\n  radius,\n  children,\n  isActive,\n  onClick,\n}: PreviewButtonProps) {\n  return (\n    <ButtonBase\n      display=\"block\"\n      className={clsx(\n        'h-36 border-2 hover:bg-hover',\n        radius,\n        isActive && 'border-primary',\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </ButtonBase>\n  );\n}\n","import {Navigate, RouteObject, useRoutes} from 'react-router-dom';\nimport {AdminLayout} from './admin-layout';\nimport {UserDatatable} from './users/user-datatable';\nimport {AppearanceLayout} from './appearance/appearance-layout';\nimport {MenuList} from './appearance/sections/menus/menu-list';\nimport {MenuEditor} from './appearance/sections/menus/menu-editor';\nimport {MenuItemEditor} from './appearance/sections/menus/menu-item-editor';\nimport {GeneralSection} from './appearance/sections/general-section';\nimport {ThemeList} from './appearance/sections/themes/theme-list';\nimport {SeoSection} from './appearance/sections/seo/seo-section';\nimport {CustomCodeSection} from './appearance/sections/code/custom-code-section';\nimport {CustomPageDatablePage} from './custom-pages/custom-page-datable-page';\nimport {SettingsLayout} from './settings/settings-layout';\nimport {GeneralSettings} from './settings/pages/general-settings';\nimport {ThemeEditor} from './appearance/sections/themes/theme-editor';\nimport {AppSettingsRoutes} from '@app/admin/settings/app-settings-routes';\nimport {SubscriptionSettings} from './settings/pages/subscription-settings';\nimport {LocalizationSettings} from './settings/pages/localization-settings';\nimport {AuthenticationSettings} from './settings/pages/authentication-settings';\nimport {UploadingSettings} from './settings/pages/uploading-settings/uploading-settings';\nimport {OutgoingEmailSettings} from './settings/pages/mail-settings/outgoing-email-settings';\nimport {CacheSettings} from './settings/pages/cache-settings/cache-settings';\nimport {LoggingSettings} from './settings/pages/logging-settings';\nimport {QueueSettings} from './settings/pages/queue-settings';\nimport {RecaptchaSettings} from './settings/pages/recaptcha-settings';\nimport {ReportsSettings} from './settings/pages/reports-settings';\nimport {UpdateUserPage} from './users/update-user-page';\nimport {CreateUserPage} from './users/create-user-page';\nimport {LocalizationIndex} from './translations/localization-index';\nimport {TranslationManagementPage} from './translations/translation-management-page';\nimport {AdsPage} from './ads/ads-page';\nimport React from 'react';\nimport {FullPageLoader} from '../ui/progress/full-page-loader';\nimport {SectionList} from './appearance/section-list';\nimport {RolesIndexPage} from './roles/roles-index-page';\nimport {EditRolePage} from './roles/crupdate-role-page/edit-role-page';\nimport {CreateRolePage} from './roles/crupdate-role-page/create-role-page';\nimport {TagIndexPage} from './tags/tag-index-page';\nimport {FileEntryIndexPage} from './file-entry/file-entry-index-page';\nimport {SubscriptionsIndexPage} from './subscriptions/subscriptions-index-page';\nimport {PlansIndexPage} from './plans/plans-index-page';\nimport {EditPlanPage} from './plans/crupdate-plan-page/edit-plan-page';\nimport {CreatePlanPage} from './plans/crupdate-plan-page/create-plan-page';\nimport {GdprSettings} from './settings/pages/gdpr-settings';\nimport {AuthRoute} from '../auth/guards/auth-route';\nimport {NotFoundPage} from '../ui/not-found-page/not-found-page';\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\nimport {AppAdminRoutes} from '@app/admin/app-admin-routes';\nimport {EditCustomPage} from '@common/admin/custom-pages/edit-custom-page';\nimport {CreateCustomPage} from '@common/admin/custom-pages/create-custom-page';\nimport {ThemeFontPanel} from '@common/admin/appearance/sections/themes/theme-font-panel';\nimport {ThemeRadiusPanel} from '@common/admin/appearance/sections/themes/theme-radius-panel';\n\nconst ReportsPage = React.lazy(() => import('./analytics/admin-report-page'));\n\nconst AdminRouteConfig: RouteObject[] = [\n  {\n    path: 'appearance',\n    element: (\n      <AuthRoute permission=\"appearance.update\">\n        <AppearanceLayout />\n      </AuthRoute>\n    ),\n    children: [\n      {index: true, element: <SectionList />},\n      {path: 'general', element: <GeneralSection />},\n      {path: 'seo-settings', element: <SeoSection />},\n      {path: 'custom-code', element: <CustomCodeSection />},\n      {path: 'themes', element: <ThemeList />},\n      {path: 'themes/:themeIndex', element: <ThemeEditor />},\n      {path: 'themes/:themeIndex/font', element: <ThemeFontPanel />},\n      {path: 'themes/:themeIndex/radius', element: <ThemeRadiusPanel />},\n      {path: 'menus', element: <MenuList />},\n      {path: 'menus/:menuIndex', element: <MenuEditor />},\n      {\n        path: 'menus/:menuIndex/items/:menuItemIndex',\n        element: <MenuItemEditor />,\n      },\n      ...Object.values(AppAppearanceConfig.sections).flatMap(\n        s => s.routes || [],\n      ),\n    ],\n  },\n\n  {\n    path: '/',\n    element: <AdminLayout />,\n    children: [\n      ...AppAdminRoutes,\n      // REPORT PAGE\n      {\n        path: '/',\n        element: (\n          <React.Suspense fallback={<FullPageLoader screen />}>\n            <ReportsPage />\n          </React.Suspense>\n        ),\n      },\n      // USERS\n      {\n        path: 'users',\n        element: (\n          <AuthRoute permission=\"users.update\">\n            <UserDatatable />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'users/new',\n        element: (\n          <AuthRoute permission=\"users.update\">\n            <CreateUserPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'users/:userId/edit',\n        element: (\n          <AuthRoute permission=\"users.update\">\n            <UpdateUserPage />\n          </AuthRoute>\n        ),\n      },\n      // ROLES\n      {\n        path: 'roles',\n        element: (\n          <AuthRoute permission=\"roles.update\">\n            <RolesIndexPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'roles/new',\n        element: (\n          <AuthRoute permission=\"roles.update\">\n            <CreateRolePage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'roles/:roleId/edit',\n        element: (\n          <AuthRoute permission=\"roles.update\">\n            <EditRolePage />\n          </AuthRoute>\n        ),\n      },\n      // SUBSCRIPTIONS and PLANS\n      {\n        path: 'subscriptions',\n        element: (\n          <AuthRoute permission=\"subscriptions.update\">\n            <SubscriptionsIndexPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'plans',\n        element: (\n          <AuthRoute permission=\"plans.update\">\n            <PlansIndexPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'plans/new',\n        element: (\n          <AuthRoute permission=\"plans.update\">\n            <CreatePlanPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'plans/:productId/edit',\n        element: (\n          <AuthRoute permission=\"plans.update\">\n            <EditPlanPage />\n          </AuthRoute>\n        ),\n      },\n      // CUSTOM PAGES\n      {\n        path: 'custom-pages',\n        element: (\n          <AuthRoute permission=\"custom_pages.update\">\n            <CustomPageDatablePage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'custom-pages/new',\n        element: (\n          <AuthRoute permission=\"custom_pages.update\">\n            <CreateCustomPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'custom-pages/:pageId/edit',\n        element: (\n          <AuthRoute permission=\"custom_pages.update\">\n            <EditCustomPage />\n          </AuthRoute>\n        ),\n      },\n      // TAGS\n      {\n        path: 'tags',\n        element: (\n          <AuthRoute permission=\"tags.update\">\n            <TagIndexPage />\n          </AuthRoute>\n        ),\n      },\n      // LOCALIZATIONS\n      {\n        path: 'localizations',\n        element: (\n          <AuthRoute permission=\"localizations.update\">\n            <LocalizationIndex />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'localizations/:localeId/translate',\n        element: <TranslationManagementPage />,\n      },\n      // FILE ENTRIES\n      {\n        path: 'files',\n        element: (\n          <AuthRoute permission=\"files.update\">\n            <FileEntryIndexPage />\n          </AuthRoute>\n        ),\n      },\n      // ADS\n      {\n        path: 'ads',\n        element: (\n          <AuthRoute permission=\"settings.update\">\n            <AdsPage />\n          </AuthRoute>\n        ),\n      },\n      // SETTINGS\n      {\n        path: 'settings',\n        element: (\n          <AuthRoute permission=\"settings.update\">\n            <SettingsLayout />\n          </AuthRoute>\n        ),\n        children: [\n          {index: true, element: <Navigate to=\"general\" replace />},\n          {path: 'general', element: <GeneralSettings />},\n          {path: 'subscriptions', element: <SubscriptionSettings />},\n          {path: 'localization', element: <LocalizationSettings />},\n          {path: 'authentication', element: <AuthenticationSettings />},\n          {path: 'uploading', element: <UploadingSettings />},\n          {path: 'outgoing-email', element: <OutgoingEmailSettings />},\n          {path: 'cache', element: <CacheSettings />},\n          {path: 'analytics', element: <ReportsSettings />},\n          {path: 'logging', element: <LoggingSettings />},\n          {path: 'queue', element: <QueueSettings />},\n          {path: 'recaptcha', element: <RecaptchaSettings />},\n          {path: 'gdpr', element: <GdprSettings />},\n          ...AppSettingsRoutes,\n        ],\n      },\n    ],\n  },\n  {path: '*', element: <NotFoundPage />},\n];\n\nexport default function AdminRoutes() {\n  return useRoutes(AdminRouteConfig);\n}\n"],"names":["endpoint","response","_a","Select","Form","query","FilterList","deleteSelectedRows","exportCsv","banUser","Actions","id","Fragment","ColorPickerTrigger","PermissionSelector","Option","FeatureForm","document","window","Header","sortSession","m","useNavigate","queryClient","updateTags","MenuItem","uploadCors","clearCache","updateUser","createUser","createLocalization","columnConfig","Endpoint","PageContent","updateRole","createRole","createNewTag","updateTag","updateSubscription","updateProduct","syncPlans","value","createProduct","ArticleBodyEditor","createPage","filters","pages","label"],"mappings":"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"}