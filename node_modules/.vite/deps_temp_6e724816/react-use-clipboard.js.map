{
  "version": 3,
  "sources": ["../../react-use-clipboard/src/index.tsx"],
  "sourcesContent": ["import { useState, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\n\ninterface IOptions {\n  /**\n   * Reset the status after a certain number of milliseconds. This is useful\n   * for showing a temporary success message.\n   */\n  successDuration?: number;\n}\n\nexport default function useClipboard(\n  text: string,\n  options?: IOptions\n): [boolean, () => void] {\n  const [isCopied, setIsCopied] = useState(false);\n  const successDuration = options && options.successDuration;\n\n  useEffect(() => {\n    if (isCopied && successDuration) {\n      const id = setTimeout(() => {\n        setIsCopied(false);\n      }, successDuration);\n\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [isCopied, successDuration]);\n\n  return [\n    isCopied,\n    () => {\n      const didCopy = copy(text);\n      setIsCopied(didCopy);\n    },\n  ];\n}\n"],
  "mappings": ";;;;;;;;;;;;;4CAYEA,GACAC,GAAAA;AAAAA,MAAAA,QAEgCC,aAAAA,UAAAA,KAAS,GAAlCC,IAAAA,EAAAA,CAAAA,GAAUC,IAAAA,EAAAA,CAAAA,GACXC,IAAkBJ,KAAWA,EAAQI;AAc3C,aAZAC,aAAAA,WAAU,WAAA;AACR,QAAIH,KAAYE,GAAiB;AAC/B,UAAME,KAAKC,WAAW,WAAA;AACpBJ,UAAAA,KAAY;MAAA,GACXC,CAAAA;AAEH,aAAA,WAAA;AACEI,qBAAaF,EAAAA;MAAAA;IAAAA;EAAAA,GAGhB,CAACJ,GAAUE,CAAAA,CAAAA,GAEP,CACLF,GACA,WAAA;AACE,QAAMO,SAAUC,yBAAAA,SAAKX,CAAAA;AACrBI,MAAYM,EAAAA;EAAAA,CAAAA;AAAAA;",
  "names": ["text", "options", "useState", "isCopied", "setIsCopied", "successDuration", "useEffect", "id", "setTimeout", "clearTimeout", "didCopy", "copy"]
}
