{
  "version": 3,
  "sources": ["../../react-merge-refs/src/index.tsx"],
  "sourcesContent": ["import type * as React from \"react\";\n\nexport function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T> | undefined | null>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n"],
  "mappings": ";;;AAEgB,SAAAA,EACdC,GACsB;AACtB,SAAQC,OAAU;AAChBD,MAAK,QAASE,OAAQ;AAChB,aAAOA,KAAQ,aACjBA,EAAID,CAAK,IACAC,KAAO,SACfA,EAAyC,UAAUD;IAExD,CAAC;EACH;AACF;",
  "names": ["mergeRefs", "refs", "value", "ref"]
}
